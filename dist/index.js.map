{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/events/EventDispatcher.ts","../src/math/Matrix4.ts","../src/events/Events.ts","../src/core/Object3D.ts","../src/splats/SplatData.ts","../src/splats/SplatvData.ts","../src/utils/Converter.ts","../src/math/Box3.ts","../src/math/Matrix3.ts","../src/splats/SingleSplat.ts","../src/utils/Constants.ts","../src/Octree/core/OctreeIterator.ts","../src/math/NewRay.ts","../src/Octree/core/intersectOctree.ts","../src/Octree/core/OctreeRaycaster.ts","../src/Octree/core/RaycastingFlags.ts","../src/Octree/Octree.ts","../src/Octree/core/layout.ts","../src/Octree/core/Octant.ts","../src/Octree/points/PointContainer.ts","../src/Octree/points/RayPointIntersection.ts","../src/Octree/points/PointData.ts","../src/Octree/points/PointOctant.ts","../src/Octree/points/PointOctree.ts","../src/splats/Splat.ts","../src/splats/Splatv.ts","../src/cameras/CameraData.ts","../src/math/Vector4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/utils/LoaderUtils.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/loaders/SplatvLoader.ts","../src/renderers/webgl/programs/ShaderProgram.ts","../src/wasm/data.js","../src/renderers/webgl/utils/RenderData.ts","../src/math/Color32.ts","../src/renderers/webgl/programs/RenderProgram.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/controls/OrbitControls.ts","../src/controls/FPSControls.ts","../src/math/Plane.ts","../src/renderers/webgl/passes/ShaderPass.ts","../src/renderers/webgl/programs/VideoRenderProgram.ts","../src/math/BVH.ts","../src/renderers/webgl/utils/IntersectionTester.ts","../src/math/BVHNode.ts","../src/math/Ray.ts","../src/cameras/CameraHelper.ts","../src/renderers/webgl/programs/individual/CubeVisualisationProgram.ts","../src/utils/Utils.ts","../src/renderers/webgl/utils/Raycaster.ts","../src/renderers/webgl/programs/individual/AxisProgram.ts","../src/renderers/webgl/programs/individual/MultibleCubesProgram.ts","../src/Octree/OctreeHelper.ts"],"sourcesContent":["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    set( x: number, y: number, z: number ) {\n\n        if ( z === undefined ) z = this.z;\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    addVectors(a:Vector3, b:Vector3) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n        \n        return this;\n    }\n    \n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    addScaledVector( v:Vector3, s: number ) {\n\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n\n        return this;\n\n    }\n\n    subVectors(a:Vector3, b:Vector3) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n\n        return this;\n    }\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    sub( v: Vector3 ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    divide(v: number): Vector3;\n    divide(v: Vector3): Vector3;\n    divide(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x / v, this.y / v, this.z / v);\n        } else {\n            return new Vector3(this.x / v.x, this.y / v.y, this.z / v.z);\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    distanceToSquared( v:Vector3 ) {\n\n        const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n        return dx * dx + dy * dy + dz * dz;\n\n    }\n\n    \n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    min(v: Vector3): Vector3 {\n        return new Vector3(Math.min(this.x, v.x), Math.min(this.y, v.y), Math.min(this.z, v.z));\n    }\n\n    max(v: Vector3): Vector3 {\n        return new Vector3(Math.max(this.x, v.x), Math.max(this.y, v.y), Math.max(this.z, v.z));\n    }\n\n    getComponent(axis: number) {\n        switch (axis) {\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            default:\n                throw new Error(`Invalid component index: ${axis}`);\n        }\n    }\n\n    minComponent(): number {\n        if (this.x < this.y && this.x < this.z) {\n            return 0;\n        } else if (this.y < this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    maxComponent(): number {\n        if (this.x > this.y && this.x > this.z) {\n            return 0;\n        } else if (this.y > this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    lengthSq() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    clamp( min:Vector3, max:Vector3 ) {\n\n        // assumes min < max, componentwise\n\n        this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n        this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n        this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n        return this;\n\n    }\n    \n    copy( v: Vector3 ) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    static LookRotation(direction: Vector3): Quaternion {\n        const forward = new Vector3(0, 0, 1);\n        const dot = forward.dot(direction);\n\n        if (Math.abs(dot - -1.0) < 0.000001) {\n            return new Quaternion(0, 1, 0, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            return new Quaternion();\n        }\n\n        const rotAngle = Math.acos(dot);\n        const rotAxis = forward.cross(direction).normalize();\n        return Quaternion.FromAxisAngle(rotAxis, rotAngle);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n","class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n","import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nclass RenderedSplatsChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"renderedSplatsChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent, RenderedSplatsChangedEvent };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport {ObjectChangedEvent, RenderedSplatsChangedEvent} from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n    protected _renderedSplatsChanged = new RenderedSplatsChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n    raiseChangeEvent: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n\n        this.raiseChangeEvent = () => {\n            this.dispatchEvent(this._changeEvent);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport {PointOctree} from \"../Octree/points/PointOctree\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n    \n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n    private _rendered: Uint8Array;\n\n    private removeItemsFromArray: (arr: Float32Array | Uint8Array, start: number, count: number) => Float32Array | Uint8Array;\n    removeVertex:(index: number) => void;\n    removeVertexRange:(index: number, count: number) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => void;\n    \n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n        rendered: Uint8Array | null = null\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n        this._rendered = rendered || new Uint8Array(this._vertexCount).fill(1);\n        \n        this.removeVertex = (index: number) => {\n            if(index < 0 || index >= this._vertexCount) {\n                throw new Error(\"Index out od bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, 4);\n\n            this._vertexCount--;  // reduce vertexCount\n            this.changed = true; \n        }\n        \n        this.removeVertexRange = (index: number, count: number) => {\n            if (index < 0 || index + count > this._vertexCount) {\n                throw new Error(\"Index range out of bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, count * 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, count * 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, count * 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, count * 4);\n\n            this._vertexCount -= count;  // reduce vertexCount\n            this.changed = true;\n        }\n        \n        this.removeItemsFromArray = (arr: Float32Array | Uint8Array, start: number, count: number) => {\n            let part1 = arr.subarray(0, start);\n            let part2 = arr.subarray(start + count, arr.length);\n            let newArr = new (arr.constructor as any)(part1.length + part2.length);\n            newArr.set(part1, 0);\n            newArr.set(part2, part1.length);\n            return newArr;\n        }\n        \n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n        ) => {\n            console.assert(\n                positions.byteLength === this.vertexCount * 3 * 4,\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n            );\n            this._positions = new Float32Array(positions);\n            this._rotations = new Float32Array(rotations);\n            this._scales = new Float32Array(scales);\n            this._colors = new Uint8Array(colors);\n            this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n    }\n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n\n    get rendered() {\n        return this._rendered;\n    }\n}\n\nexport { SplatData };\n","class SplatvData {\n    static RowLength = 64;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n\n    serialize: () => Uint8Array;\n\n    constructor(vertexCount: number, positions: Float32Array, data: Uint32Array, width: number, height: number) {\n        this._vertexCount = vertexCount;\n        this._positions = positions;\n        this._data = data;\n        this._width = width;\n        this._height = height;\n\n        this.serialize = () => {\n            return new Uint8Array(this._data.buffer);\n        };\n    }\n\n    static Deserialize(data: Uint8Array, width: number, height: number): SplatvData {\n        const buffer = new Uint32Array(data.buffer);\n        const f_buffer = new Float32Array(data.buffer);\n        const vertexCount = Math.floor(f_buffer.byteLength / this.RowLength);\n        const positions = new Float32Array(vertexCount * 3);\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[16 * i + 0];\n            positions[3 * i + 1] = f_buffer[16 * i + 1];\n            positions[3 * i + 2] = f_buffer[16 * i + 2];\n            positions[3 * i + 0] = f_buffer[16 * i + 3];\n        }\n        return new SplatvData(vertexCount, positions, buffer, width, height);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n}\n\nexport { SplatvData };\n","import { Quaternion } from \"../math/Quaternion\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Converter {\n    public static SH_C0 = 0.28209479177387814;\n\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\n        header += `element vertex ${vertexCount}\\n`;\n\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\n        for (let i = 0; i < 45; i++) {\n            properties.push(`f_rest_${i}`);\n        }\n        properties.push(\"opacity\");\n        properties.push(\"scale_0\");\n        properties.push(\"scale_1\");\n        properties.push(\"scale_2\");\n        properties.push(\"rot_0\");\n        properties.push(\"rot_1\");\n        properties.push(\"rot_2\");\n        properties.push(\"rot_3\");\n\n        for (const property of properties) {\n            header += `property float ${property}\\n`;\n        }\n        header += \"end_header\\n\";\n\n        const headerBuffer = new TextEncoder().encode(header);\n\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\n        const plyLength = vertexCount * plyRowLength;\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\n\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        const offset = headerBuffer.length;\n        const f_dc_offset = 4 * 3 + 4 * 3;\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\n        const scale_offset = opacity_offset + 4;\n        const rot_offset = scale_offset + 4 * 3;\n        for (let i = 0; i < vertexCount; i++) {\n            const pos0 = f_buffer[8 * i + 0];\n            const pos1 = f_buffer[8 * i + 1];\n            const pos2 = f_buffer[8 * i + 2];\n\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\n\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\n            const opacity = Math.log(alpha / (1 - alpha));\n\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\n\n            let q = new Quaternion(\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n            q = q.normalize();\n\n            const rot0 = q.w;\n            const rot1 = q.x;\n            const rot2 = q.y;\n            const rot3 = q.z;\n\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\n\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\n\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\n\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\n\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\n        }\n\n        return output.buffer;\n    }\n}\n\nexport { Converter };\n","import { Vector3 } from \"./Vector3\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Box3 {\n    constructor(\n        public min: Vector3,\n        public max: Vector3,\n    ) {}\n\n    public contains(point: Vector3) {\n        return (\n            point.x >= this.min.x &&\n            point.x <= this.max.x &&\n            point.y >= this.min.y &&\n            point.y <= this.max.y &&\n            point.z >= this.min.z &&\n            point.z <= this.max.z\n        );\n    }\n\n    public intersects(box: Box3) {\n        return (\n            this.max.x >= box.min.x &&\n            this.min.x <= box.max.x &&\n            this.max.y >= box.min.y &&\n            this.min.y <= box.max.y &&\n            this.max.z >= box.min.z &&\n            this.min.z <= box.max.z\n        );\n    }\n\n    public intersectsBasedOnCenter(box: Box3) {\n        const centerA = this.center();\n        const centerB = box.center();\n\n        const sizeA = this.size();\n        const sizeB = box.size();\n\n        \n        return (\n            Math.abs(centerA.x - centerB.x) <= (sizeA.x / 2 + sizeB.x / 2) &&\n            Math.abs(centerA.y - centerB.y) <= (sizeA.y / 2 + sizeB.y / 2) &&\n            Math.abs(centerA.z - centerB.z) <= (sizeA.z / 2 + sizeB.z / 2)\n        );\n    }\n\n\n    public size() {\n        return this.max.subtract(this.min);\n    }\n\n    public center() {\n        return this.min.add(this.max).divide(2);\n    }\n\n    public expand(point: Vector3) {\n        this.min = this.min.min(point);\n        this.max = this.max.max(point);\n    }\n\n    public permute() {\n        const min = this.min;\n        const max = this.max;\n        this.min = new Vector3(Math.min(min.x, max.x), Math.min(min.y, max.y), Math.min(min.z, max.z));\n        this.max = new Vector3(Math.max(min.x, max.x), Math.max(min.y, max.y), Math.max(min.z, max.z));\n    }\n    \n    public surfaceArea(): number {\n        const width = this.max.x - this.min.x;\n        const height = this.max.y - this.min.y;\n        const depth = this.max.z - this.min.z;\n        return 2 * ((width * height) + (width * depth) + (height * depth));\n    }\n}\n\nexport { Box3 };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n","import {Object3D} from \"../core/Object3D\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport {Vector4} from \"../math/Vector4\";\nimport {SplatData} from \"./SplatData\";\n\nclass SingleSplat {\n\n    private _index: number;\n    private _data: SplatData;\n\n    private _bounds: Box3;\n\n    private _defaultColor: Uint8Array;\n    \n    // private _position: Float32Array;\n    // private _rotation: Float32Array;\n    // private _scale: Float32Array;\n    // private _color: Uint8Array;\n    // private _selected: Uint8Array;\n    // private _rendered: Uint8Array;\n    //\n    // private _colorTransforms: Array<Matrix4> = [];\n    // private _colorTransformsMap: Map<number, number> = new Map();\n\n    recalculateBounds: () => void;\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    \n    constructor(index: number, data: SplatData) { //position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array,\n        this._index = index;\n        this._data = data;\n\n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n        this._defaultColor = new Uint8Array(data.colors.subarray(index * 4, index * 4 + 4));\n        \n        // this._position = position;\n        // this._rotation = rotation;\n        // this._scale = scale;\n        // this._color = color;\n        // this._selected = new Uint8Array([0]);\n        // this._rendered = new Uint8Array([1]);\n\n        this.recalculateBounds = () => {\n            const pos = this.Position;\n            const scl = this.Scale;\n            \n            this._bounds.min = new Vector3(\n                pos[0] - scl[0],\n                pos[1] - scl[1],\n                pos[2] - scl[2]\n            );\n            this._bounds.max = new Vector3(\n                pos[0] + scl[0],\n                pos[1] + scl[1],\n                pos[2] + scl[2]\n            );\n        };\n\n\n        this.translate = (translation: Vector3) => {\n            const pos = this.Position;\n            pos[0] += translation.x;\n            pos[1] += translation.y;\n            pos[2] += translation.z;\n            // this._position[0] += translation.x;\n            // this._position[1] += translation.y;\n            // this._position[2] += translation.z;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const pos = this.Position;\n\n            const x = pos[0];\n            const y = pos[1];\n            const z = pos[2];\n\n            pos[0] = R[0] * x + R[1] * y + R[2] * z;\n            pos[1] = R[3] * x + R[4] * y + R[5] * z;\n            pos[2] = R[6] * x + R[7] * y + R[8] * z;\n\n            const rot = this.Rotation;\n            const currentRotation = new Quaternion(rot[1], rot[2], rot[3], rot[0]);\n\n            const newRot = rotation.multiply(currentRotation);\n            rot[0] = newRot.w;\n            rot[1] = newRot.x;\n            rot[2] = newRot.y;\n            rot[3] = newRot.z;\n            \n            //\n            // const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            //\n            // const x = this._position[0];\n            // const y = this._position[1];\n            // const z = this._position[2];\n            //\n            // this._position[0] = R[0] * x + R[1] * y + R[2] * z;\n            // this._position[1] = R[3] * x + R[4] * y + R[5] * z;\n            // this._position[2] = R[6] * x + R[7] * y + R[8] * z;\n            //\n            // const currentRotation = new Quaternion(\n            //     this._rotation[1],\n            //     this._rotation[2],\n            //     this._rotation[3],\n            //     this._rotation[0],\n            // );\n            //\n            // const newRot = rotation.multiply(currentRotation);\n            // this._rotation[1] = newRot.x;\n            // this._rotation[2] = newRot.y;\n            // this._rotation[3] = newRot.z;\n            // this._rotation[0] = newRot.w;\n        };\n        \n        this.scale = (scale: Vector3) => {\n            const pos = this.Position;\n            const scl = this.Scale;\n\n            pos[0] *= scale.x;\n            pos[1] *= scale.y;\n            pos[2] *= scale.z;\n\n            scl[0] *= scale.x;\n            scl[1] *= scale.y;\n            scl[2] *= scale.z;\n            //\n            // this._position[0] *= scale.x;\n            // this._position[1] *= scale.y;\n            // this._position[2] *= scale.z;\n            //\n            // this._scale[0] *= scale.x;\n            // this._scale[1] *= scale.y;\n            // this._scale[2] *= scale.z;\n        };\n        \n        this.recalculateBounds();\n    }\n\n    reattach(position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array, selection: Uint8Array) {\n        this._data.positions.set(position, this._index * 3);\n        this._data.rotations.set(rotation, this._index * 4);\n        this._data.scales.set(scale, this._index * 3);\n        this._data.colors.set(color, this._index * 4);\n        this._data.selection.set(selection, this._index);\n        \n        // this._position = position;\n        // this._rotation = rotation;\n        // this._scale = scale;\n        // this._color = color;\n        // this._selected = selection;\n    }\n\n    get Selected() {\n        return this._data.selection[this._index];\n    }\n\n    set Selected(value: number) {\n        this._data.selection[this._index] = value;\n    }\n    \n    // Select(select: boolean) {\n    //     this._selected[0] = select ? 1 : 0;        \n    // }\n    //\n    // get Selection() {\n    //     return this._selected;\n    // }\n\n    get Rendered() {\n        return this._data.rendered[this._index];\n    }\n\n    set Rendered(value: number) {\n        this._data.rendered[this._index] = value;\n    }\n\n    get Position() {\n        const i = this._index * 3;\n        return this._data.positions.subarray(i, i + 3);\n    }\n\n    get Rotation() {\n        const i = this._index * 4;\n        return this._data.rotations.subarray(i, i + 4);\n    }\n\n    get Scale() {\n        const i = this._index * 3;\n        return this._data.scales.subarray(i, i + 3);\n    }\n    \n    set Color(colorVector: Uint8Array) {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(colorVector, colorIndex);\n    }\n    get Color() {\n        const i = this._index * 4;\n        return this._data.colors.subarray(i, i + 4);\n    }\n    \n    // Render(render: boolean) {\n    //     this._rendered[0] = render ? 1 : 0;\n    // }\n    //\n    // get Rendered() {\n    //     return this._rendered;\n    // }\n    \n    ResetColor() {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(this._defaultColor, colorIndex);\n    }\n    \n    get bounds() {\n        return this._bounds;\n    }\n    \n    get PositionVec3() {\n        const pos = this.Position;\n        return new Vector3(pos[0], pos[1], pos[2]);\n    }\n    \n    // get Position() {\n    //     return this._position;\n    // }\n    //\n    // get Scale() {\n    //    return this._scale; \n    // }\n    \n    get ScaleVec3() {\n        const scale = this.Scale;\n        return new Vector3(scale[0], scale[1], scale[2]);\n    }\n    \n    // get Color() {\n    //     return this._color;\n    // }\n    //\n    // get Rotation() {\n    //     return this._rotation;\n    // }\n}\n\nexport { SingleSplat };","class Constants {\n    static readonly BYTE_OFFSET_FLOAT: number = 4;\n    static readonly BYTE_OFFSET_DOUBLE: number = 8;\n\n    static readonly BYTE_OFFSET_INT: number = 4;\n}\n\nexport { Constants }","import { Box3 } from \"../../math/Box3\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Node } from \"./Node\";\n\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\n\nexport class OctreeIterator implements Iterator<Node>, Iterable<Node> {\n    \n    private root: Node;\n    \n    private region: Box3 | null;\n    \n    private result!: IteratorResult<Node>;\n    \n    private trace!: Node[];\n    \n    private indices!: number[];\n    \n    constructor(root: Node, region: Box3 | null = null) {\n        this.root = root;\n        this.region = region;\n        this.reset();\n    }\n    \n    reset() {\n        const root = this.root;\n        \n        this.trace = [];\n        this.indices = [];\n        \n        if(root !== null) {\n            b.min = root.min;\n            b.max = root.max;\n            \n            if(this.region === null || this.region.intersects(b)) {\n                this.trace.push(root);\n                this.indices.push(0);\n            }\n        }\n        \n        this.result = {\n            done: false\n        } as IteratorResult<Node>;\n        \n        return this;\n    }\n\n    next(): IteratorResult<Node> {\n        const region = this.region;\n        const indices = this.indices;\n        const trace = this.trace;\n        \n        let octant = null;\n        let depth = trace.length - 1;\n        \n        while(octant === null && depth >= 0) {\n            const index = indices[depth]++;\n            const children = trace[depth].children;\n            \n            if(index < 8) {\n                if(children !== undefined && children !== null) {\n                    const child = children[index];\n                    \n                    if(region !== null) {\n                        b.min = child.min;\n                        b.max = child.max;\n                        \n                        if(!region.intersects(b)) {\n                            continue;\n                        }\n                    }\n                    \n                    trace.push(child);\n                    indices.push(0);\n                    \n                    ++depth;\n                } else {\n                    octant = trace.pop();\n                    indices.pop();\n                }\n            } else {\n                trace.pop();\n                indices.pop();\n                \n                --depth;\n            }\n        }\n        \n        this.result.value = octant;\n        this.result.done = (octant === null);\n        \n        return this.result;\n    }\n    \n    [Symbol.iterator](): Iterator<Node> {\n        return this;\n    }\n}\n","import {Vector3} from \"./Vector3\";\nimport {Box3} from \"./Box3\";\n\nconst _vector:Vector3 = new Vector3();\nconst _segCenter:Vector3 = new Vector3();\nconst _segDir:Vector3 = new Vector3();\nconst _diff:Vector3 = new Vector3();\n\nconst _edge1:Vector3 = new Vector3();\nconst _edge2:Vector3 = new Vector3();\nconst _normal:Vector3 = new Vector3();\nclass NewRay {\n    public origin: Vector3;\n    public direction: Vector3;\n    \n    constructor(origin:Vector3 = new Vector3(), direction:Vector3 = new Vector3(0, 0, -1)) {\n        this.origin = origin;\n        this.direction = direction;\n    }\n    \n    set(origin:Vector3, direction:Vector3) {\n        this.origin.copy( origin );\n        this.direction.copy( direction );\n        \n        return this;\n    }\n    \n    copy( ray: NewRay ) {\n        this.origin.copy( ray.origin );\n        this.direction.copy( ray.direction );\n\n        return this;\n    }\n\n    at( t: number, target:Vector3 ) {\n\n        return target.copy( this.origin ).addScaledVector( this.direction, t );\n\n    }\n\n    lookAt( v:Vector3 ) {\n\n        this.direction.copy( v ).sub( this.origin ).normalize();\n\n        return this;\n\n    }\n\n    recast( t:number ) {\n\n        this.origin.copy( this.at( t, _vector ) );\n\n        return this;\n\n    }\n\n    closestPointToPoint( point:Vector3, target:Vector3 ) {\n\n        target.subVectors( point, this.origin );\n\n        const directionDistance = target.dot( this.direction );\n\n        if ( directionDistance < 0 ) {\n\n            return target.copy( this.origin );\n\n        }\n\n        return target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n    }\n\n    distanceToPoint( point:Vector3 ) {\n\n        return Math.sqrt( this.distanceSqToPoint( point ) );\n\n    }\n\n    distanceSqToPoint( point:Vector3 ) {\n\n        const directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n        // point behind the ray\n\n        if ( directionDistance < 0 ) {\n\n            return this.origin.distanceToSquared( point );\n\n        }\n\n        _vector.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n        return _vector.distanceToSquared( point );\n\n    }\n\n    intersectBox( box: Box3, target:Vector3 ) {\n\n        let tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n        const invdirx = 1 / this.direction.x,\n            invdiry = 1 / this.direction.y,\n            invdirz = 1 / this.direction.z;\n\n        const origin = this.origin;\n\n        if ( invdirx >= 0 ) {\n\n            tmin = ( box.min.x - origin.x ) * invdirx;\n            tmax = ( box.max.x - origin.x ) * invdirx;\n\n        } else {\n\n            tmin = ( box.max.x - origin.x ) * invdirx;\n            tmax = ( box.min.x - origin.x ) * invdirx;\n\n        }\n\n        if ( invdiry >= 0 ) {\n\n            tymin = ( box.min.y - origin.y ) * invdiry;\n            tymax = ( box.max.y - origin.y ) * invdiry;\n\n        } else {\n\n            tymin = ( box.max.y - origin.y ) * invdiry;\n            tymax = ( box.min.y - origin.y ) * invdiry;\n\n        }\n\n        if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n        if ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n        if ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n        if ( invdirz >= 0 ) {\n\n            tzmin = ( box.min.z - origin.z ) * invdirz;\n            tzmax = ( box.max.z - origin.z ) * invdirz;\n\n        } else {\n\n            tzmin = ( box.max.z - origin.z ) * invdirz;\n            tzmax = ( box.min.z - origin.z ) * invdirz;\n\n        }\n\n        if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n        if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n        if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n        //return point closest to the ray (positive side)\n\n        if ( tmax < 0 ) return null;\n\n        return this.at( tmin >= 0 ? tmin : tmax, target );\n\n    }\n\n    intersectsBox( box:Box3 ) {\n\n        return this.intersectBox( box, _vector ) !== null;\n\n    }\n\n    equals( ray: NewRay ) {\n\n        return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n    }\n\n    clone() {\n        const Constructor = this.constructor as new () => this;\n        return new Constructor().copy(this);\n    }\n}\n\nexport { NewRay }","import { Node } from \"../core/Node.js\";\nimport { RaycastingFlags } from \"./RaycastingFlags.js\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Box3 } from \"../../math/Box3\";\nimport {NewRay} from \"../../math/NewRay\";\n\nconst v = new Vector3();\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\nconst d = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\nconst r = new NewRay();\n\n\nexport function intersectOctree(octree: Node, ray: NewRay, flags: RaycastingFlags): number[] | null {\n\n    // Translate the octant extents to the scene origin.\n    const min = b.min.set(0, 0, 0);\n    const max = b.max.subVectors(octree.max, octree.min);\n\n    const dimensions = octree.getDimensions(d.min);\n    const halfDimensions = d.max.copy(dimensions).multiply(0.5);\n\n    const origin = r.origin.copy(ray.origin);\n    const direction = r.direction.copy(ray.direction);\n\n    // Translate the ray to the center of the octant.\n    origin.sub(octree.getCenter(v)).add(halfDimensions);\n\n    // Reset all flags.\n    flags.value = 0;\n\n    // Handle rays with negative directions and prevent division by zero.\n    if(direction.x < 0.0) {\n\n        origin.x = dimensions.x - origin.x;\n        direction.x = -direction.x;\n        flags.value |= 4;\n\n    } else if(direction.x === 0.0) {\n\n        direction.x = Number.EPSILON;\n\n    }\n\n    if(direction.y < 0.0) {\n\n        origin.y = dimensions.y - origin.y;\n        direction.y = -direction.y;\n        flags.value |= 2;\n\n    } else if(direction.y === 0.0) {\n\n        direction.y = Number.EPSILON;\n\n    }\n\n    if(direction.z < 0.0) {\n\n        origin.z = dimensions.z - origin.z;\n        direction.z = -direction.z;\n        flags.value |= 1;\n\n    } else if(direction.z === 0.0) {\n\n        direction.z = Number.EPSILON;\n\n    }\n\n    // Improve IEEE double stability.\n    const invDirX = 1.0 / direction.x;\n    const invDirY = 1.0 / direction.y;\n    const invDirZ = 1.0 / direction.z;\n\n    // Project the ray to the octant's boundaries.\n    const tx0 = (min.x - origin.x) * invDirX;\n    const tx1 = (max.x - origin.x) * invDirX;\n    const ty0 = (min.y - origin.y) * invDirY;\n    const ty1 = (max.y - origin.y) * invDirY;\n    const tz0 = (min.z - origin.z) * invDirZ;\n    const tz1 = (max.z - origin.z) * invDirZ;\n\n    // Check if the ray hits the octree.\n    const hit = (Math.max(tx0, ty0, tz0) < Math.min(tx1, ty1, tz1));\n    return hit ? [tx0, ty0, tz0, tx1, ty1, tz1] : null;\n\n}","import { RaycastingFlags } from \"./RaycastingFlags\";\nimport { Node } from \"./Node\";\nimport {Ray} from \"../../math/Ray\";\nimport { intersectOctree } from \"./intersectOctree\";\nimport {NewRay} from \"../../math/NewRay\";\n\nconst flags = new RaycastingFlags();\n\nconst octantTable = [\n\n    new Uint8Array([4, 2, 1]),\n    new Uint8Array([5, 3, 8]),\n    new Uint8Array([6, 8, 3]),\n    new Uint8Array([7, 8, 8]),\n    new Uint8Array([8, 6, 5]),\n    new Uint8Array([8, 7, 8]),\n    new Uint8Array([8, 8, 7]),\n    new Uint8Array([8, 8, 8])\n\n];\n\nexport function findNextOctant(currentOctant: number, tx1: number, ty1: number, tz1: number): number {\n\n    let min: number;\n    let exit: number;\n\n    // Find the exit plane.\n    if(tx1 < ty1) {\n\n        min = tx1;\n        exit = 0; // YZ-plane.\n\n    } else {\n\n        min = ty1;\n        exit = 1; // XZ-plane.\n\n    }\n\n    if(tz1 < min) {\n\n        exit = 2; // XY-plane.\n\n    }\n\n    return octantTable[currentOctant][exit];\n\n}\n\nfunction findEntryOctant(tx0: number, ty0: number, tz0: number, txm: number, tym: number, tzm: number): number {\n\n    let entry = 0;\n\n    // Find the entry plane.\n    if(tx0 > ty0 && tx0 > tz0) {\n\n        // YZ-plane.\n        if(tym < tx0) {\n\n            entry |= 2;\n\n        }\n\n        if(tzm < tx0) {\n\n            entry |= 1;\n\n        }\n\n    } else if(ty0 > tz0) {\n\n        // XZ-plane.\n        if(txm < ty0) {\n\n            entry |= 4;\n\n        }\n\n        if(tzm < ty0) {\n\n            entry |= 1;\n\n        }\n\n    } else {\n\n        // XY-plane.\n        if(txm < tz0) {\n\n            entry |= 4;\n\n        }\n\n        if(tym < tz0) {\n\n            entry |= 2;\n\n        }\n\n    }\n\n    return entry;\n\n}\n\nfunction raycastOctant(node: Node, tx0: number, ty0: number, tz0: number, tx1: number, ty1: number, tz1: number, result: Node[]): void {\n    if(tx1 >= 0.0 && ty1 >= 0.0 && tz1 >= 0.0) {\n\n        const c = node.children;\n\n        if(c === null || c === undefined) {\n\n            // Leaf.\n            result.push(node);\n\n        } else {\n\n            // Calculate mean values.\n            const txm = 0.5 * (tx0 + tx1);\n            const tym = 0.5 * (ty0 + ty1);\n            const tzm = 0.5 * (tz0 + tz1);\n\n            const f = flags.value;\n            let currentOctant = findEntryOctant(tx0, ty0, tz0, txm, tym, tzm);\n\n            /* The possibilities for the next node are passed in the same respective\n            order as the t-values. Hence, if the first value is found to be the\n            greatest, the fourth one will be returned. If the second value is the\n            greatest, the fifth one will be returned, etc. */\n\n            while(currentOctant < 8) {\n\n                switch(currentOctant) {\n\n                    case 0:\n                        raycastOctant(c[f], tx0, ty0, tz0, txm, tym, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, txm, tym, tzm);\n                        break;\n\n                    case 1:\n                        raycastOctant(c[f ^ 1], tx0, ty0, tzm, txm, tym, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, txm, tym, tz1);\n                        break;\n\n                    case 2:\n                        raycastOctant(c[f ^ 2], tx0, tym, tz0, txm, ty1, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, txm, ty1, tzm);\n                        break;\n\n                    case 3:\n                        raycastOctant(c[f ^ 3], tx0, tym, tzm, txm, ty1, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, txm, ty1, tz1);\n                        break;\n\n                    case 4:\n                        raycastOctant(c[f ^ 4], txm, ty0, tz0, tx1, tym, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, tym, tzm);\n                        break;\n\n                    case 5:\n                        raycastOctant(c[f ^ 5], txm, ty0, tzm, tx1, tym, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, tym, tz1);\n                        break;\n\n                    case 6:\n                        raycastOctant(c[f ^ 6], txm, tym, tz0, tx1, ty1, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, ty1, tzm);\n                        break;\n\n                    case 7:\n                        raycastOctant(c[f ^ 7], txm, tym, tzm, tx1, ty1, tz1, result);\n                        // Far top right octant. No other octants can be reached from here.\n                        currentOctant = 8;\n                        break;\n\n                }\n\n            }\n\n        }\n\n    }\n}\n\nexport class OctreeRaycaster {\n    \n    static intersectOctree(node: Node, ray: NewRay): Node[] {\n\n        const result: Node[] = [];\n        const t = intersectOctree(node, ray, flags);\n\n        if(t !== null) {\n\n            raycastOctant(node, t[0], t[1], t[2], t[3], t[4], t[5], result);\n\n        }\n\n        return result;\n\n    }\n\n}","export class RaycastingFlags {\n    \n    value: number;\n\n    constructor() {\n\n        this.value = 0;\n\n    }\n\n}","import { Tree } from \"./core/Tree\";\nimport { Node } from \"./core/Node\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Box3 } from \"../math/Box3\";\nimport { OctreeIterator } from \"./core/OctreeIterator\";\nimport {Raycaster} from \"../utils/Raycaster\";\nimport {OctreeRaycaster} from \"./core/OctreeRaycaster\";\n\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\n\nfunction getDepth(node: Node): number {\n    const children = node.children;\n    \n    let result = 0;\n    \n    if(children !== undefined && children !== null) {\n        for(let i = 0; i < children.length; ++i) {\n            const d = 1 + getDepth(children[i]);\n            \n            if(d > result) {\n                result = d;\n            }\n        }\n    }\n    \n    return result;\n}\n\nfunction cull(node: Node, region: Box3, result: Node[]): void {\n    const children = node.children;\n    \n    b.min = node.min;\n    b.max = node.max;\n    \n    if(region.intersects(b)) {\n        if(children !== undefined && children !== null) {\n            for(let i = 0; i < children.length; ++i) {\n                cull(children[i], region, result);\n            }\n        } else {\n            result.push(node);\n        }\n    }\n}\n\nfunction findNodesByLevel(node: Node, level: number, depth: number, result: Node[]): void {\n    const children = node.children;\n    \n    if(depth === level) {\n        result.push(node);\n    } else if(children !== undefined && children !== null) {\n        \n        ++depth;\n        \n        for(let i = 0; i < children.length; ++i) {\n            findNodesByLevel(children[i], level, depth, result)\n        }\n    }\n}\n\nexport class Octree implements Tree, Iterable<Node> {\n    protected root: Node;\n    \n    constructor(root: Node) {\n        this.root = root;\n    }\n    \n    get min(): Vector3 {\n        return this.root.min;\n    }\n    \n    get max(): Vector3 {\n        return this.root.max;\n    }\n    \n    get children(): Node[] | null {\n        return this.root.children || null;\n    }\n    \n    getCenter(result: Vector3): Vector3 {\n        return this.root.getCenter(result);\n    }\n    \n    getDimensions(result: Vector3): Vector3 {\n        return this.root.getDimensions(result);\n    }\n    \n    cull(region: Box3): Node[] {\n        const result: Node[] = []\n        cull(this.root, region, result);\n        return result;\n    }\n    \n    getDepth(): number {\n        return getDepth(this.root);\n    }\n    \n    findNodesByLevel(level: number): Node[] {\n        const result: Node[] = [];\n        findNodesByLevel(this.root, level, 0, result);\n        return result;\n    }\n    \n    getIntersectingNodes(raycaster: Raycaster): Node[] {\n        return OctreeRaycaster.intersectOctree(this.root, raycaster.ray);\n    }\n    \n    leaves(region: Box3 | null = null): Iterator<Node> {\n        return new OctreeIterator(this.root, region);\n    }\n    \n    [Symbol.iterator](): Iterator<Node> {\n        return new OctreeIterator(this.root);\n    }\n}","/**\n * A binary pattern that describes the standard octant layout:\n *\n * ```text\n *    3____7\n *  2/___6/|\n *  | 1__|_5\n *  0/___4/\n * ```\n *\n * This common layout is crucial for positional assumptions.\n */\n\nexport const layout = [\n\n    new Uint8Array([0, 0, 0]),\n    new Uint8Array([0, 0, 1]),\n    new Uint8Array([0, 1, 0]),\n    new Uint8Array([0, 1, 1]),\n\n    new Uint8Array([1, 0, 0]),\n    new Uint8Array([1, 0, 1]),\n    new Uint8Array([1, 1, 0]),\n    new Uint8Array([1, 1, 1])\n\n];","import {Node} from \"./Node\";\nimport {DataContainer} from \"./DataContainer\";\nimport {Vector3} from \"../../math/Vector3\";\nimport {layout} from \"./layout\";\n\nconst c = new Vector3();\nexport class Octant<T> implements Node, DataContainer<T> {\n    min: Vector3;\n    max: Vector3;\n    children: Node[] | null;\n    data: T | null;\n    \n    constructor(min = new Vector3(), max = new Vector3()) {\n        this.min = min;\n        this.max = max;\n        this.children = null;\n        this.data = null;\n    }\n    \n    getCenter(result: Vector3): Vector3 {\n        return result.addVectors(this.min, this.max).multiply(0.5)\n    }\n    \n    getDimensions(result: Vector3): Vector3 {\n        return result.subVectors(this.max, this.min);\n    }\n    \n    split(): void {\n        const min = this.min;\n        const max = this.max;\n        const mid = this.getCenter(c);\n        \n        const children: Node[] = this.children = [];\n        \n        for(let i = 0; i < 8; ++i) {\n            const combination = layout[i];\n            const child = new (<typeof Octant> this.constructor)();\n            \n            child.min.set(\n                (combination[0] === 0) ? min.x : mid.x,\n                (combination[1] === 0) ? min.y : mid.y,\n                (combination[2] === 0) ? min.z : mid.z\n            );\n            \n            child.max.set(\n                (combination[0] === 0) ? mid.x : max.x,\n                (combination[1] === 0) ? mid.y : max.y,\n                (combination[2] === 0) ? mid.z : max.z\n            );\n            \n            children[i] = child;\n        }\n    }\n}","import { DataContainer } from \"../core/DataContainer\";\nimport { Vector3 } from \"../../math/Vector3\";\n\nexport class PointContainer<T> implements DataContainer<T> {\n\n    data: T | null;\n    \n\n    point: Vector3 | null;\n\n\n    distance: number;\n    \n    constructor(point: Vector3 | null = null, data: T | null = null, distance = 0.0) {\n\n        this.point = point;\n        this.data = data;\n        this.distance = distance;\n\n    }\n\n}","import { PointContainer } from \"./PointContainer\";\nimport { Vector3 } from \"../../math/Vector3\";\n\nexport class RayPointIntersection<T> extends PointContainer<T> {\n    \n    distanceToRay: number;\n    \n\n    constructor(distanceToOrigin: number, distanceToRay: number, point: Vector3, data: T | null = null) {\n\n        super(point, data, distanceToOrigin);\n        this.distanceToRay = distanceToRay;\n\n    }\n\n}","import { Vector3 } from \"../../math/Vector3\";\nimport { Raycaster } from \"../../utils/Raycaster\";\nimport { RayPointIntersection } from \"./RayPointIntersection\";\n\nexport class PointData<T> {\n    points: Vector3[];\n    \n    data: T[];\n\n    constructor() {\n        this.points = [];\n        this.data = [];\n    }\n    \n    testPoints(raycaster: Raycaster, result: RayPointIntersection<T>[]): void {\n        const threshold = (raycaster.params.Points !== undefined) ? raycaster.params.Points.threshold : 0;\n        const thresholdSq = threshold * threshold;\n        const ray = raycaster.ray;\n        \n        const points = this.points;\n        const data = this.data;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            const point = points[i];\n            const distanceToRaySq = ray.distanceSqToPoint(point);\n\n            if(distanceToRaySq < thresholdSq) {\n\n                const closestPoint = ray.closestPointToPoint(point, new Vector3());\n                const distance = ray.origin.distanceTo(closestPoint);\n\n                if(distance >= raycaster.near && distance <= raycaster.far) {\n\n                    result.push(new RayPointIntersection<T>(distance, Math.sqrt(distanceToRaySq), closestPoint, data[i]));\n\n                }\n\n            }\n\n        }\n    }\n}","import {Vector3} from \"../../math/Vector3\";\nimport {Octant} from \"../core/Octant\";\nimport {PointData} from \"./PointData\";\n\nconst p = new Vector3();\n\nexport class PointOctant<T> extends Octant<PointData<T>> {\n    constructor(min: Vector3, max: Vector3) {\n        super(min, max);\n    }\n\n    distanceToSquared(point: Vector3): number {\n\n        const clampedPoint = p.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).lengthSq();\n\n    }\n\n    distanceToCenterSquared(point: Vector3): number {\n\n        const center = this.getCenter(p);\n\n        const dx = point.x - center.x;\n        const dy = point.y - center.x;\n        const dz = point.z - center.z;\n\n        return dx * dx + dy * dy + dz * dz;\n\n    }\n\n    contains(point: Vector3, bias: number): boolean {\n\n        const min = this.min;\n        const max = this.max;\n\n        return (\n            point.x >= min.x - bias &&\n            point.y >= min.y - bias &&\n            point.z >= min.z - bias &&\n            point.x <= max.x + bias &&\n            point.y <= max.y + bias &&\n            point.z <= max.z + bias\n        );\n    }\n\n    redistribute(bias: number): void {\n\n        const children = this.children;\n        const pointData = this.data;\n\n        if(children !== null && pointData !== null) {\n\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, il = points.length; i < il; ++i) {\n\n                const point = points[i];\n                const entry = data[i];\n\n                for(let j = 0, jl = children.length; j < jl; ++j) {\n\n                    const child = children[j] as PointOctant<T>;\n\n                    if(child.contains(point, bias)) {\n\n                        if(child.data === null) {\n\n                            child.data = new PointData<T>();\n\n                        }\n\n                        const childData = child.data;\n                        childData.points.push(point);\n                        childData.data.push(entry);\n\n                        break;\n\n                    }\n\n                }\n\n            }\n\n            this.data = null;\n\n        }\n\n    }\n\n    merge(): void {\n\n        const children = this.children;\n\n        if(children !== null) {\n\n            const pointData = new PointData<T>();\n\n            for(let i = 0, l = children.length; i < l; ++i) {\n\n                const child = children[i] as PointOctant<T>;\n                const childData = child.data;\n\n                if(childData !== null) {\n\n                    pointData.points = pointData.points.concat(childData.points);\n                    pointData.data = pointData.data.concat(childData.data);\n\n                }\n\n            }\n\n            this.children = null;\n            this.data = pointData;\n\n        }\n\n    }\n\n}","import { Octree } from \"../Octree\";\nimport {Vector3} from \"../../math/Vector3\";\nimport {PointOctant} from \"./PointOctant\";\nimport {PointContainer} from \"./PointContainer\";\nimport {RayPointIntersection} from \"./RayPointIntersection\";\nimport {Raycaster} from \"../../utils/Raycaster\";\nimport {PointData} from \"./PointData\";\n\nfunction countPoints<T>(octant: PointOctant<T>): number {\n\n    const children = octant.children;\n    let result = 0;\n\n    if(children !== null) {\n\n        for(let i = 0, l = children.length; i < l; ++i) {\n\n            result += countPoints(children[i] as PointOctant<T>);\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        result = pointData.points.length;\n\n    }\n\n    return result;\n\n}\n\nfunction set<T>(point: Vector3, data: T, octree: PointOctree<T>, octant: PointOctant<T> | null, depth: number): boolean {\n\n    let exists = false;\n    let done = false;\n\n    if(octant !== null && octant.contains(point, octree.getBias())) {\n\n        let children = octant.children;\n\n        if(children === null) {\n\n            let index = 0;\n\n            if(octant.data === null) {\n\n                octant.data = new PointData<T>();\n\n            } else {\n\n                const pointData = octant.data;\n                const points = pointData.points;\n\n                for(let i = 0, l = points.length; !exists && i < l; ++i) {\n\n                    exists = points[i].equals(point);\n                    index = i;\n\n                }\n\n            }\n\n            const pointData = octant.data;\n\n            if(exists) {\n\n                pointData.data[index] = data;\n                done = true;\n\n            } else if(pointData.points.length < octree.getMaxPoints() || depth === octree.getMaxDepth()) {\n\n                pointData.points.push(point.clone());\n                pointData.data.push(data);\n                done = true;\n\n            } else {\n\n                octant.split();\n                octant.redistribute(octree.getBias());\n                children = octant.children;\n\n            }\n\n        }\n\n        if(children !== null) {\n\n            ++depth;\n\n            for(let i = 0, l = children.length; !done && i < l; ++i) {\n\n                done = set(point, data, octree, children[i] as PointOctant<T>, depth);\n\n            }\n\n        }\n\n    }\n\n    return done;\n}\n\nfunction remove<T>(point: Vector3, octree: PointOctree<T>, octant: PointOctant<T>,\n                   parent: PointOctant<T> | null): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(children !== null) {\n\n            for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                result = remove(point, octree, children[i] as PointOctant<T>, octant);\n\n            }\n\n        } else if(octant.data !== null) {\n\n            const pointData = octant.data;\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, l = points.length; i < l; ++i) {\n\n                if(points[i].equals(point)) {\n\n                    const last = l - 1;\n                    result = data[i];\n\n                    // If the point is NOT the last one in the array:\n                    if(i < last) {\n\n                        // Overwrite with the last point and data entry.\n                        points[i] = points[last];\n                        data[i] = data[last];\n\n                    }\n\n                    // Drop the last entry.\n                    points.pop();\n                    data.pop();\n\n                    if(parent !== null && countPoints(parent) <= octree.getMaxPoints()) {\n\n                        parent.merge();\n\n                    }\n\n                    break;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    return result;\n}\n\nfunction get<T>(point: Vector3, octree: PointOctree<T>, octant: PointOctant<T>): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(children !== null) {\n\n            for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                result = get(point, octree, children[i] as PointOctant<T>);\n\n            }\n\n        } else if(octant.data !== null) {\n\n            const pointData = octant.data;\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, l = points.length; result === null && i < l; ++i) {\n\n                if(point.equals(points[i])) {\n\n                    result = data[i];\n\n                }\n\n            }\n\n        }\n\n    }\n\n    return result;\n}\n\nfunction move<T>(point: Vector3, position: Vector3, octree: PointOctree<T>,\n                 octant: PointOctant<T>, parent: PointOctant<T> | null, depth: number): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(octant.contains(position, octree.getBias())) {\n\n            // The point and the new position both fall into the current octant.\n            if(children !== null) {\n\n                ++depth;\n\n                for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                    const child = children[i] as PointOctant<T>;\n                    result = move(point, position, octree, child, octant, depth);\n\n                }\n\n            } else if(octant.data !== null) {\n\n                // No divergence - the point can be updated in place.\n                const pointData = octant.data;\n                const points = pointData.points;\n                const data = pointData.data;\n\n                for(let i = 0, l = points.length; i < l; ++i) {\n\n                    if(point.equals(points[i])) {\n\n                        // The point exists! Update its position.\n                        points[i].copy(position);\n                        result = data[i];\n                        break;\n\n                    }\n\n                }\n\n            }\n\n        } else {\n\n            // Retrieve the point and remove it.\n            result = remove(point, octree, octant, parent);\n\n            // Go back to the parent octant and add the updated point.\n            set(position, result, octree, parent, depth - 1);\n\n        }\n\n    }\n\n    return result;\n\n}\n\n\nfunction findNearestPoint<T>(point: Vector3, maxDistance: number,\n                             skipSelf: boolean, octant: PointOctant<T>): PointContainer<T> | null {\n\n    interface SortableOctant<T> {\n\n        octant: PointOctant<T>;\n        distance: number;\n\n    }\n\n    let result = null;\n    let bestDistance = maxDistance;\n\n    if(octant.children !== null) {\n\n        // Sort the children: smallest distance to the point first, ASC.\n        const sortedChildren: SortableOctant<T>[] = octant.children.map((child) => {\n\n            // Precompute distances.\n            const octant = child as PointOctant<T>;\n\n            return {\n                distance: octant.distanceToCenterSquared(point),\n                octant\n            };\n\n        }).sort((a, b) => a.distance - b.distance);\n\n        // Traverse from closest to furthest.\n        for(let i = 0, l = sortedChildren.length; i < l; ++i) {\n\n            const child = sortedChildren[i].octant;\n\n            if(child.contains(point, bestDistance)) {\n\n                const intermediateResult = findNearestPoint(\n                    point, bestDistance, skipSelf, child\n                );\n\n                if(intermediateResult !== null) {\n\n                    bestDistance = intermediateResult.distance;\n                    result = intermediateResult;\n\n                    if(bestDistance === 0.0) {\n\n                        break;\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        const points = pointData.points;\n        const data = pointData.data;\n\n        let index = -1;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            if(points[i].equals(point)) {\n\n                if(!skipSelf) {\n\n                    bestDistance = 0.0;\n                    index = i;\n                    break;\n\n                }\n\n            } else {\n\n                const distance = point.distanceTo(points[i]);\n\n                if(distance < bestDistance) {\n\n                    bestDistance = distance;\n                    index = i;\n\n                }\n\n            }\n\n        }\n\n        if(index >= 0) {\n\n            result = new PointContainer(points[index], data[index], bestDistance);\n\n        }\n\n    }\n\n    return result;\n\n}\n\nfunction findPoints<T>(point: Vector3, radius: number, skipSelf: boolean,\n                       octant: PointOctant<T>, result: PointContainer<T>[]): void {\n\n    const children = octant.children;\n\n    if(children !== null) {\n\n        for(let i = 0, l = children.length; i < l; ++i) {\n\n            const child = children[i] as PointOctant<T>;\n\n            if(child.contains(point, radius)) {\n\n                findPoints(point, radius, skipSelf, child, result);\n\n            }\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        const points = pointData.points;\n        const data = pointData.data;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            const p = points[i];\n\n            if(p.equals(point)) {\n\n                if(!skipSelf) {\n\n                    result.push(new PointContainer(p.clone(), data[i], 0.0));\n\n                }\n\n            } else {\n\n                const rSq = radius * radius;\n                const dSq = p.distanceToSquared(point);\n\n                if(dSq <= rSq) {\n\n                    result.push(new PointContainer(p.clone(), data[i], Math.sqrt(dSq)));\n\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n\nexport class PointOctree<T> extends Octree {\n    private bias: number;\n    \n    private maxPoints: number;\n    \n    private maxDepth: number;\n    \n    constructor(min: Vector3, max: Vector3, bias = 0.0, maxPoints = 8, maxDepth = 8) {\n        super(new PointOctant<T>(min, max));\n        \n        this.bias = Math.max(0.0, bias);\n        this.maxPoints = Math.max(1, Math.round(maxPoints));\n        this.maxDepth = Math.max(0, Math.round(maxDepth));\n    }\n    \n    getBias(): number {\n        return this.bias;\n    }\n    \n    getMaxPoints(): number {\n        return this.maxPoints;\n    }\n\n    getMaxDepth(): number {\n        return this.maxDepth;\n    }\n\n    countPoints(octant: PointOctant<T> = this.root as PointOctant<T>): number {\n        return countPoints(octant);\n    }\n\n    set(point: Vector3, data: T): boolean {\n        return set(point, data, this, this.root as PointOctant<T>, 0);\n    }\n\n    remove(point: Vector3): T | null {\n        return remove(point, this, this.root as PointOctant<T>, null);\n    }\n\n    get(point: Vector3): T | null {\n        return get(point, this, this.root as PointOctant<T>);\n    }\n    \n    move(point: Vector3, position: Vector3): T | null {\n        return move(point, position, this, this.root as PointOctant<T>, null, 0);\n    }\n\n    findNearestPoint(point: Vector3, maxDistance = Number.POSITIVE_INFINITY, skipSelf = false): PointContainer<T> | null {\n        const root = this.root as PointOctant<T>;\n        const result = findNearestPoint(point, maxDistance, skipSelf, root);\n\n        if(result !== null && result.point !== null) {\n\n            result.point = result.point.clone();\n\n        }\n\n        return result;\n    }\n\n    findPoints(point: Vector3, radius: number, skipSelf = false): PointContainer<T>[] {\n        const result: PointContainer<T>[] = [];\n        findPoints(point, radius, skipSelf, this.root as PointOctant<T>, result);\n        return result;\n    }\n\n    raycast(raycaster: Raycaster): RayPointIntersection<T>[] {\n\n        const result: RayPointIntersection<T>[] = [];\n        const octants = super.getIntersectingNodes(raycaster) as PointOctant<T>[];\n\n        if(octants.length > 0) {\n\n            for(let i = 0, l = octants.length; i < l; ++i) {\n\n                const octant = octants[i];\n                const pointData = octant.data;\n\n                if(pointData !== null) {\n\n                    pointData.testPoints(raycaster, result);\n\n                }\n\n            }\n\n        }\n\n        return result;\n    }\n} ","import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Converter } from \"../utils/Converter\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { SingleSplat } from \"./SingleSplat\"\n\nimport { Constants } from \"../utils/Constants\";\nimport {PointOctree} from \"../Octree/points/PointOctree\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n    public renderNumberChanged: boolean = false;\n    public colorTransformChanged: boolean = false;\n\n    private _splats: Array<SingleSplat> = [];\n    private _data: SplatData;\n    private _selected: boolean = false;\n    private _colorTransforms: Array<Matrix4> = [];\n    private _colorTransformsMap: Map<number, number> = new Map();\n    private _bounds: Box3;\n    \n    private _numberOfSplats: number;\n    private _numberOfRenderedSplats: number;\n\n    private _octree: PointOctree<number> | undefined;\n\n    recalculateBounds: () => void;\n    createSplatsData: () => void;\n    applySelection: () => void;\n    createOctree: () => void;\n    \n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n        \n        this._splats = new Array<SingleSplat>();\n        this._data = splat || new SplatData();\n        \n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n\n        this._numberOfSplats = 0;\n        this._numberOfRenderedSplats = 0\n        \n        this.createSplatsData = () => {\n            \n            if(splat != undefined)\n            {\n                this._numberOfSplats = splat.vertexCount;\n                this._numberOfRenderedSplats = splat.vertexCount;\n\n                console.time(\"Splats creation\");\n                for (let i = 0; i < splat.vertexCount; i++) {\n                    let singleSplat = new SingleSplat(i, this._data);\n                    this._splats.push(singleSplat);\n                }\n                console.timeEnd(\"Splats creation\");\n\n            }\n            \n        }\n        \n        this.recalculateBounds = () => {\n            console.time(\"Bounds calculation\");\n            for (let i = 0; i < this._numberOfSplats; i++) {\n                const pos = this._splats[i].Position;\n                this._bounds.expand(new Vector3(pos[0], pos[1], pos[2]));\n            }\n            console.timeEnd(\"Bounds calculation\");\n        }\n\n        this.createOctree = () => {\n            this._octree = new PointOctree<number>(this._bounds.min, this._bounds.max, 0.0, 8, 8);\n\n            console.time(\"Octree creation\");\n            const positionVector = new Vector3();\n            for (let i = 0; i < this._numberOfSplats; i++) {\n                const pos = this._splats[i].Position;\n                positionVector.set(pos[0], pos[1], pos[2]);\n                this._octree.set(positionVector, i);\n            }\n            console.timeEnd(\"Octree creation\");\n\n            console.log(\"Depth: \" + this._octree.getDepth());\n\n            let dimension = new Vector3();\n            this._octree.getDimensions(dimension);\n            console.log(\"Dimension: \" + dimension);\n        }\n\n\n        this.applyPosition = () => {\n            this._splats.forEach((splat, index) => {\n                splat.translate(this.position);\n            });\n            this.position = new Vector3();\n            \n            this.data.changed = true;\n        };\n\n        this.applyRotation = () => {\n            this._splats.forEach((splat, index) => {\n                splat.rotate(this.rotation);\n            });\n            this.rotation = new Quaternion();\n\n            this.data.changed = true;\n        };\n\n        this.applyScale = () => {\n            this._splats.forEach((splat, index) => {\n                splat.scale(this.scale);\n            });\n            this.scale = new Vector3(1, 1, 1);\n        };\n        \n        this.applySelection = () => {\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n            \n            this.data.changed = true;\n        }\n\n        this.createSplatsData();\n        this.recalculateBounds();\n        this.createOctree();\n        \n        this.data.changed = true;\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const data = this.serialize();\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, this._numberOfSplats);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n    \n    get splats() {\n        return this._splats;\n    }\n    \n    getSplatAtIndex(index: number): SingleSplat | undefined {\n        if (index < 0 || index >= this._numberOfSplats) {\n            console.error(\"Index out of bounds\");\n            return undefined; \n        }\n        return this._splats[index];\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n    \n    selectSplat(index: number, value: number) {\n        this._splats[index].Selected = value;\n        \n        this.selectedChanged = true;\n        this.dispatchEvent(this._changeEvent);\n    }\n    \n    \n    \n    updateRenderingOfSplats() {\n        this.dispatchEvent(this._renderedSplatsChanged);\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsMap() {\n        return this._colorTransformsMap;\n    }\n    \n    get bounds() {\n        let center = this._bounds.center();\n        center = center.add(this.position);\n\n        let size = this._bounds.size();\n        size = size.multiply(this.scale);\n\n        return new Box3(center.subtract(size.divide(2)), center.add(size.divide(2)));\n    }\n    \n    get splatCount() {\n        return this._numberOfSplats;\n    }\n    \n    get numberOfRenderedSplats() {\n        return this._numberOfRenderedSplats;\n    }\n\n    serialize = () => {\n        const data = new Uint8Array(this._numberOfSplats * SplatData.RowLength);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n        \n        for (let i = 0; i < this._numberOfSplats; i++) {\n            f_buffer[8 * i + 0] = this._splats[i].Position[0];\n            f_buffer[8 * i + 1] = this._splats[i].Position[1];\n            f_buffer[8 * i + 2] = this._splats[i].Position[2];\n\n            u_buffer[32 * i + 24 + 0] = this._splats[i].Color[0];\n            u_buffer[32 * i + 24 + 1] = this._splats[i].Color[1];\n            u_buffer[32 * i + 24 + 2] = this._splats[i].Color[2];\n            u_buffer[32 * i + 24 + 3] = this._splats[i].Color[3];\n\n            f_buffer[8 * i + 3 + 0] = this._splats[i].Scale[0];\n            f_buffer[8 * i + 3 + 1] = this._splats[i].Scale[1];\n            f_buffer[8 * i + 3 + 2] = this._splats[i].Scale[2];\n\n            u_buffer[32 * i + 28 + 0] = (this._splats[i].Rotation[0] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 1] = (this._splats[i].Rotation[1] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 2] = (this._splats[i].Rotation[2] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 3] = (this._splats[i].Rotation[3] * 128 + 128) & 0xff;\n        }\n\n        return data;\n    };\n\n    reattach = (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => {\n        console.assert(\n            positions.byteLength === this._numberOfRenderedSplats * 3 * 4,\n            `Expected ${this._numberOfRenderedSplats * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n        );\n\n        for(let i = 0; i < this._numberOfSplats; i++) {\n            if(this._splats[i].Rendered === 1){\n                let position: Float32Array = new Float32Array(positions, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let rotation: Float32Array = new Float32Array(rotations, 4 * i * Constants.BYTE_OFFSET_FLOAT, 4);\n                let scale: Float32Array = new Float32Array(scales, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let color: Uint8Array = new Uint8Array(colors, 1 * i * Constants.BYTE_OFFSET_INT, 4);\n                let selected: Uint8Array = new Uint8Array(selection, i, 1);\n\n                this._splats[i].reattach(position, rotation, scale, color, selected);       \n            }\n        }\n        \n        this._data.detached = false;\n    };\n\n    get Positions(): Float32Array {\n        // return this._data.positions;\n        let tempPositions: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempPositions.push(...singleSplat.Position);\n            }\n        });\n\n        return new Float32Array(tempPositions);\n    }\n\n\n\n    get Scales(): Float32Array {\n        // return this._data.scales;\n        let tempScales: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempScales.push(...singleSplat.Scale);\n            }\n        });\n\n        return new Float32Array(tempScales);\n    }\n\n    get Rotations(): Float32Array {\n        // return this._data.rotations;\n        let tempRotations: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempRotations.push(...singleSplat.Rotation);\n            }\n        });\n\n        return new Float32Array(tempRotations);\n    }\n\n    get Colors(): Uint8Array {\n        // return this._data.colors;\n        let tempColors: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempColors.push(...singleSplat.Color);\n            }\n        });\n\n        return new Uint8Array(tempColors);\n    }\n\n    get Selections(): Uint8Array {\n        const tempSelections: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempSelections.push(singleSplat.Selected);\n            }\n        });\n\n        return new Uint8Array(tempSelections);\n    }\n\n\n}\n\nexport { Splat };\n","import { Object3D } from \"../core/Object3D\";\nimport { SplatvData } from \"./SplatvData\";\n\nclass Splatv extends Object3D {\n    private _data: SplatvData;\n\n    constructor(splat: SplatvData) {\n        super();\n\n        this._data = splat;\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Splatv };\n","import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 30;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n","import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n","import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n","import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.serialize();\n                buffers.push(buffer);\n                vertexCount += object.splatCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n","export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\n    const req = await fetch(url, {\n        mode: \"cors\",\n        credentials: \"omit\",\n        cache: useCache ? \"force-cache\" : \"default\",\n    });\n\n    if (req.status != 200) {\n        throw new Error(req.status + \" Unable to load \" + req.url);\n    }\n\n    return req;\n}\n\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\n    const buffer = new Uint8Array(contentLength);\n\n    let bytesRead = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer.set(value, bytesRead);\n        bytesRead += value.length;\n        onProgress?.(bytesRead / contentLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadChunkedDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const chunks = [];\n    let receivedLength = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        chunks.push(value);\n        receivedLength += value.length;\n    }\n\n    const buffer = new Uint8Array(receivedLength);\n    let position = 0;\n    for (const chunk of chunks) {\n        buffer.set(chunk, position);\n        position += chunk.length;\n\n        onProgress?.(position / receivedLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadRequestDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    if (res.headers.has(\"content-length\")) {\n        return loadDataIntoBuffer(res, onProgress);\n    } else {\n        return loadChunkedDataIntoBuffer(res, onProgress);\n    }\n}\n","import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this.LoadFromArrayBuffer(buffer, scene);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene): Splat {\n        const buffer = new Uint8Array(arrayBuffer);\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n}\n\nexport { Loader };\n","import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { Converter } from \"../utils/Converter\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass PLYLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        return this.LoadFromArrayBuffer(plyData.buffer, scene, format);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene, format);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene, format: string = \"\"): Splat {\n        const buffer = new Uint8Array(this._ParsePLYBuffer(arrayBuffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            \n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                    case \"scaling_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                    case \"scaling_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                    case \"scaling_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                    case \"features_0\":\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                    case \"features_1\":\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                    case \"features_2\":\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                    case \"opacity_0\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                    case \"rotation_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                    case \"rotation_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                    case \"rotation_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                    case \"rotation_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n","import { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Splatv } from \"../splats/Splatv\";\nimport { SplatvData } from \"../splats/SplatvData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass SplatvLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splatv> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this._ParseSplatvBuffer(buffer.buffer, scene, camera);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n    ): Promise<Splatv> {\n        const reader = new FileReader();\n        let splatv: Splatv | null = null;\n        reader.onload = (e) => {\n            splatv = this._ParseSplatvBuffer(e.target!.result as ArrayBuffer, scene, camera);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        if (!splatv) {\n            throw new Error(\"Failed to load splatv file\");\n        }\n        return splatv;\n    }\n\n    private static _ParseSplatvBuffer(inputBuffer: ArrayBuffer, scene: Scene, camera: Camera | null): Splatv {\n        let result: Splatv | null = null;\n\n        const handleChunk = (\n            chunk: { size: number; type: string; texwidth: number; texheight: number },\n            buffer: Uint8Array,\n            chunks: { size: number; type: string }[],\n        ) => {\n            if (chunk.type === \"magic\") {\n                const intView = new Int32Array(buffer.buffer);\n                if (intView[0] !== 0x674b) {\n                    throw new Error(\"Invalid splatv file\");\n                }\n                chunks.push({ size: intView[1], type: \"chunks\" });\n            } else if (chunk.type === \"chunks\") {\n                const splatChunks = JSON.parse(new TextDecoder(\"utf-8\").decode(buffer));\n                if (splatChunks.length == 0) {\n                    throw new Error(\"Invalid splatv file\");\n                } else if (splatChunks.length > 1) {\n                    console.warn(\"Splatv file contains more than one chunk, only the first one will be loaded\");\n                }\n                const chunk = splatChunks[0];\n                const cameras = chunk.cameras as { position: number[]; rotation: number[][] }[];\n                if (camera && cameras && cameras.length) {\n                    const cameraData = cameras[0];\n                    const position = new Vector3(\n                        cameraData.position[0],\n                        cameraData.position[1],\n                        cameraData.position[2],\n                    );\n                    const rotation = Quaternion.FromMatrix3(\n                        new Matrix3(\n                            cameraData.rotation[0][0],\n                            cameraData.rotation[0][1],\n                            cameraData.rotation[0][2],\n                            cameraData.rotation[1][0],\n                            cameraData.rotation[1][1],\n                            cameraData.rotation[1][2],\n                            cameraData.rotation[2][0],\n                            cameraData.rotation[2][1],\n                            cameraData.rotation[2][2],\n                        ),\n                    );\n                    camera.position = position;\n                    camera.rotation = rotation;\n                }\n                chunks.push(chunk);\n            } else if (chunk.type === \"splat\") {\n                const data = SplatvData.Deserialize(buffer, chunk.texwidth, chunk.texheight);\n                const splatv = new Splatv(data);\n                scene.addObject(splatv);\n                result = splatv;\n            }\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const chunks: { size: number; type: string; texwidth: number; texheight: number }[] = [\n            { size: 8, type: \"magic\", texwidth: 0, texheight: 0 },\n        ];\n        let chunk: { size: number; type: string; texwidth: number; texheight: number } | undefined = chunks.shift();\n        let buffer = new Uint8Array(chunk!.size);\n        let offset = 0;\n        let inputOffset = 0;\n        while (chunk) {\n            while (offset < chunk.size) {\n                const sizeToRead = Math.min(chunk.size - offset, ubuf.length - inputOffset);\n                buffer.set(ubuf.subarray(inputOffset, inputOffset + sizeToRead), offset);\n                offset += sizeToRead;\n                inputOffset += sizeToRead;\n            }\n            handleChunk(chunk, buffer, chunks);\n            if (result) {\n                return result;\n            }\n            chunk = chunks.shift();\n            if (chunk) {\n                buffer = new Uint8Array(chunk.size);\n                offset = 0;\n            }\n        }\n\n        throw new Error(\"Invalid splatv file\");\n    }\n}\n\nexport { SplatvLoader };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n","\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,h:__embind_register_bool,g:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,i:__embind_register_void,j:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"__getTypeName\"])(a0);var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"_emscripten_stack_restore\"])(a0);var __emscripten_stack_alloc=a0=>(__emscripten_stack_alloc=wasmExports[\"_emscripten_stack_alloc\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"emscripten_stack_get_current\"])();var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return readyPromise\n}\n);\n})();\nexport default loadWasm;","import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n    public colorTransformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _singleSplatIndices: Map<SingleSplat, number>;\n    private _offsets: Map<Splat, number>;\n    private _singleOffsets: Map<SingleSplat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _colorTransforms: Float32Array;\n    private _colorTransformsWidth: number;\n    private _colorTransformsHeight: number;\n    private _colorTransformIndices: Uint32Array;\n    private _colorTransformIndicesWidth: number;\n    private _colorTransformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._singleSplatIndices = new Map<SingleSplat, number>();\n        this._offsets = new Map<Splat, number>();\n        this._singleOffsets = new Map<SingleSplat, number>();\n        const lookup = new Map<number, Splat>();\n        const singlelookup = new Map<number, SingleSplat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.splatCount;\n                splatIndex++;\n                \n                for(let singleSplat of object.splats) {\n                    this._singleSplatIndices.set(singleSplat, splatIndex);\n                    this._singleOffsets.set(singleSplat, splatIndex);\n                    singlelookup.set(vertexCount, singleSplat);\n                    splatIndex++;\n                }\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._colorTransformsWidth = 4;\n        this._colorTransformsHeight = 64;\n        this._colorTransforms = new Float32Array(this._colorTransformsWidth * this._colorTransformsHeight * 4);\n        this._colorTransforms.fill(0);\n        this._colorTransforms[0] = 1;\n        this._colorTransforms[5] = 1;\n        this._colorTransforms[10] = 1;\n        this._colorTransforms[15] = 1;\n\n        this._colorTransformIndicesWidth = 1024;\n        this._colorTransformIndicesHeight = Math.ceil(this.vertexCount / this._colorTransformIndicesWidth);\n        this._colorTransformIndices = new Uint32Array(\n            this._colorTransformIndicesWidth * this._colorTransformIndicesHeight,\n        );\n        this.colorTransformIndices.fill(0);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            splat.renderNumberChanged = false;\n            this.transformsChanged = true;\n        };\n\n        const updateColorTransforms = () => {\n            let colorTransformsChanged = false;\n            for (const splat of this._splatIndices.keys()) {\n                if (splat.colorTransformChanged) {\n                    colorTransformsChanged = true;\n                    break;\n                }\n            }\n            if (!colorTransformsChanged) {\n                return;\n            }\n            const colorTransformsMap: Matrix4[] = [new Matrix4()];\n            this._colorTransformIndices.fill(0);\n            let i = 1;\n            for (const splat of this._splatIndices.keys()) {\n                const offset = this._offsets.get(splat) as number;\n                for (const colorTransform of splat.colorTransforms) {\n                    if (!colorTransformsMap.includes(colorTransform)) {\n                        colorTransformsMap.push(colorTransform);\n                        i++;\n                    }\n                }\n                for (const index of splat.colorTransformsMap.keys()) {\n                    const colorTransformIndex = splat.colorTransformsMap.get(index) as number;\n                    this._colorTransformIndices[index + offset] = colorTransformIndex + i - 1;\n                }\n                splat.colorTransformChanged = false;\n            }\n            for (let index = 0; index < colorTransformsMap.length; index++) {\n                const colorTransform = colorTransformsMap[index];\n                this._colorTransforms.set(colorTransform.buffer, index * 16);\n            }\n            this.colorTransformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n                updateColorTransforms();\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.splatCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            \n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.splatCount);\n            const selectionPtr = wasmModule._malloc(splat.splatCount);\n            const dataPtr = wasmModule._malloc(8 * splat.splatCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n\n            wasmModule.HEAPF32.set(splat.Positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.Colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.Selections, selectionPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.splatCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.splatCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.splatCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.splatCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.splatCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.splatCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n\n            this.dataChanged = true;\n            this.colorTransformsChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (splat.colorTransformChanged) {\n                updateColorTransforms();\n            }\n            \n            if (!splat.data.changed || splat.data.detached || !splat.renderNumberChanged) return;\n            \n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.splatCount,\n                positions: splat.Positions,\n                rotations: splat.Rotations,\n                scales: splat.Scales,\n                colors: splat.Colors,\n                selection: splat.Selections,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n\n        updateColorTransforms();\n    }\n    \n    get offsets() {\n        return this._offsets;\n    }\n\n    get singleOffsets() {\n        return this._singleOffsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsWidth() {\n        return this._colorTransformsWidth;\n    }\n\n    get colorTransformsHeight() {\n        return this._colorTransformsHeight;\n    }\n\n    get colorTransformIndices() {\n        return this._colorTransformIndices;\n    }\n\n    get colorTransformIndicesWidth() {\n        return this._colorTransformIndicesWidth;\n    }\n\n    get colorTransformIndicesHeight() {\n        return this._colorTransformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n","class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n","import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport {\n    ObjectAddedEvent,\n    ObjectChangedEvent,\n    ObjectRemovedEvent,\n    RenderedSplatsChangedEvent\n} from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { Scene } from \"../../../core/Scene\"\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n    private _worker: Worker | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n        let u_colorTransforms: WebGLUniformLocation;\n        let u_colorTransformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let colorTransformsTexture: WebGLTexture;\n        let colorTransformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            this._worker = new SortWorker();\n            this._worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n            \n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    object.addEventListener(\"renderedSplatsChanged\", handleRenderedSplatsChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            colorTransformsTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransforms = gl.getUniformLocation(this.program, \"u_colorTransforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransforms, 3);\n\n            colorTransformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransformIndices = gl.getUniformLocation(\n                this.program,\n                \"u_colorTransformIndices\",\n            ) as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransformIndices, 4);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleRenderedSplatsChanged = (event: Event) => {\n            const e = event as RenderedSplatsChangedEvent;\n            \n            resetSplatData();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n            \n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        const resetSplatData = () => {\n            this._renderData?.dispose();\n            this._renderData = new RenderData(this._scene as Scene);\n\n            this._worker?.terminate();\n            createWorker();\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (\n                this.renderData.dataChanged ||\n                this.renderData.transformsChanged ||\n                this.renderData.colorTransformsChanged\n            ) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                if (this.renderData.colorTransformsChanged) {\n                    gl.activeTexture(gl.TEXTURE3);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.colorTransformsWidth,\n                        this.renderData.colorTransformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.colorTransforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE4);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.colorTransformIndicesWidth,\n                        this.renderData.colorTransformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.colorTransformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                console.log(detachedPositions.length)\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                console.log(detachedTransforms.length)\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                console.log(detachedTransformIndices.length)\n                this._worker?.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n                this.renderData.colorTransformsChanged = false;\n            }\n\n            this._camera.update();\n            this._worker?.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.depthIndex.length);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    object.removeEventListener(\"renderedSplatsChanged\", handleObjectChanged);\n                }\n            }\n\n            this._worker?.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    get worker() {\n        return this._worker;\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n","import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n","import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n    \n    private _customPrograms: ShaderProgram[];\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    removeAllPrograms: () => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n        \n        this._renderProgram = new RenderProgram(this, renderPasses);\n        this._customPrograms = [];\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n            this._customPrograms?.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.removeAllPrograms = () => {\n            for(let i = 0; i < this._customPrograms.length; i++) {\n                var program = this._customPrograms.pop();\n                if(program != undefined)\n                    this.removeProgram(program);\n            }\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n","import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    public enabled: boolean = true;\n\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    \n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled) return;\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled || !dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { Camera } from \"../cameras/Camera\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass FPSControls {\n    moveSpeed: number = 1.5;\n    lookSpeed: number = 0.7;\n    dampening: number = 0.5;\n    update: () => void;\n    dispose: () => void;\n\n    constructor(camera: Camera, canvas: HTMLCanvasElement) {\n        const keys: { [key: string]: boolean } = {};\n        let pitch = camera.rotation.toEuler().x;\n        let yaw = camera.rotation.toEuler().y;\n        let targetPosition = camera.position;\n        let pointerLock = false;\n\n        const onMouseDown = () => {\n            canvas.requestPointerLock();\n        };\n\n        const onPointerLockChange = () => {\n            pointerLock = document.pointerLockElement === canvas;\n            if (pointerLock) {\n                canvas.addEventListener(\"mousemove\", onMouseMove);\n            } else {\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\n            }\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            const mouseX = e.movementX;\n            const mouseY = e.movementY;\n\n            yaw += mouseX * this.lookSpeed * 0.001;\n            pitch -= mouseY * this.lookSpeed * 0.001;\n            pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch));\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n            if (e.code === \"Escape\") document.exitPointerLock();\n        };\n\n        this.update = () => {\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n            let move = new Vector3(0, 0, 0);\n            if (keys[\"KeyS\"]) {\n                move = move.add(forward);\n            }\n            if (keys[\"KeyW\"]) {\n                move = move.subtract(forward);\n            }\n            if (keys[\"KeyA\"]) {\n                move = move.subtract(right);\n            }\n            if (keys[\"KeyD\"]) {\n                move = move.add(right);\n            }\n            move = new Vector3(move.x, 0, move.z);\n            if (move.magnitude() > 0) {\n                move = move.normalize();\n            }\n\n            targetPosition = targetPosition.add(move.multiply(this.moveSpeed * 0.01));\n            camera.position = camera.position.add(targetPosition.subtract(camera.position).multiply(this.dampening));\n\n            camera.rotation = Quaternion.FromEuler(new Vector3(pitch, yaw, 0));\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n\n            document.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n\n            window.removeEventListener(\"keydown\", onKeyDown);\n            window.removeEventListener(\"keyup\", onKeyUp);\n        };\n\n        window.addEventListener(\"keydown\", onKeyDown);\n        window.addEventListener(\"keyup\", onKeyUp);\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n\n        document.addEventListener(\"pointerlockchange\", onPointerLockChange);\n\n        this.update();\n    }\n}\n\nexport { FPSControls };\n","import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n\n    constructor(normal: Vector3, point: Vector3) {\n        this.normal = normal;\n        this.point = point;\n    }\n\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n}\n\nexport { Plane };\n","import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n","import { Splatv } from \"../../../splats/Splatv\";\nimport { SplatvData } from \"../../../splats/SplatvData\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n  \nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\nuniform float time;\n  \nin vec2 position;\nin int index;\n  \nout vec4 vColor;\nout vec2 vPosition;\n  \nvoid main () {\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\n    vec2 trbf = unpackHalf2x16(motion1.w);\n    float dt = time - trbf.x;\n\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\n    if(topacity < 0.02) return;\n\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\n\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \n      \n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\n      \n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\n    vec4 pos = projection * cam;\n  \n    float clip = 1.2 * pos.w;\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\n\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\n    rot /= sqrt(dot(rot, rot));\n  \n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\n    mat3 R = mat3(\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\n    mat3 M = S * R;\n    mat3 Vrk = 4.0 * transpose(M) * M;\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n  \n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n  \n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n  \n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      \n    uint rgba = static1.w;\n    vColor = \n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \n        vec4(1.0, 1.0, 1.0, topacity) *\n        vec4(\n            (rgba) & 0xffu, \n            (rgba >> 8) & 0xffu, \n            (rgba >> 16) & 0xffu, \n            (rgba >> 24) & 0xffu) / 255.0;\n\n    vec2 vCenter = vec2(pos) / pos.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n    vPosition = position;\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n  \nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n\nclass VideoRenderProgram extends ShaderProgram {\n    private _renderData: SplatvData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[] = []) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_time: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const setupWorker = () => {\n            if (renderer.renderProgram.worker === null) {\n                console.error(\"Render program is not initialized. Cannot render without worker\");\n                return;\n            }\n            worker = renderer.renderProgram.worker;\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === null) {\n                        this._renderData = object.data;\n                        object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    } else {\n                        console.warn(\"Multiple Splatv objects are not currently supported\");\n                    }\n                }\n            }\n\n            if (this._renderData === null) {\n                console.error(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            u_time = gl.getUniformLocation(this.program, \"time\") as WebGLUniformLocation;\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            setupWorker();\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this._splatTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                this._renderData.width,\n                this._renderData.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                this._renderData.data,\n            );\n\n            const positions = this._renderData.positions;\n            const dummyTransforms = new Float32Array(new Matrix4().buffer);\n            const dummyTransformIndices = new Uint32Array(this._renderData.vertexCount);\n            dummyTransformIndices.fill(0);\n            worker.postMessage(\n                {\n                    sortData: {\n                        positions: positions,\n                        transforms: dummyTransforms,\n                        transformIndices: dummyTransformIndices,\n                        vertexCount: this._renderData.vertexCount,\n                    },\n                },\n                [positions.buffer, dummyTransforms.buffer, dummyTransformIndices.buffer],\n            );\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === null) {\n                    this._renderData = e.object.data;\n                    e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n                } else {\n                    console.warn(\"Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.\");\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === e.object.data) {\n                    this._renderData = null;\n                    e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splatv && this._renderData === e.object.data) {\n                this.dispose();\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (!this._renderData) {\n                console.warn(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this._depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this._renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === object.data) {\n                        this._renderData = null;\n                        object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    }\n                }\n            }\n\n            worker?.terminate();\n\n            gl.deleteTexture(this._splatTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n    }\n\n    get renderData(): SplatvData | null {\n        return this._renderData;\n    }\n\n    protected _getVertexSource(): string {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource(): string {\n        return fragmentShaderSource;\n    }\n}\n\nexport { VideoRenderProgram };\n","import { Box3 } from \"./Box3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public pointIndices: number[] = [];\n\n    constructor(\n        public bounds: Box3,\n        public boxes: Box3[],\n        pointIndices: number[],\n    ) {\n        if (pointIndices.length > 1) {\n            this.split(bounds, boxes, pointIndices);\n        } else if (pointIndices.length > 0) {\n            this.pointIndices = pointIndices;\n        }\n    }\n    \n    private split(bounds: Box3, boxes: Box3[], pointIndices: number[]) {\n        const axis = bounds.size().maxComponent();\n        pointIndices.sort((a, b) => boxes[a].center().getComponent(axis) - boxes[b].center().getComponent(axis));\n\n        const mid = Math.floor(pointIndices.length / 2);\n        const leftIndices = pointIndices.slice(0, mid);\n        const rightIndices = pointIndices.slice(mid);\n\n        this.left = new BVHNode(bounds, boxes, leftIndices);\n        this.right = new BVHNode(bounds, boxes, rightIndices);\n    }\n\n    public queryRange(range: Box3): number[] {\n        if (!this.bounds.intersects(range)) {\n            return [];\n        } else if (this.left !== null && this.right !== null) {\n            return this.left.queryRange(range).concat(this.right.queryRange(range));\n        } else {\n            return this.pointIndices.filter((index) => range.intersects(this.boxes[index]));\n        }\n    }\n}\n\nclass BVH {\n    public root: BVHNode;\n\n    constructor(bounds: Box3, boxes: Box3[]) {\n        const pointIndices = boxes.map((_, index) => index);\n        this.root = new BVHNode(bounds, boxes, pointIndices);\n    }\n\n    public queryRange(range: Box3) {\n        return this.root.queryRange(range);\n    }\n}\n\nexport { BVH };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Vector3 } from \"../../../math/Vector3\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\nimport { Box3 } from \"../../../math/Box3\";\nimport { BVH } from \"../../../math/BVH\";\nimport { RenderData } from \"./RenderData\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n    testPointSingleSplats: (x: number, y: number) => SingleSplat[] | null;\n    testLayer: (value: number, positiveDirection: boolean, axis: string) => SingleSplat[] | null;\n\n    constructor(renderProgram: RenderProgram, maxDistance: number = 100, resolution: number = 1.0) {\n        let vertexCount = 0;\n        let bvh: BVH | null = null;\n\n        let singleSplatbvh: BVH | null = null;\n        let lookup: Splat[] = [];\n        let singleSplatLookup: SingleSplat[] = [];\n\n        const build = () => {\n            if(renderProgram.renderData === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return;\n            }\n            const startTimeSplat = performance.now();\n            \n            lookup = [];\n            const renderData = renderProgram.renderData as RenderData;\n            const boxes = new Array<Box3>(renderData.offsets.size);\n            let i = 0;\n            const bounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const splat of renderData.offsets.keys()) {\n                const splatBounds = splat.bounds;\n                boxes[i++] = splatBounds;\n                bounds.expand(splatBounds.min);\n                bounds.expand(splatBounds.max);\n                lookup.push(splat);\n            }\n            bounds.permute();\n            bvh = new BVH(bounds, boxes);\n\n            const endTimeSplat = performance.now();\n            const duration = endTimeSplat - startTimeSplat; \n            console.log(`creating BVH with SPLAT:  ${duration/1000} s (${duration} ms).`);\n\n            const startTimeSingleSplat = performance.now();\n            singleSplatLookup = [];\n            const singleSplatBoxes = new Array<Box3>(renderData.singleOffsets.size);\n            let j = 0;\n            const singleSplatbounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatBoxes[j++] = splatBounds;\n                singleSplatbounds.expand(splatBounds.min);\n                singleSplatbounds.expand(splatBounds.max);\n                singleSplatLookup.push(singleSplat);\n            }\n            singleSplatbounds.permute();\n            singleSplatbvh = new BVH(singleSplatbounds, singleSplatBoxes);\n\n            const endTimeSingleSplat = performance.now();\n            const durationSingleSplat = endTimeSingleSplat - startTimeSingleSplat;\n            console.log(`creating BVH with SPLAT:  ${durationSingleSplat/1000} s (${durationSingleSplat} ms).`);\n            \n            console.log(\"Got \" + boxes.length + \" boxes for Splat!\")\n            console.log(\"Got \" + singleSplatBoxes.length + \" boxes for Single Splats!\")\n            \n            vertexCount = renderData.vertexCount;\n        };\n        \n        this.testLayer = (value: number, positiveDirection: boolean, axis: string) => {\n            const renderData = renderProgram.renderData as RenderData;\n            singleSplatLookup = [];\n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                if(axis === \"x\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().x >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().x < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"y\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().y >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().y < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"z\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().z >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().z < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                }\n            }\n            return singleSplatLookup;\n        }\n\n        this.testPoint = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            build();\n\n            if (bvh === null) {\n                console.error(\"Failed to build octree for IntersectionTester\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            if (vertexCount !== renderData.vertexCount) {\n                console.warn(\"IntersectionTester has not been rebuilt since the last render\");\n            }\n\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                const points = bvh.queryRange(queryBox);\n                if (points.length > 0) {\n                    return lookup[points[0]];\n                }\n            }\n\n            return null;\n        };\n\n        \n        this.testPointSingleSplats = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            singleSplatLookup = [];\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                \n                for (const singleSplat of renderData.singleOffsets.keys()) {\n                    if(singleSplat.bounds.intersects(queryBox)) {\n                        singleSplatLookup.push(singleSplat)\n                    }\n                }\n            }\n            return singleSplatLookup;\n        };\n    }\n}\n\nexport { IntersectionTester };\n","import { Box3 } from \"./Box3\";\nimport { SingleSplat } from \"../splats/SingleSplat\";\nimport { Vector3 } from \"./Vector3\";\nimport { Ray } from \"./Ray\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public bounds: Box3;\n    public objects: SingleSplat[] = [];\n\n    constructor(objects: SingleSplat[] | undefined = undefined) {\n        this.bounds = new Box3(new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity));\n        \n        if(objects === undefined)\n            return;\n        \n        objects.forEach(obj => {\n            this.bounds.expand(obj.bounds.min);\n            this.bounds.expand(obj.bounds.max);\n        });\n        if (objects.length <= 2) {\n            this.objects = objects;\n        } else {\n            this.split(objects);\n        }\n    }\n\n    private split(objects: SingleSplat[]): void {\n        const mid = Math.floor(objects.length / 2);\n        objects.sort((a, b) => a.bounds.center().x - b.bounds.center().x); // Simplistic sort by X-axis\n\n        this.left = new BVHNode(objects.slice(0, mid));\n        this.right = new BVHNode(objects.slice(mid));\n    }\n\n    public intersects(ray: Ray, maxDistance: number): SingleSplat[] {\n        if (!ray.intersectsBox(this.bounds, maxDistance)) {\n            return [];\n        }\n        if (this.objects.length > 0) {\n            return this.objects.filter(obj => ray.intersectsBox(obj.bounds, maxDistance));\n        }\n        return [\n            ...(this.left ? this.left.intersects(ray, maxDistance) : []),\n            ...(this.right ? this.right.intersects(ray, maxDistance) : [])\n        ];\n    }\n}\n\nexport { BVHNode }","import { Vector3 } from \"./Vector3\";\nimport { Box3 } from \"./Box3\";\n\nclass Ray {\n    origin: Vector3;\n    direction: Vector3;\n\n    constructor(origin: Vector3, direction: Vector3) {\n        this.origin = origin;\n        this.direction = direction.normalize(); // Stellen Sie sicher, dass die Richtung normalisiert ist\n    }\n\n    /**\n     * Berechnet einen Punkt auf dem Strahl bei einem bestimmten Skalar 't'.\n     * @param t Der Skalarwert, der bestimmt, wie weit entlang des Strahls der Punkt liegt.\n     * @returns Der Punkt auf dem Strahl.\n     */\n    getPoint(t: number): Vector3 {\n        return this.origin.add(this.direction.multiply(t));\n    }\n\n    /**\n     * Prüft die Intersektion dieses Strahls mit einer gegebenen Bounding Box.\n     * @param box Die Box, mit der die Intersektion geprüft werden soll.\n     * @returns True, wenn der Strahl die Box schneidet, sonst false.\n     */\n    intersectsBox(box: Box3, maxDistance: number = Infinity): boolean {\n        let tmin = (box.min.x - this.origin.x) / this.direction.x;\n        let tmax = (box.max.x - this.origin.x) / this.direction.x;\n\n        if (tmin > tmax) [tmin, tmax] = [tmax, tmin];\n\n        let tymin = (box.min.y - this.origin.y) / this.direction.y;\n        let tymax = (box.max.y - this.origin.y) / this.direction.y;\n\n        if (tymin > tymax) [tymin, tymax] = [tymax, tymin];\n\n        if ((tmin > tymax) || (tymin > tmax))\n            return false;\n\n        if (tymin > tmin) tmin = tymin;\n        if (tymax < tmax) tmax = tymax;\n\n        let tzmin = (box.min.z - this.origin.z) / this.direction.z;\n        let tzmax = (box.max.z - this.origin.z) / this.direction.z;\n\n        if (tzmin > tzmax) [tzmin, tzmax] = [tzmax, tzmin];\n\n        if ((tmin > tzmax) || (tzmin > tmax))\n            return false;\n\n        if (tzmin > tmin) tmin = tzmin;\n        if (tzmax < tmax) tmax = tzmax;\n\n        return (tmin < maxDistance) && (tmax > 0);\n    }\n}\n\nexport { Ray }","import { Camera } from \"./Camera\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { CameraData } from \"./CameraData\";\nimport {Vector4} from \"../math/Vector4\";\nimport {Plane} from \"../math/Plane\";\n\nclass CameraHelper {\n    private _camera:Camera;\n    private _cameraData: CameraData;\n    \n    private _frustumCorners: Vector3[];\n    \n    constructor(camera: Camera) {\n        this._camera = camera;\n        this._cameraData = this._camera.data;\n        this._frustumCorners = [];\n    }\n    \n    public calculateFrustum(): Vector3[] {\n        \n        const near = this._cameraData.near;\n        const far = this._cameraData.far;\n        const fovX = this._cameraData.fx;\n        const fovY = this._cameraData.fy;\n        \n        const halfHeightNear = Math.tan(fovY / 2) * near;\n        const halfWidthNear = Math.tan(fovX / 2) * near;\n        \n        const halfHeightFar = Math.tan(fovY / 2) * far;\n        const halfWidthFar = Math.tan(fovX / 2) * far;\n        \n        const nearTopLeft = new Vector3(-halfWidthNear, halfHeightNear, -near);\n        const nearTopRight = new Vector3(halfWidthNear, halfHeightNear, -near);\n        const nearBottomLeft = new Vector3(-halfWidthNear, -halfHeightNear, -near);\n        const nearBottomRight = new Vector3(halfWidthNear, -halfHeightNear, -near);\n\n        const farTopLeft = new Vector3(-halfWidthFar, halfHeightFar, far);\n        const farTopRight = new Vector3(halfWidthFar, halfHeightFar, far);\n        const farBottomLeft = new Vector3(-halfWidthFar, -halfHeightFar, far);\n        const farBottomRight = new Vector3(halfWidthFar, -halfHeightFar, far);\n\n        this._frustumCorners.push(\n            this.cameraToWorldCoords(nearTopLeft),\n            this.cameraToWorldCoords(nearTopRight),\n            this.cameraToWorldCoords(nearBottomLeft),\n            this.cameraToWorldCoords(nearBottomRight),\n            this.cameraToWorldCoords(farTopLeft),\n            this.cameraToWorldCoords(farTopRight),\n            this.cameraToWorldCoords(farBottomLeft),\n            this.cameraToWorldCoords(farBottomRight)\n        );\n\n        return this._frustumCorners;\n    }\n    \n    public cameraToWorldCoords(cameraCoords: Vector3): Vector3 {\n        const cameraSpaceCoords = new Vector4(cameraCoords.x, cameraCoords.y, cameraCoords.z, 1);\n        \n        const inverseViewMatrix = this._cameraData.viewMatrix.invert();\n        const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n        \n        const worldSpacePosition = new Vector3(\n            worldSpaceCoords.x / worldSpaceCoords.w,\n            worldSpaceCoords.y / worldSpaceCoords.w,\n            worldSpaceCoords.z / worldSpaceCoords.w,\n        );\n        \n        return worldSpacePosition;\n    }\n\n    public pointInFrustum(point: Vector3): boolean {\n        const planes = [\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[2]), // Near plane\n            this.createPlane(this._frustumCorners[4], this._frustumCorners[5], this._frustumCorners[6]), // Far plane\n            \n            this.createPlane(this._frustumCorners[0], this._frustumCorners[2], this._frustumCorners[4]), // left\n            this.createPlane(this._frustumCorners[1], this._frustumCorners[3], this._frustumCorners[5]), // right\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[4]), // bottom\n            this.createPlane(this._frustumCorners[2], this._frustumCorners[3], this._frustumCorners[6]), // top\n        ];\n        \n        return  planes[0].distanceToPoint(point) <= 0 && // before near plane\n                planes[1].distanceToPoint(point) >= 0 && // behind far plane\n                planes[2].distanceToPoint(point) <= 0 && // right from left plane\n                planes[3].distanceToPoint(point) >= 0 && // left from right plane\n                planes[4].distanceToPoint(point) >= 0 && // over bottom plane\n                planes[5].distanceToPoint(point) <= 0; // under top plane\n    }\n\n    private createPlane(a: Vector3, b: Vector3, c: Vector3): FrustumPlane {\n        const ab = b.subtract(a);\n        const ac = c.subtract(a);\n        const normal = ab.cross(ac).normalize();\n        const d = -normal.dot(a);\n        return new FrustumPlane(normal, d);\n    }\n}\n\nclass FrustumPlane {\n    normal: Vector3;\n    d: number;\n\n    constructor(normal: Vector3, d: number) {\n        this.normal = normal;\n        this.d = d;\n    }\n\n    distanceToPoint(point: Vector3): number {\n        // Berechnet den Abstand des Punktes von der Ebene\n        return this.normal.dot(point) + this.d;\n    }\n}\n\n\nexport { CameraHelper }","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass CubeVisualisationProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], points: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        if(points.length !== (2 || 8)) {\n            console.log(\"Please provide 2 oder 8 corners\")\n        }\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let corners: Float32Array;\n        let surface: Float32Array;\n        \n        if(points.length === 2) {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n        } else {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n            const [x3, y3, z3] = points[2];\n            const [x4, y4, z4] = points[3];\n            const [x5, y5, z5] = points[4];\n            const [x6, y6, z6] = points[5];\n            const [x7, y7, z7] = points[6];\n            const [x8, y8, z8] = points[7];\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y2, z2,  // Linie von P1 zu P2\n                x1, y1, z1, x3, y3, z3,  // Linie von P1 zu P3\n                x1, y1, z1, x5, y5, z5,  // Linie von P1 zu P5\n                x2, y2, z2, x4, y4, z4,  // Linie von P2 zu P4\n                x2, y2, z2, x6, y6, z6,  // Linie von P2 zu P6\n                x3, y3, z3, x4, y4, z4,  // Linie von P3 zu P4\n                x3, y3, z3, x7, y7, z7,  // Linie von P3 zu P7\n                x5, y5, z5, x6, y6, z6,  // Linie von P5 zu P6\n                x5, y5, z5, x7, y7, z7,  // Linie von P5 zu P7\n                x4, y4, z4, x8, y8, z8,  // Linie von P4 zu P8\n                x6, y6, z6, x8, y8, z8,  // Linie von P6 zu P8\n                x7, y7, z7, x8, y8, z8   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y2, z2, x3, y3, z3, x2, y2, z2, x4, y4, z4, x3, y3, z3,\n                x5, y5, z5, x6, y6, z6, x7, y7, z7, x6, y6, z6, x8, y8, z8, x7, y7, z7,\n                x1, y1, z1, x5, y5, z5, x3, y3, z3, x7, y7, z7, x5, y5, z5, x3, y3, z3,\n                x2, y2, z2, x6, y6, z6, x4, y4, z4, x8, y8, z8, x6, y6, z6, x4, y4, z4,\n                x1, y1, z1, x2, y2, z2, x5, y5, z5, x6, y6, z6, x2, y2, z2, x5, y5, z5,\n                x3, y3, z3, x4, y4, z4, x7, y7, z7, x8, y8, z8, x4, y4, z4, x7, y7, z7\n            ])\n        }\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36);\n        };\n        \n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(corners, colorLines);\n            drawCube(surface, color)\n        };\n\n        this._resize = () => {};\n        \n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n    \n}\n\nexport { CubeVisualisationProgram }","import {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\nimport {ShaderProgram} from \"../renderers/webgl/programs/ShaderProgram\";\n\nclass Utils {\n    \n    public static draw(renderer: WebGLRenderer, point:Vector3, size: number) {\n        let upperLeftCorner = new Float32Array([point.x+(size/2), point.y+(size/2), point.z+(size/2)]);\n        let bottomRightCorner = new Float32Array([point.x-(size/2), point.y-(size/2), point.z-(size/2)]);\n\n        var renderProgram = new CubeVisualisationProgram(renderer, [], [upperLeftCorner, bottomRightCorner]);\n        renderer.addProgram(renderProgram);\n    }\n\n    public static drawCone(renderer: WebGLRenderer, points:Vector3[]) {\n        \n        let vecs: Float32Array[] = []\n        for(let i = 0; i < points.length; i++) {\n            vecs.push(new Float32Array([points[i].x, points[i].y, points[i].z]))\n        }\n        var renderProgram = new CubeVisualisationProgram(renderer, [], vecs);\n        renderer.addProgram(renderProgram);\n    }\n}\n\nexport { Utils }","import { BVHNode } from \"../../../math/BVHNode\";\nimport { SingleSplat } from \"../../../splats/SingleSplat\";\nimport { Camera } from \"../../../cameras/Camera\";\nimport { Ray } from \"../../../math/Ray\"\nimport {BVH} from \"../../../math/BVH\";\nimport {Box3} from \"../../../math/Box3\";\nimport {Vector3} from \"../../../math/Vector3\";\nimport {RenderProgram} from \"../programs/RenderProgram\";\nimport {RenderData} from \"./RenderData\";\nimport {WebGLRenderer} from \"../../WebGLRenderer\";\nimport { CubeVisualisationProgram } from \"../programs/individual/CubeVisualisationProgram\";\nimport {CameraHelper} from \"../../../cameras/CameraHelper\";\nimport {Utils} from \"../../../utils/Utils\";\n\nclass Raycaster {\n    private bvh: BVHNode | undefined;\n    private renderer: WebGLRenderer;\n    private renderProgram: RenderProgram;\n    \n    public testBox: (point1: Float32Array, point2: Float32Array) => SingleSplat[] | null;\n    public testCameraViewFrustum: (camera: Camera) => SingleSplat[] | null;\n\n    constructor(renderer: WebGLRenderer, buildBVH: boolean) {\n        let singleSplatLookup: SingleSplat[] = [];\n        this.renderer = renderer;\n        this.renderProgram = renderer.renderProgram;\n        \n        if(buildBVH) {\n            const renderData = this.renderProgram.renderData as RenderData;\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatLookup.push(singleSplat);\n            }\n            this.bvh = new BVHNode(singleSplatLookup);\n        }\n\n        this.testBox = (point1: Float32Array, point2: Float32Array) => {\n            const renderData = this.renderProgram.renderData as RenderData;\n            \n            if(renderData === undefined)\n                return null;\n\n            singleSplatLookup = [];\n            \n            const [x1, y1, z1] = point1;\n            const [x2, y2, z2] = point2;\n            const minPoint = new Vector3(x1, y1, z1);\n            const maxPoint = new Vector3(x2, y2, z2);\n            \n            const queryBox = new Box3(maxPoint, minPoint);\n            queryBox.permute();\n            \n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(queryBox.contains(singleSplat.bounds.center())) {\n                    \n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n\n        this.testCameraViewFrustum = (camera: Camera, showFrustum: boolean = false, showForSeconds: number = -1) => {\n            this.renderer.removeAllPrograms();\n            const renderData = this.renderProgram.renderData as RenderData;\n            let camHelper: CameraHelper = new CameraHelper(camera);\n            let corners: Vector3[] = camHelper.calculateFrustum();\n            \n            singleSplatLookup = [];\n            \n            if(showFrustum) {\n                Utils.drawCone(this.renderer,corners)\n                if(showForSeconds > 0) {\n                    setTimeout(function() {\n                        renderer.removeAllPrograms();\n                    }, showForSeconds * 1000);\n                } \n            }\n\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(camHelper.pointInFrustum(singleSplat.bounds.center())) {\n\n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n    }\n\n    public testPointSingleSplats(x: number, y: number, camera: Camera, maxDistance: number): SingleSplat[] | null {\n        if(this.bvh === undefined)\n            return null;\n        \n        if (!camera) {\n            console.error(\"Camera is not initialized\");\n            return null;\n        }\n\n        const ray = new Ray(camera.position, camera.screenPointToRay(x, y));\n        return this.bvh.intersects(ray, maxDistance);\n    }\n}\n\nexport { Raycaster }","import { ShaderProgram } from \"../ShaderProgram\";\nimport { WebGLRenderer } from \"../../../WebGLRenderer\";\nimport { ShaderPass } from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 axisColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = axisColor;\n}\n`;\n\nclass AxisProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        const xVertices = new Float32Array([-50, 0, 0, 50, 0, 0]);\n        const yVertices = new Float32Array([0, -50, 0, 0, 50, 0]);\n        const zVertices = new Float32Array([0, 0, -50, 0, 0, 50]);\n\n        const xColor = new Float32Array([1, 0, 0, 0.5]);\n        const yColor = new Float32Array([0, 1, 0, 0.5]);\n        const zColor = new Float32Array([0, 0.5, 1, 0.5]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"axisColor\") as WebGLUniformLocation;\n        };\n\n        const drawAxis = (vertices: Float32Array, color: Float32Array) => {\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 2);\n        };\n\n        this._resize = () => {};\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawAxis(xVertices, xColor);\n            drawAxis(yVertices, yColor);\n            drawAxis(zVertices, zColor);\n        };\n\n        this._dispose = () => {};\n    }\n\n    protected _getVertexSource() {\n        return axisVertexShader;\n    }\n\n    protected _getFragmentSource() {\n        return axisFragmentShader;\n    }\n}\n\nexport { AxisProgram };\n","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass MultibleCubesProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], upperLeftCorners: Float32Array[], bottomRightCorners: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let tempAllCorners = [];\n        let tempAllSurface = [];\n        \n        let numberOfCubes = upperLeftCorners.length;\n        \n        for(var i = 0; i < numberOfCubes; i++) {\n            const [x1, y1, z1] = upperLeftCorners[i];\n            const [x2, y2, z2] = bottomRightCorners[i];\n\n\n            const corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n            tempAllCorners.push(...corners);\n\n\n            const surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n            tempAllSurface.push(...surface);\n        }\n\n        let allCorners = new Float32Array(tempAllCorners);\n        let allsurface = new Float32Array(tempAllSurface);\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24 * numberOfCubes);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36 * numberOfCubes);\n        };\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(allCorners, colorLines);\n            drawCube(allsurface, color)\n        };\n\n        this._resize = () => {};\n\n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n\n}\n\nexport { MultibleCubesProgram }\n","import {ShaderProgram} from \"../renderers/webgl/programs/ShaderProgram\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {ShaderPass} from \"../renderers/webgl/passes/ShaderPass\";\nimport {Octree} from \"./Octree\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass OctreeHelper extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], octree: Octree, level: number = 0, color: Float32Array = new Float32Array([1, 0, 0, 1])) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let tempAllCorners = [];\n        \n        const result = octree?.findNodesByLevel(level) || [];\n        \n        for(let i = 0; i < result.length; i++) {\n            const [x1, y1, z1] = [result[i].min.x, result[i].min.y, result[i].min.z]\n            const [x2, y2, z2] = [result[i].max.x, result[i].max.y, result[i].max.z]\n\n\n            const corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n            tempAllCorners.push(...corners);\n        }\n\n        let allCorners = new Float32Array(tempAllCorners);\n\n\n        const colorLines = color;\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(100);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24 * result.length);\n        };\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(allCorners, colorLines);\n        };\n\n        this._resize = () => {};\n\n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n\n}\n\nexport { OctreeHelper }\n"],"names":["Vector3","constructor","x","y","z","this","set","undefined","equals","v","addVectors","a","b","add","addScaledVector","s","subVectors","subtract","sub","multiply","buffer","divide","cross","distanceToSquared","dx","dy","dz","dot","lerp","t","min","Math","max","getComponent","axis","Error","minComponent","maxComponent","magnitude","sqrt","distanceTo","normalize","length","lengthSq","flat","clone","clamp","copy","toString","join","One","value","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","inverse","apply","vecQuat","conjugate","rotatedQuat","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","trace","FromAxisAngle","angle","halfAngle","LookRotation","direction","forward","rotAngle","acos","rotAxis","EventDispatcher","listeners","Map","addEventListener","type","listener","has","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","i","determinant","invert","det","invDet","Compose","position","rotation","scale","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","ObjectAddedEvent","Event","object","super","ObjectRemovedEvent","ObjectChangedEvent","RenderedSplatsChangedEvent","Object3D","positionChanged","rotationChanged","scaleChanged","_position","_rotation","_scale","_transform","_changeEvent","_renderedSplatsChanged","update","applyPosition","applyRotation","applyScale","raiseChangeEvent","_updateMatrix","transform","SplatData","vertexCount","positions","rotations","scales","colors","rendered","changed","detached","_vertexCount","_positions","Float32Array","_rotations","_scales","_colors","Uint8Array","_selection","_rendered","fill","removeVertex","index","removeItemsFromArray","removeVertexRange","count","arr","start","part1","subarray","part2","newArr","serialize","data","RowLength","f_buffer","u_buffer","reattach","selection","console","assert","byteLength","Deserialize","SplatvData","width","height","_data","_width","_height","Uint32Array","floor","Converter","SplatToPLY","header","properties","push","property","headerBuffer","TextEncoder","encode","plyRowLength","plyLength","output","DataView","ArrayBuffer","offset","scale_offset","opacity_offset","rot_offset","pos0","pos1","pos2","f_dc_0","SH_C0","f_dc_1","f_dc_2","alpha","opacity","log","scale0","scale1","scale2","rot0","rot1","rot2","rot3","setFloat32","f_dc_offset","Box3","contains","point","intersects","box","intersectsBasedOnCenter","centerA","center","centerB","sizeA","size","sizeB","expand","permute","surfaceArea","depth","Matrix3","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","SingleSplat","_index","_bounds","Infinity","_defaultColor","recalculateBounds","pos","Position","scl","Scale","translate","translation","rotate","R","rot","Rotation","currentRotation","newRot","color","Selected","Rendered","Color","colorVector","colorIndex","ResetColor","bounds","PositionVec3","ScaleVec3","Constants","BYTE_OFFSET_FLOAT","BYTE_OFFSET_DOUBLE","BYTE_OFFSET_INT","OctreeIterator","root","region","reset","indices","result","done","next","octant","children","child","pop","Symbol","iterator","_vector","d","r","origin","ray","at","target","lookAt","recast","closestPointToPoint","directionDistance","distanceToPoint","distanceSqToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectsBox","Constructor","flags","octantTable","findNextOctant","currentOctant","tx1","ty1","tz1","exit","raycastOctant","node","tx0","ty0","tz0","c","txm","tym","tzm","f","entry","findEntryOctant","OctreeRaycaster","intersectOctree","octree","dimensions","getDimensions","halfDimensions","getCenter","Number","EPSILON","invDirX","invDirY","invDirZ","getDepth","cull","findNodesByLevel","level","Octree","getIntersectingNodes","raycaster","leaves","layout","Octant","split","mid","combination","PointContainer","distance","RayPointIntersection","distanceToOrigin","distanceToRay","PointData","points","testPoints","threshold","params","Points","thresholdSq","distanceToRaySq","closestPoint","near","far","p","PointOctant","distanceToCenterSquared","bias","redistribute","pointData","il","j","jl","childData","merge","concat","countPoints","exists","getBias","getMaxPoints","getMaxDepth","remove","parent","last","move","findNearestPoint","maxDistance","skipSelf","bestDistance","sortedChildren","map","sort","intermediateResult","findPoints","radius","rSq","dSq","PointOctree","maxPoints","maxDepth","round","POSITIVE_INFINITY","raycast","octants","Splat","splat","selectedChanged","renderNumberChanged","colorTransformChanged","_splats","_selected","_colorTransforms","_colorTransformsMap","_numberOfSplats","_numberOfRenderedSplats","selected","Array","createSplatsData","time","singleSplat","timeEnd","createOctree","_octree","positionVector","dimension","forEach","applySelection","saveToFile","name","format","document","now","Date","getFullYear","getMonth","getDate","blob","plyData","Blob","link","createElement","download","href","URL","createObjectURL","click","splats","getSplatAtIndex","error","selectSplat","updateRenderingOfSplats","colorTransforms","colorTransformsMap","splatCount","numberOfRenderedSplats","Positions","tempPositions","Scales","tempScales","Rotations","tempRotations","Colors","tempColors","Selections","tempSelections","Splatv","CameraData","_fx","_fy","_near","_far","_projectionMatrix","_viewMatrix","_viewProj","_updateProjectionMatrix","fx","fy","projectionMatrix","viewMatrix","setSize","viewProj","Vector4","Camera","camera","screenPointToRay","clipSpaceCoords","inverseProjectionMatrix","cameraSpaceCoords","inverseViewMatrix","worldSpaceCoords","Scene","_objects","addObject","objects","removeObject","indexOf","splice","findObject","predicate","findObjectOfType","objectsToRemove","slice","buffers","async","initiateFetchRequest","url","useCache","req","fetch","mode","credentials","cache","status","loadRequestDataIntoBuffer","res","onProgress","headers","reader","body","getReader","contentLength","parseInt","bytesRead","read","loadDataIntoBuffer","chunks","receivedLength","chunk","loadChunkedDataIntoBuffer","Loader","LoadAsync","scene","LoadFromArrayBuffer","LoadFromFileAsync","file","FileReader","onload","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","arrayBuffer","PLYLoader","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","header_end","header_end_index","exec","rowOffset","offsets","double","int","uint","float","short","ushort","uchar","prop","filter","k","startsWith","_p","dataView","q_polycam","rgba","Uint8ClampedArray","r0","r1","r2","r3","getFloat32","getInt32","exp","temp","SplatvLoader","_ParseSplatvBuffer","splatv","handleChunk","intView","Int32Array","splatChunks","JSON","parse","warn","cameras","cameraData","texwidth","texheight","shift","inputOffset","sizeToRead","ShaderProgram","renderer","passes","_scene","_camera","_started","_initialized","_renderer","gl","_program","createProgram","_passes","vertexShader","createShader","VERTEX_SHADER","shaderSource","_getVertexSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","_getFragmentSource","attachShader","program","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","resize","useProgram","_resize","initialize","_initialize","pass","render","dispose","_render","_dispose","started","loadWasm","moduleArg","readyPromiseResolve","readyPromiseReject","readBinary","Module","readyPromise","reject","moduleOverrides","Object","assign","scriptDirectory","self","location","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","response","bind","wasmBinary","wasmMemory","err","tryParseAsDataURI","filename","isDataURI","decoded","atob","bytes","charCodeAt","intArrayFromBase64","dataURIPrefix","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","Int8Array","Int16Array","Uint16Array","Float64Array","wasmBinaryFile","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","getBinaryPromise","binaryFile","then","binary","getBinarySync","instantiateArrayBuffer","imports","receiver","WebAssembly","instantiate","reason","what","RuntimeError","abort","callRuntimeCallbacks","callbacks","embind_charCodes","BindingError","readLatin1String","ptr","ret","awaitingDependencies","registeredTypes","throwBindingError","message","registerType","rawType","registeredInstance","options","TypeError","hasOwnProperty","ignoreDuplicateRegistrations","cb","sharedRegisterType","emval_freelist","emval_handles","count_emval_handles","Emval","handle","readPointer","pointer","EmValType","fromWireType","rv","__emval_decref","toWireType","destructors","argPackAdvance","readValueFromPointer","destructorFunction","floatReadValueFromPointer","integerReadValueFromPointer","signed","UTF8Decoder","UTF8ToString","maxBytesToRead","heapOrArray","idx","endIdx","endPtr","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","growMemory","pages","grow","codes","embind_init_charCodes","wasmImports","primitiveType","minRange","maxRange","h","trueValue","falseValue","wt","o","g","bitshift","isUnsignedType","includes","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","_free","valueIsOfTypeString","lengthBytesUTF8","base","_malloc","heap","outIdx","u","startIdx","stringToUTF8Array","charCode","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","isVoid","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","newSize","wasmExports","callback","info","receiveInstance","instance","module","exports","unshift","id","removeRunDependency","catch","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","calledRun","run","doRun","postRun","preRun","setTimeout","runCaller","RenderData","dataChanged","transformsChanged","colorTransformsChanged","_updating","_dirty","splatIndex","_splatIndices","_singleSplatIndices","_offsets","_singleOffsets","lookup","singlelookup","ceil","_transformsWidth","_transformsHeight","_transforms","_transformIndicesWidth","_transformIndicesHeight","_transformIndices","_colorTransformsWidth","_colorTransformsHeight","_colorTransformIndicesWidth","_colorTransformIndicesHeight","_colorTransformIndices","colorTransformIndices","_worker","DataWorker","updateTransform","updateColorTransforms","keys","colorTransform","colorTransformIndex","wasmModule","onmessage","worldPositions","worldRotations","worldScales","initWasm","buildImmediate","waitForWasm","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","_pack","outData","build","serializedSplat","postMessage","getSplat","key","getLocalIndex","markDirty","rebuild","clear","terminate","singleOffsets","transforms","transformsWidth","transformsHeight","transformIndices","transformIndicesWidth","transformIndicesHeight","colorTransformsWidth","colorTransformsHeight","colorTransformIndicesWidth","colorTransformIndicesHeight","needsRebuild","updating","Color32","flatNorm","toHexString","padStart","RenderProgram","_outlineThickness","_outlineColor","_renderData","_depthIndex","_splatTexture","canvas","u_projection","u_viewport","u_focal","u_view","u_texture","u_transforms","u_transformIndices","u_colorTransforms","u_colorTransformIndices","u_outlineThickness","u_outlineColor","positionAttribute","indexAttribute","transformsTexture","transformIndicesTexture","colorTransformsTexture","colorTransformIndicesTexture","vertexBuffer","indexBuffer","getUniformLocation","uniformMatrix4fv","uniform2fv","createWorker","SortWorker","depthIndex","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","handleObjectAdded","handleObjectRemoved","handleObjectChanged","handleRenderedSplatsChanged","uniform1f","outlineThickness","uniform4fv","outlineColor","createTexture","uniform1i","createBuffer","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","resetSplatData","_a","_b","renderData","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","splatTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","TEXTURE1","RGBA32F","RGBA","TEXTURE2","R32UI","RED_INTEGER","TEXTURE3","TEXTURE4","detachedPositions","detachedTransforms","detachedTransformIndices","sortData","viewport","clearColor","COLOR_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","vertexAttribIPointer","INT","vertexAttribDivisor","drawArraysInstanced","TRIANGLE_FAN","deleteTexture","deleteBuffer","_setOutlineThickness","_setOutlineColor","worker","FadeInPass","speed","renderProgram","u_useDepthFade","u_depthFade","active","WebGLRenderer","optionalCanvas","optionalRenderPasses","_backgroundColor","style","display","boxSizing","margin","padding","appendChild","background","_canvas","_gl","getContext","antialias","renderPasses","_renderProgram","_customPrograms","programs","clientWidth","clientHeight","addProgram","removeProgram","removeAllPrograms","backgroundColor","OrbitControls","beta","enableKeyboardControls","inputTarget","enabled","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","isUpdatingCamera","eulerRotation","newTarget","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","rx","ry","moveSpeed","rotateSpeed","stopPropagation","FPSControls","lookSpeed","pitch","yaw","targetPosition","pointerLock","requestPointerLock","onPointerLockChange","pointerLockElement","mouseX","movementX","mouseY","movementY","exitPointerLock","Plane","normal","intersect","denominator","ShaderPass","VideoRenderProgram","u_time","setupWorker","dummyTransforms","dummyTransformIndices","BVHNode$1","BVHNode","boxes","pointIndices","left","leftIndices","rightIndices","queryRange","range","BVH","_","IntersectionTester","resolution","bvh","singleSplatLookup","testLayer","positiveDirection","splatBounds","testPoint","startTimeSplat","performance","duration","startTimeSingleSplat","singleSplatBoxes","singleSplatbounds","durationSingleSplat","minPoint","maxPoint","queryBox","testPointSingleSplats","obj","Ray","getPoint","CameraHelper","_cameraData","_frustumCorners","calculateFrustum","fovX","fovY","halfHeightNear","tan","halfWidthNear","halfHeightFar","halfWidthFar","nearTopLeft","nearTopRight","nearBottomLeft","nearBottomRight","farTopLeft","farTopRight","farBottomLeft","farBottomRight","cameraToWorldCoords","cameraCoords","pointInFrustum","planes","createPlane","ab","ac","FrustumPlane","CubeVisualisationProgram","u_color","corners","surface","x3","y3","z3","x4","y4","z4","x5","y5","z5","x6","y6","z6","x7","y7","z7","x8","y8","z8","colorLines","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","vertices","lineWidth","drawArrays","LINES","drawCubeLines","TRIANGLES","drawCube","Utils","draw","upperLeftCorner","bottomRightCorner","drawCone","vecs","Raycaster","buildBVH","testBox","point1","point2","testCameraViewFrustum","showFrustum","showForSeconds","camHelper","AxisProgram","xVertices","yVertices","zVertices","xColor","yColor","zColor","drawAxis","MultibleCubesProgram","upperLeftCorners","bottomRightCorners","tempAllCorners","tempAllSurface","numberOfCubes","allCorners","allsurface","OctreeHelper"],"mappings":"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AAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtIuE,GACIvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEnIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAEhIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtIuE,GACIvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErIuE,IACKvE,EAAE,GAAKA,EAA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"}