{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/events/EventDispatcher.ts","../src/math/Matrix4.ts","../src/events/Events.ts","../src/core/Object3D.ts","../src/splats/SplatData.ts","../src/splats/SplatvData.ts","../src/utils/Converter.ts","../src/math/Box3.ts","../src/math/Matrix3.ts","../src/splats/SingleSplat.ts","../src/utils/Constants.ts","../src/splats/Splat.ts","../src/splats/Splatv.ts","../src/cameras/CameraData.ts","../src/math/Vector4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/utils/LoaderUtils.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/loaders/SplatvLoader.ts","../src/renderers/webgl/programs/ShaderProgram.ts","../src/wasm/data.js","../src/renderers/webgl/utils/RenderData.ts","../src/math/Color32.ts","../src/renderers/webgl/programs/RenderProgram.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/controls/OrbitControls.ts","../src/controls/FPSControls.ts","../src/math/Plane.ts","../src/renderers/webgl/passes/ShaderPass.ts","../src/renderers/webgl/programs/VideoRenderProgram.ts","../src/math/BVH.ts","../src/renderers/webgl/utils/IntersectionTester.ts","../src/math/BVHNode.ts","../src/math/Ray.ts","../src/cameras/CameraHelper.ts","../src/renderers/webgl/programs/individual/CubeVisualisationProgram.ts","../src/utils/Utils.ts","../src/renderers/webgl/utils/Raycaster.ts","../src/renderers/webgl/programs/individual/AxisProgram.ts","../src/renderers/webgl/programs/individual/MultibleCubesProgram.ts"],"sourcesContent":["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    divide(v: number): Vector3;\n    divide(v: Vector3): Vector3;\n    divide(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x / v, this.y / v, this.z / v);\n        } else {\n            return new Vector3(this.x / v.x, this.y / v.y, this.z / v.z);\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    min(v: Vector3): Vector3 {\n        return new Vector3(Math.min(this.x, v.x), Math.min(this.y, v.y), Math.min(this.z, v.z));\n    }\n\n    max(v: Vector3): Vector3 {\n        return new Vector3(Math.max(this.x, v.x), Math.max(this.y, v.y), Math.max(this.z, v.z));\n    }\n\n    getComponent(axis: number) {\n        switch (axis) {\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            default:\n                throw new Error(`Invalid component index: ${axis}`);\n        }\n    }\n\n    minComponent(): number {\n        if (this.x < this.y && this.x < this.z) {\n            return 0;\n        } else if (this.y < this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    maxComponent(): number {\n        if (this.x > this.y && this.x > this.z) {\n            return 0;\n        } else if (this.y > this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    static LookRotation(direction: Vector3): Quaternion {\n        const forward = new Vector3(0, 0, 1);\n        const dot = forward.dot(direction);\n\n        if (Math.abs(dot - -1.0) < 0.000001) {\n            return new Quaternion(0, 1, 0, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            return new Quaternion();\n        }\n\n        const rotAngle = Math.acos(dot);\n        const rotAxis = forward.cross(direction).normalize();\n        return Quaternion.FromAxisAngle(rotAxis, rotAngle);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n","class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n","import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nclass RenderedSplatsChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"renderedSplatsChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent, RenderedSplatsChangedEvent };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport {ObjectChangedEvent, RenderedSplatsChangedEvent} from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n    protected _renderedSplatsChanged = new RenderedSplatsChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n    raiseChangeEvent: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n\n        this.raiseChangeEvent = () => {\n            this.dispatchEvent(this._changeEvent);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n    private _rendered: Uint8Array;\n\n    private removeItemsFromArray: (arr: Float32Array | Uint8Array, start: number, count: number) => Float32Array | Uint8Array;\n    removeVertex:(index: number) => void;\n    removeVertexRange:(index: number, count: number) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => void;\n\n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n        rendered: Uint8Array | null = null\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n        this._rendered = rendered || new Uint8Array(this._vertexCount).fill(1);\n\n        this.removeVertex = (index: number) => {\n            if(index < 0 || index >= this._vertexCount) {\n                throw new Error(\"Index out od bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, 4);\n\n            this._vertexCount--;  // reduce vertexCount\n            this.changed = true; \n        }\n        \n        this.removeVertexRange = (index: number, count: number) => {\n            if (index < 0 || index + count > this._vertexCount) {\n                throw new Error(\"Index range out of bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, count * 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, count * 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, count * 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, count * 4);\n\n            this._vertexCount -= count;  // reduce vertexCount\n            this.changed = true;\n        }\n        \n        this.removeItemsFromArray = (arr: Float32Array | Uint8Array, start: number, count: number) => {\n            let part1 = arr.subarray(0, start);\n            let part2 = arr.subarray(start + count, arr.length);\n            let newArr = new (arr.constructor as any)(part1.length + part2.length);\n            newArr.set(part1, 0);\n            newArr.set(part2, part1.length);\n            return newArr;\n        }\n        \n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n        ) => {\n            console.assert(\n                positions.byteLength === this.vertexCount * 3 * 4,\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n            );\n            this._positions = new Float32Array(positions);\n            this._rotations = new Float32Array(rotations);\n            this._scales = new Float32Array(scales);\n            this._colors = new Uint8Array(colors);\n            this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n    }\n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n\n    get rendered() {\n        return this._rendered;\n    }\n}\n\nexport { SplatData };\n","class SplatvData {\n    static RowLength = 64;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n\n    serialize: () => Uint8Array;\n\n    constructor(vertexCount: number, positions: Float32Array, data: Uint32Array, width: number, height: number) {\n        this._vertexCount = vertexCount;\n        this._positions = positions;\n        this._data = data;\n        this._width = width;\n        this._height = height;\n\n        this.serialize = () => {\n            return new Uint8Array(this._data.buffer);\n        };\n    }\n\n    static Deserialize(data: Uint8Array, width: number, height: number): SplatvData {\n        const buffer = new Uint32Array(data.buffer);\n        const f_buffer = new Float32Array(data.buffer);\n        const vertexCount = Math.floor(f_buffer.byteLength / this.RowLength);\n        const positions = new Float32Array(vertexCount * 3);\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[16 * i + 0];\n            positions[3 * i + 1] = f_buffer[16 * i + 1];\n            positions[3 * i + 2] = f_buffer[16 * i + 2];\n            positions[3 * i + 0] = f_buffer[16 * i + 3];\n        }\n        return new SplatvData(vertexCount, positions, buffer, width, height);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n}\n\nexport { SplatvData };\n","import { Quaternion } from \"../math/Quaternion\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Converter {\n    public static SH_C0 = 0.28209479177387814;\n\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\n        header += `element vertex ${vertexCount}\\n`;\n\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\n        for (let i = 0; i < 45; i++) {\n            properties.push(`f_rest_${i}`);\n        }\n        properties.push(\"opacity\");\n        properties.push(\"scale_0\");\n        properties.push(\"scale_1\");\n        properties.push(\"scale_2\");\n        properties.push(\"rot_0\");\n        properties.push(\"rot_1\");\n        properties.push(\"rot_2\");\n        properties.push(\"rot_3\");\n\n        for (const property of properties) {\n            header += `property float ${property}\\n`;\n        }\n        header += \"end_header\\n\";\n\n        const headerBuffer = new TextEncoder().encode(header);\n\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\n        const plyLength = vertexCount * plyRowLength;\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\n\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        const offset = headerBuffer.length;\n        const f_dc_offset = 4 * 3 + 4 * 3;\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\n        const scale_offset = opacity_offset + 4;\n        const rot_offset = scale_offset + 4 * 3;\n        for (let i = 0; i < vertexCount; i++) {\n            const pos0 = f_buffer[8 * i + 0];\n            const pos1 = f_buffer[8 * i + 1];\n            const pos2 = f_buffer[8 * i + 2];\n\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\n\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\n            const opacity = Math.log(alpha / (1 - alpha));\n\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\n\n            let q = new Quaternion(\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n            q = q.normalize();\n\n            const rot0 = q.w;\n            const rot1 = q.x;\n            const rot2 = q.y;\n            const rot3 = q.z;\n\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\n\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\n\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\n\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\n\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\n        }\n\n        return output.buffer;\n    }\n}\n\nexport { Converter };\n","import { Vector3 } from \"./Vector3\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Box3 {\n    constructor(\n        public min: Vector3,\n        public max: Vector3,\n    ) {}\n\n    public contains(point: Vector3) {\n        return (\n            point.x >= this.min.x &&\n            point.x <= this.max.x &&\n            point.y >= this.min.y &&\n            point.y <= this.max.y &&\n            point.z >= this.min.z &&\n            point.z <= this.max.z\n        );\n    }\n\n    public intersects(box: Box3) {\n        return (\n            this.max.x >= box.min.x &&\n            this.min.x <= box.max.x &&\n            this.max.y >= box.min.y &&\n            this.min.y <= box.max.y &&\n            this.max.z >= box.min.z &&\n            this.min.z <= box.max.z\n        );\n    }\n\n    public intersectsBasedOnCenter(box: Box3) {\n        const centerA = this.center();\n        const centerB = box.center();\n\n        const sizeA = this.size();\n        const sizeB = box.size();\n\n        \n        return (\n            Math.abs(centerA.x - centerB.x) <= (sizeA.x / 2 + sizeB.x / 2) &&\n            Math.abs(centerA.y - centerB.y) <= (sizeA.y / 2 + sizeB.y / 2) &&\n            Math.abs(centerA.z - centerB.z) <= (sizeA.z / 2 + sizeB.z / 2)\n        );\n    }\n\n\n    public size() {\n        return this.max.subtract(this.min);\n    }\n\n    public center() {\n        return this.min.add(this.max).divide(2);\n    }\n\n    public expand(point: Vector3) {\n        this.min = this.min.min(point);\n        this.max = this.max.max(point);\n    }\n\n    public permute() {\n        const min = this.min;\n        const max = this.max;\n        this.min = new Vector3(Math.min(min.x, max.x), Math.min(min.y, max.y), Math.min(min.z, max.z));\n        this.max = new Vector3(Math.max(min.x, max.x), Math.max(min.y, max.y), Math.max(min.z, max.z));\n    }\n    \n    public surfaceArea(): number {\n        const width = this.max.x - this.min.x;\n        const height = this.max.y - this.min.y;\n        const depth = this.max.z - this.min.z;\n        return 2 * ((width * height) + (width * depth) + (height * depth));\n    }\n}\n\nexport { Box3 };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n","import {Object3D} from \"../core/Object3D\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport {Vector4} from \"../math/Vector4\";\nimport {SplatData} from \"./SplatData\";\n\nclass SingleSplat {\n\n    private _index: number;\n    private _data: SplatData;\n\n    private _bounds: Box3;\n\n    private _defaultColor: Uint8Array;\n    \n    \n    public changed = false;\n    \n    private _position: Float32Array;\n    private _rotation: Float32Array;\n    private _scale: Float32Array;\n    private _color: Uint8Array;\n    private _selected: Uint8Array;\n    private _rendered: Uint8Array;\n    \n    private _colorTransforms: Array<Matrix4> = [];\n    private _colorTransformsMap: Map<number, number> = new Map();\n\n    recalculateBounds: () => void;\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    \n    constructor(position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array, index: number, data: SplatData) {\n        this._index = index;\n        this._data = data;\n\n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n        this._defaultColor = new Uint8Array(data.colors.subarray(index * 4, index * 4 + 4));\n        \n        this._position = position;\n        this._rotation = rotation;\n        this._scale = scale;\n        this._color = color;\n        this._selected = new Uint8Array([0]);\n        this._rendered = new Uint8Array([1]);\n\n        this.recalculateBounds = () => {\n            this._bounds.min = new Vector3(\n                this._position[0] - this._scale[0],\n                this._position[1] - this._scale[1],\n                this._position[2] - this._scale[2]\n            );\n            this._bounds.max = new Vector3(\n                this._position[0] + this._scale[0],\n                this._position[1] + this._scale[1],\n                this._position[2] + this._scale[2]\n            );\n        };\n\n\n        this.translate = (translation: Vector3) => {\n            const pos = this.Position;\n            pos[0] += translation.x;\n            pos[1] += translation.y;\n            pos[2] += translation.z;\n            // this._position[0] += translation.x;\n            // this._position[1] += translation.y;\n            // this._position[2] += translation.z;\n\n            this.changed = true;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const pos = this.Position;\n\n            const x = pos[0];\n            const y = pos[1];\n            const z = pos[2];\n\n            pos[0] = R[0] * x + R[1] * y + R[2] * z;\n            pos[1] = R[3] * x + R[4] * y + R[5] * z;\n            pos[2] = R[6] * x + R[7] * y + R[8] * z;\n\n            const rot = this.Rotation;\n            const currentRotation = new Quaternion(rot[1], rot[2], rot[3], rot[0]);\n\n            const newRot = rotation.multiply(currentRotation);\n            rot[0] = newRot.w;\n            rot[1] = newRot.x;\n            rot[2] = newRot.y;\n            rot[3] = newRot.z;\n            \n            //\n            // const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            //\n            // const x = this._position[0];\n            // const y = this._position[1];\n            // const z = this._position[2];\n            //\n            // this._position[0] = R[0] * x + R[1] * y + R[2] * z;\n            // this._position[1] = R[3] * x + R[4] * y + R[5] * z;\n            // this._position[2] = R[6] * x + R[7] * y + R[8] * z;\n            //\n            // const currentRotation = new Quaternion(\n            //     this._rotation[1],\n            //     this._rotation[2],\n            //     this._rotation[3],\n            //     this._rotation[0],\n            // );\n            //\n            // const newRot = rotation.multiply(currentRotation);\n            // this._rotation[1] = newRot.x;\n            // this._rotation[2] = newRot.y;\n            // this._rotation[3] = newRot.z;\n            // this._rotation[0] = newRot.w;\n            \n\n            this.changed = true;\n        };\n        \n        this.scale = (scale: Vector3) => {\n            const pos = this.Position;\n            const scl = this.Scale;\n\n            pos[0] *= scale.x;\n            pos[1] *= scale.y;\n            pos[2] *= scale.z;\n\n            scl[0] *= scale.x;\n            scl[1] *= scale.y;\n            scl[2] *= scale.z;\n            //\n            // this._position[0] *= scale.x;\n            // this._position[1] *= scale.y;\n            // this._position[2] *= scale.z;\n            //\n            // this._scale[0] *= scale.x;\n            // this._scale[1] *= scale.y;\n            // this._scale[2] *= scale.z;\n            \n\n            this.changed = true;\n        };\n        \n        this.recalculateBounds();\n    }\n\n    reattach(position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array, selection: Uint8Array) {\n        this._data.positions.set(position, this._index * 3);\n        this._data.rotations.set(rotation, this._index * 4);\n        this._data.scales.set(scale, this._index * 3);\n        this._data.colors.set(color, this._index * 4);\n        this._data.selection.set(selection, this._index);\n        \n        // this._position = position;\n        // this._rotation = rotation;\n        // this._scale = scale;\n        // this._color = color;\n        // this._selected = selection;\n    }\n\n    get Selected() {\n        return this._data.selection[this._index];\n    }\n\n    set Selected(value: number) {\n        this._data.selection[this._index] = value;\n    }\n    \n    // Select(select: boolean) {\n    //     this._selected[0] = select ? 1 : 0;        \n    // }\n    //\n    // get Selection() {\n    //     return this._selected;\n    // }\n\n    get Rendered() {\n        return this._data.rendered[this._index];\n    }\n\n    set Rendered(value: number) {\n        this._data.rendered[this._index] = value;\n    }\n\n    get Position() {\n        const i = this._index * 3;\n        return this._data.positions.subarray(i, i + 3);\n    }\n\n    get Rotation() {\n        const i = this._index * 4;\n        return this._data.rotations.subarray(i, i + 4);\n    }\n\n    get Scale() {\n        const i = this._index * 3;\n        return this._data.scales.subarray(i, i + 3);\n    }\n    \n    set Color(colorVector: Uint8Array) {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(colorVector, colorIndex);\n    }\n    get Color() {\n        const i = this._index * 4;\n        return this._data.colors.subarray(i, i + 4);\n    }\n    \n    // Render(render: boolean) {\n    //     this._rendered[0] = render ? 1 : 0;\n    // }\n    //\n    // get Rendered() {\n    //     return this._rendered;\n    // }\n    \n    ResetColor() {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(this._defaultColor, colorIndex);\n    }\n    \n    get bounds() {\n        return this._bounds;\n    }\n    \n    get PositionVec3() {\n        return new Vector3(this._position[0], this._position[1], this._position[2]);\n    }\n    \n    // get Position() {\n    //     return this._position;\n    // }\n    //\n    // get Scale() {\n    //    return this._scale; \n    // }\n    \n    get ScaleVec3() {\n        return new Vector3(this._scale[0], this._scale[1], this._scale[2]);\n    }\n    \n    // get Color() {\n    //     return this._color;\n    // }\n    //\n    // get Rotation() {\n    //     return this._rotation;\n    // }\n}\n\nexport { SingleSplat };","class Constants {\n    static readonly BYTE_OFFSET_FLOAT: number = 4;\n    static readonly BYTE_OFFSET_DOUBLE: number = 8;\n\n    static readonly BYTE_OFFSET_INT: number = 4;\n}\n\nexport { Constants }","import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Converter } from \"../utils/Converter\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { SingleSplat } from \"./SingleSplat\"\n\nimport { Constants } from \"../utils/Constants\";\nimport {ObjectChangedEvent, RenderedSplatsChangedEvent} from \"../events/Events\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n    public renderNumberChanged: boolean = false;\n    public colorTransformChanged: boolean = false;\n\n    private _splats: Array<SingleSplat> = [];\n    private _data: SplatData;\n    private _selected: boolean = false;\n    private _colorTransforms: Array<Matrix4> = [];\n    private _colorTransformsMap: Map<number, number> = new Map();\n    private _bounds: Box3;\n    \n    private _numberOfSplats: number;\n    private _numberOfRenderedSplats: number;\n\n    recalculateBounds: () => void;\n    createSplatsData: () => void;\n    applySelection: () => void;\n\n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n        \n        this._splats = new Array<SingleSplat>();\n        this._data = splat || new SplatData();\n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n\n        this._numberOfSplats = 0;\n        this._numberOfRenderedSplats = 0\n        \n        this.createSplatsData = () => {\n            \n            if(splat != undefined)\n            {\n                this._numberOfSplats = splat.vertexCount;\n                this._numberOfRenderedSplats = splat.vertexCount;\n                \n                for(let i = 0; i < splat.vertexCount; i++) {\n                    let position: Float32Array = new Float32Array(splat.positions.buffer, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                    let rotation: Float32Array = new Float32Array(splat.rotations.buffer, 4 * i * Constants.BYTE_OFFSET_FLOAT, 4);\n                    let scale: Float32Array = new Float32Array(splat.scales.buffer, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                    let color: Uint8Array = new Uint8Array(splat.colors.buffer, 1 * i * Constants.BYTE_OFFSET_INT, 4);\n                    \n                    let singleSplat = new SingleSplat(position, rotation, scale, color, i, this._data);\n                    this._splats.push(singleSplat)\n                }\n            }\n            \n        }\n\n        this.recalculateBounds = () => {\n            for (let i = 0; i < this._numberOfSplats; i++) {\n                this._bounds.expand(this._splats[i].PositionVec3);\n            }\n        }\n\n        this.applyPosition = () => {\n            this._splats.forEach((splat, index) => {\n                splat.translate(this.position);\n            });\n            this.position = new Vector3();\n            \n            this.data.changed = true;\n        };\n\n        this.applyRotation = () => {\n            this._splats.forEach((splat, index) => {\n                splat.rotate(this.rotation);\n            });\n            this.rotation = new Quaternion();\n\n            this.data.changed = true;\n        };\n\n        this.applyScale = () => {\n            this._splats.forEach((splat, index) => {\n                splat.scale(this.scale);\n            });\n            this.scale = new Vector3(1, 1, 1);\n        };\n        \n        this.applySelection = () => {\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n            \n            this.data.changed = true;\n        }\n        \n        this.createSplatsData();\n\n        this.data.changed = true;\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const data = this.serialize();\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, this._numberOfSplats);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n    \n    get splats() {\n        return this._splats;\n    }\n    \n    getSplatAtIndex(index: number): SingleSplat | undefined {\n        if (index < 0 || index >= this._numberOfSplats) {\n            console.error(\"Index out of bounds\");\n            return undefined; \n        }\n        return this._splats[index];\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n    \n    selectSplat(index: number, value: number) {\n        this._splats[index].Selected = value;\n        \n        this.selectedChanged = true;\n        this.dispatchEvent(this._changeEvent);\n    }\n    \n    \n    \n    updateRenderingOfSplats() {\n        this.dispatchEvent(this._renderedSplatsChanged);\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsMap() {\n        return this._colorTransformsMap;\n    }\n    \n    get bounds() {\n        let center = this._bounds.center();\n        center = center.add(this.position);\n\n        let size = this._bounds.size();\n        size = size.multiply(this.scale);\n\n        return new Box3(center.subtract(size.divide(2)), center.add(size.divide(2)));\n    }\n    \n    get splatCount() {\n        return this._numberOfSplats;\n    }\n    \n    get numberOfRenderedSplats() {\n        return this._numberOfRenderedSplats;\n    }\n\n    serialize = () => {\n        const data = new Uint8Array(this._numberOfSplats * SplatData.RowLength);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n        \n        for (let i = 0; i < this._numberOfSplats; i++) {\n            f_buffer[8 * i + 0] = this._splats[i].Position[0];\n            f_buffer[8 * i + 1] = this._splats[i].Position[1];\n            f_buffer[8 * i + 2] = this._splats[i].Position[2];\n\n            u_buffer[32 * i + 24 + 0] = this._splats[i].Color[0];\n            u_buffer[32 * i + 24 + 1] = this._splats[i].Color[1];\n            u_buffer[32 * i + 24 + 2] = this._splats[i].Color[2];\n            u_buffer[32 * i + 24 + 3] = this._splats[i].Color[3];\n\n            f_buffer[8 * i + 3 + 0] = this._splats[i].Scale[0];\n            f_buffer[8 * i + 3 + 1] = this._splats[i].Scale[1];\n            f_buffer[8 * i + 3 + 2] = this._splats[i].Scale[2];\n\n            u_buffer[32 * i + 28 + 0] = (this._splats[i].Rotation[0] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 1] = (this._splats[i].Rotation[1] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 2] = (this._splats[i].Rotation[2] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 3] = (this._splats[i].Rotation[3] * 128 + 128) & 0xff;\n        }\n\n        return data;\n    };\n\n    reattach = (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => {\n        console.assert(\n            positions.byteLength === this._numberOfRenderedSplats * 3 * 4,\n            `Expected ${this._numberOfRenderedSplats * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n        );\n\n        for(let i = 0; i < this._numberOfSplats; i++) {\n            if(this._splats[i].Rendered === 1){\n                let position: Float32Array = new Float32Array(positions, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let rotation: Float32Array = new Float32Array(rotations, 4 * i * Constants.BYTE_OFFSET_FLOAT, 4);\n                let scale: Float32Array = new Float32Array(scales, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let color: Uint8Array = new Uint8Array(colors, 1 * i * Constants.BYTE_OFFSET_INT, 4);\n                let selected: Uint8Array = new Uint8Array(selection, i, 1);\n\n                this._splats[i].reattach(position, rotation, scale, color, selected);       \n            }\n        }\n        \n        this._data.detached = false;\n    };\n\n    get Positions(): Float32Array {\n        // return this._data.positions;\n        let tempPositions: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempPositions.push(...singleSplat.Position);\n            }\n        });\n\n        return new Float32Array(tempPositions);\n    }\n\n\n\n    get Scales(): Float32Array {\n        // return this._data.scales;\n        let tempScales: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempScales.push(...singleSplat.Scale);\n            }\n        });\n\n        return new Float32Array(tempScales);\n    }\n\n    get Rotations(): Float32Array {\n        // return this._data.rotations;\n        let tempRotations: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempRotations.push(...singleSplat.Rotation);\n            }\n        });\n\n        return new Float32Array(tempRotations);\n    }\n\n    get Colors(): Uint8Array {\n        // return this._data.colors;\n        let tempColors: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempColors.push(...singleSplat.Color);\n            }\n        });\n\n        return new Uint8Array(tempColors);\n    }\n\n    get Selections(): Uint8Array {\n        const tempSelections: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempSelections.push(singleSplat.Selected);\n            }\n        });\n\n        return new Uint8Array(tempSelections);\n    }\n\n\n}\n\nexport { Splat };\n","import { Object3D } from \"../core/Object3D\";\nimport { SplatvData } from \"./SplatvData\";\n\nclass Splatv extends Object3D {\n    private _data: SplatvData;\n\n    constructor(splat: SplatvData) {\n        super();\n\n        this._data = splat;\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Splatv };\n","import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 30;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n","import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n","import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n","import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.serialize();\n                buffers.push(buffer);\n                vertexCount += object.splatCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n","export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\n    const req = await fetch(url, {\n        mode: \"cors\",\n        credentials: \"omit\",\n        cache: useCache ? \"force-cache\" : \"default\",\n    });\n\n    if (req.status != 200) {\n        throw new Error(req.status + \" Unable to load \" + req.url);\n    }\n\n    return req;\n}\n\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\n    const buffer = new Uint8Array(contentLength);\n\n    let bytesRead = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer.set(value, bytesRead);\n        bytesRead += value.length;\n        onProgress?.(bytesRead / contentLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadChunkedDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const chunks = [];\n    let receivedLength = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        chunks.push(value);\n        receivedLength += value.length;\n    }\n\n    const buffer = new Uint8Array(receivedLength);\n    let position = 0;\n    for (const chunk of chunks) {\n        buffer.set(chunk, position);\n        position += chunk.length;\n\n        onProgress?.(position / receivedLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadRequestDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    if (res.headers.has(\"content-length\")) {\n        return loadDataIntoBuffer(res, onProgress);\n    } else {\n        return loadChunkedDataIntoBuffer(res, onProgress);\n    }\n}\n","import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this.LoadFromArrayBuffer(buffer, scene);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene): Splat {\n        const buffer = new Uint8Array(arrayBuffer);\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n}\n\nexport { Loader };\n","import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { Converter } from \"../utils/Converter\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass PLYLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        return this.LoadFromArrayBuffer(plyData.buffer, scene, format);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene, format);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene, format: string = \"\"): Splat {\n        const buffer = new Uint8Array(this._ParsePLYBuffer(arrayBuffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            \n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                    case \"scaling_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                    case \"scaling_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                    case \"scaling_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                    case \"features_0\":\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                    case \"features_1\":\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                    case \"features_2\":\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                    case \"opacity_0\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                    case \"rotation_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                    case \"rotation_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                    case \"rotation_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                    case \"rotation_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n","import { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Splatv } from \"../splats/Splatv\";\nimport { SplatvData } from \"../splats/SplatvData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass SplatvLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splatv> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this._ParseSplatvBuffer(buffer.buffer, scene, camera);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n    ): Promise<Splatv> {\n        const reader = new FileReader();\n        let splatv: Splatv | null = null;\n        reader.onload = (e) => {\n            splatv = this._ParseSplatvBuffer(e.target!.result as ArrayBuffer, scene, camera);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        if (!splatv) {\n            throw new Error(\"Failed to load splatv file\");\n        }\n        return splatv;\n    }\n\n    private static _ParseSplatvBuffer(inputBuffer: ArrayBuffer, scene: Scene, camera: Camera | null): Splatv {\n        let result: Splatv | null = null;\n\n        const handleChunk = (\n            chunk: { size: number; type: string; texwidth: number; texheight: number },\n            buffer: Uint8Array,\n            chunks: { size: number; type: string }[],\n        ) => {\n            if (chunk.type === \"magic\") {\n                const intView = new Int32Array(buffer.buffer);\n                if (intView[0] !== 0x674b) {\n                    throw new Error(\"Invalid splatv file\");\n                }\n                chunks.push({ size: intView[1], type: \"chunks\" });\n            } else if (chunk.type === \"chunks\") {\n                const splatChunks = JSON.parse(new TextDecoder(\"utf-8\").decode(buffer));\n                if (splatChunks.length == 0) {\n                    throw new Error(\"Invalid splatv file\");\n                } else if (splatChunks.length > 1) {\n                    console.warn(\"Splatv file contains more than one chunk, only the first one will be loaded\");\n                }\n                const chunk = splatChunks[0];\n                const cameras = chunk.cameras as { position: number[]; rotation: number[][] }[];\n                if (camera && cameras && cameras.length) {\n                    const cameraData = cameras[0];\n                    const position = new Vector3(\n                        cameraData.position[0],\n                        cameraData.position[1],\n                        cameraData.position[2],\n                    );\n                    const rotation = Quaternion.FromMatrix3(\n                        new Matrix3(\n                            cameraData.rotation[0][0],\n                            cameraData.rotation[0][1],\n                            cameraData.rotation[0][2],\n                            cameraData.rotation[1][0],\n                            cameraData.rotation[1][1],\n                            cameraData.rotation[1][2],\n                            cameraData.rotation[2][0],\n                            cameraData.rotation[2][1],\n                            cameraData.rotation[2][2],\n                        ),\n                    );\n                    camera.position = position;\n                    camera.rotation = rotation;\n                }\n                chunks.push(chunk);\n            } else if (chunk.type === \"splat\") {\n                const data = SplatvData.Deserialize(buffer, chunk.texwidth, chunk.texheight);\n                const splatv = new Splatv(data);\n                scene.addObject(splatv);\n                result = splatv;\n            }\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const chunks: { size: number; type: string; texwidth: number; texheight: number }[] = [\n            { size: 8, type: \"magic\", texwidth: 0, texheight: 0 },\n        ];\n        let chunk: { size: number; type: string; texwidth: number; texheight: number } | undefined = chunks.shift();\n        let buffer = new Uint8Array(chunk!.size);\n        let offset = 0;\n        let inputOffset = 0;\n        while (chunk) {\n            while (offset < chunk.size) {\n                const sizeToRead = Math.min(chunk.size - offset, ubuf.length - inputOffset);\n                buffer.set(ubuf.subarray(inputOffset, inputOffset + sizeToRead), offset);\n                offset += sizeToRead;\n                inputOffset += sizeToRead;\n            }\n            handleChunk(chunk, buffer, chunks);\n            if (result) {\n                return result;\n            }\n            chunk = chunks.shift();\n            if (chunk) {\n                buffer = new Uint8Array(chunk.size);\n                offset = 0;\n            }\n        }\n\n        throw new Error(\"Invalid splatv file\");\n    }\n}\n\nexport { SplatvLoader };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n","\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,h:__embind_register_bool,g:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,i:__embind_register_void,j:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"__getTypeName\"])(a0);var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"_emscripten_stack_restore\"])(a0);var __emscripten_stack_alloc=a0=>(__emscripten_stack_alloc=wasmExports[\"_emscripten_stack_alloc\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"emscripten_stack_get_current\"])();var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return readyPromise\n}\n);\n})();\nexport default loadWasm;","import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n    public colorTransformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _singleSplatIndices: Map<SingleSplat, number>;\n    private _offsets: Map<Splat, number>;\n    private _singleOffsets: Map<SingleSplat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _colorTransforms: Float32Array;\n    private _colorTransformsWidth: number;\n    private _colorTransformsHeight: number;\n    private _colorTransformIndices: Uint32Array;\n    private _colorTransformIndicesWidth: number;\n    private _colorTransformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._singleSplatIndices = new Map<SingleSplat, number>();\n        this._offsets = new Map<Splat, number>();\n        this._singleOffsets = new Map<SingleSplat, number>();\n        const lookup = new Map<number, Splat>();\n        const singlelookup = new Map<number, SingleSplat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.splatCount;\n                splatIndex++;\n                \n                for(let singleSplat of object.splats) {\n                    this._singleSplatIndices.set(singleSplat, splatIndex);\n                    this._singleOffsets.set(singleSplat, splatIndex);\n                    singlelookup.set(vertexCount, singleSplat);\n                    splatIndex++;\n                }\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._colorTransformsWidth = 4;\n        this._colorTransformsHeight = 64;\n        this._colorTransforms = new Float32Array(this._colorTransformsWidth * this._colorTransformsHeight * 4);\n        this._colorTransforms.fill(0);\n        this._colorTransforms[0] = 1;\n        this._colorTransforms[5] = 1;\n        this._colorTransforms[10] = 1;\n        this._colorTransforms[15] = 1;\n\n        this._colorTransformIndicesWidth = 1024;\n        this._colorTransformIndicesHeight = Math.ceil(this.vertexCount / this._colorTransformIndicesWidth);\n        this._colorTransformIndices = new Uint32Array(\n            this._colorTransformIndicesWidth * this._colorTransformIndicesHeight,\n        );\n        this.colorTransformIndices.fill(0);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            splat.renderNumberChanged = false;\n            this.transformsChanged = true;\n        };\n\n        const updateColorTransforms = () => {\n            let colorTransformsChanged = false;\n            for (const splat of this._splatIndices.keys()) {\n                if (splat.colorTransformChanged) {\n                    colorTransformsChanged = true;\n                    break;\n                }\n            }\n            if (!colorTransformsChanged) {\n                return;\n            }\n            const colorTransformsMap: Matrix4[] = [new Matrix4()];\n            this._colorTransformIndices.fill(0);\n            let i = 1;\n            for (const splat of this._splatIndices.keys()) {\n                const offset = this._offsets.get(splat) as number;\n                for (const colorTransform of splat.colorTransforms) {\n                    if (!colorTransformsMap.includes(colorTransform)) {\n                        colorTransformsMap.push(colorTransform);\n                        i++;\n                    }\n                }\n                for (const index of splat.colorTransformsMap.keys()) {\n                    const colorTransformIndex = splat.colorTransformsMap.get(index) as number;\n                    this._colorTransformIndices[index + offset] = colorTransformIndex + i - 1;\n                }\n                splat.colorTransformChanged = false;\n            }\n            for (let index = 0; index < colorTransformsMap.length; index++) {\n                const colorTransform = colorTransformsMap[index];\n                this._colorTransforms.set(colorTransform.buffer, index * 16);\n            }\n            this.colorTransformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n                updateColorTransforms();\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.splatCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            \n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.splatCount);\n            const selectionPtr = wasmModule._malloc(splat.splatCount);\n            const dataPtr = wasmModule._malloc(8 * splat.splatCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n\n            wasmModule.HEAPF32.set(splat.Positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.Colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.Selections, selectionPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.splatCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.splatCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.splatCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.splatCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.splatCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.splatCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n\n            this.dataChanged = true;\n            this.colorTransformsChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (splat.colorTransformChanged) {\n                updateColorTransforms();\n            }\n            \n            if (!splat.data.changed || splat.data.detached || !splat.renderNumberChanged) return;\n            \n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.splatCount,\n                positions: splat.Positions,\n                rotations: splat.Rotations,\n                scales: splat.Scales,\n                colors: splat.Colors,\n                selection: splat.Selections,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n\n        updateColorTransforms();\n    }\n    \n    get offsets() {\n        return this._offsets;\n    }\n\n    get singleOffsets() {\n        return this._singleOffsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsWidth() {\n        return this._colorTransformsWidth;\n    }\n\n    get colorTransformsHeight() {\n        return this._colorTransformsHeight;\n    }\n\n    get colorTransformIndices() {\n        return this._colorTransformIndices;\n    }\n\n    get colorTransformIndicesWidth() {\n        return this._colorTransformIndicesWidth;\n    }\n\n    get colorTransformIndicesHeight() {\n        return this._colorTransformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n","class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n","import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport {\n    ObjectAddedEvent,\n    ObjectChangedEvent,\n    ObjectRemovedEvent,\n    RenderedSplatsChangedEvent\n} from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { Scene } from \"../../../core/Scene\"\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n    private _worker: Worker | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n        let u_colorTransforms: WebGLUniformLocation;\n        let u_colorTransformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let colorTransformsTexture: WebGLTexture;\n        let colorTransformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            this._worker = new SortWorker();\n            this._worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n            \n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    object.addEventListener(\"renderedSplatsChanged\", handleRenderedSplatsChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            colorTransformsTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransforms = gl.getUniformLocation(this.program, \"u_colorTransforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransforms, 3);\n\n            colorTransformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransformIndices = gl.getUniformLocation(\n                this.program,\n                \"u_colorTransformIndices\",\n            ) as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransformIndices, 4);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleRenderedSplatsChanged = (event: Event) => {\n            const e = event as RenderedSplatsChangedEvent;\n            \n            resetSplatData();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n            \n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        const resetSplatData = () => {\n            this._renderData?.dispose();\n            this._renderData = new RenderData(this._scene as Scene);\n\n            this._worker?.terminate();\n            createWorker();\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (\n                this.renderData.dataChanged ||\n                this.renderData.transformsChanged ||\n                this.renderData.colorTransformsChanged\n            ) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                if (this.renderData.colorTransformsChanged) {\n                    gl.activeTexture(gl.TEXTURE3);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.colorTransformsWidth,\n                        this.renderData.colorTransformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.colorTransforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE4);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.colorTransformIndicesWidth,\n                        this.renderData.colorTransformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.colorTransformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                this._worker?.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n                this.renderData.colorTransformsChanged = false;\n            }\n\n            this._camera.update();\n            this._worker?.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.depthIndex.length);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    object.removeEventListener(\"renderedSplatsChanged\", handleObjectChanged);\n                }\n            }\n\n            this._worker?.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    get worker() {\n        return this._worker;\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n","import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n","import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n    \n    private _customPrograms: ShaderProgram[];\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    removeAllPrograms: () => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n        \n        this._renderProgram = new RenderProgram(this, renderPasses);\n        this._customPrograms = [];\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n            this._customPrograms?.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.removeAllPrograms = () => {\n            for(let i = 0; i < this._customPrograms.length; i++) {\n                var program = this._customPrograms.pop();\n                if(program != undefined)\n                    this.removeProgram(program);\n            }\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n","import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    public enabled: boolean = true;\n\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    \n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled) return;\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled || !dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { Camera } from \"../cameras/Camera\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass FPSControls {\n    moveSpeed: number = 1.5;\n    lookSpeed: number = 0.7;\n    dampening: number = 0.5;\n    update: () => void;\n    dispose: () => void;\n\n    constructor(camera: Camera, canvas: HTMLCanvasElement) {\n        const keys: { [key: string]: boolean } = {};\n        let pitch = camera.rotation.toEuler().x;\n        let yaw = camera.rotation.toEuler().y;\n        let targetPosition = camera.position;\n        let pointerLock = false;\n\n        const onMouseDown = () => {\n            canvas.requestPointerLock();\n        };\n\n        const onPointerLockChange = () => {\n            pointerLock = document.pointerLockElement === canvas;\n            if (pointerLock) {\n                canvas.addEventListener(\"mousemove\", onMouseMove);\n            } else {\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\n            }\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            const mouseX = e.movementX;\n            const mouseY = e.movementY;\n\n            yaw += mouseX * this.lookSpeed * 0.001;\n            pitch -= mouseY * this.lookSpeed * 0.001;\n            pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch));\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n            if (e.code === \"Escape\") document.exitPointerLock();\n        };\n\n        this.update = () => {\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n            let move = new Vector3(0, 0, 0);\n            if (keys[\"KeyS\"]) {\n                move = move.add(forward);\n            }\n            if (keys[\"KeyW\"]) {\n                move = move.subtract(forward);\n            }\n            if (keys[\"KeyA\"]) {\n                move = move.subtract(right);\n            }\n            if (keys[\"KeyD\"]) {\n                move = move.add(right);\n            }\n            move = new Vector3(move.x, 0, move.z);\n            if (move.magnitude() > 0) {\n                move = move.normalize();\n            }\n\n            targetPosition = targetPosition.add(move.multiply(this.moveSpeed * 0.01));\n            camera.position = camera.position.add(targetPosition.subtract(camera.position).multiply(this.dampening));\n\n            camera.rotation = Quaternion.FromEuler(new Vector3(pitch, yaw, 0));\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n\n            document.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n\n            window.removeEventListener(\"keydown\", onKeyDown);\n            window.removeEventListener(\"keyup\", onKeyUp);\n        };\n\n        window.addEventListener(\"keydown\", onKeyDown);\n        window.addEventListener(\"keyup\", onKeyUp);\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n\n        document.addEventListener(\"pointerlockchange\", onPointerLockChange);\n\n        this.update();\n    }\n}\n\nexport { FPSControls };\n","import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n\n    constructor(normal: Vector3, point: Vector3) {\n        this.normal = normal;\n        this.point = point;\n    }\n\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n}\n\nexport { Plane };\n","import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n","import { Splatv } from \"../../../splats/Splatv\";\nimport { SplatvData } from \"../../../splats/SplatvData\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n  \nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\nuniform float time;\n  \nin vec2 position;\nin int index;\n  \nout vec4 vColor;\nout vec2 vPosition;\n  \nvoid main () {\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\n    vec2 trbf = unpackHalf2x16(motion1.w);\n    float dt = time - trbf.x;\n\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\n    if(topacity < 0.02) return;\n\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\n\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \n      \n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\n      \n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\n    vec4 pos = projection * cam;\n  \n    float clip = 1.2 * pos.w;\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\n\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\n    rot /= sqrt(dot(rot, rot));\n  \n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\n    mat3 R = mat3(\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\n    mat3 M = S * R;\n    mat3 Vrk = 4.0 * transpose(M) * M;\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n  \n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n  \n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n  \n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      \n    uint rgba = static1.w;\n    vColor = \n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \n        vec4(1.0, 1.0, 1.0, topacity) *\n        vec4(\n            (rgba) & 0xffu, \n            (rgba >> 8) & 0xffu, \n            (rgba >> 16) & 0xffu, \n            (rgba >> 24) & 0xffu) / 255.0;\n\n    vec2 vCenter = vec2(pos) / pos.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n    vPosition = position;\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n  \nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n\nclass VideoRenderProgram extends ShaderProgram {\n    private _renderData: SplatvData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[] = []) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_time: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const setupWorker = () => {\n            if (renderer.renderProgram.worker === null) {\n                console.error(\"Render program is not initialized. Cannot render without worker\");\n                return;\n            }\n            worker = renderer.renderProgram.worker;\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === null) {\n                        this._renderData = object.data;\n                        object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    } else {\n                        console.warn(\"Multiple Splatv objects are not currently supported\");\n                    }\n                }\n            }\n\n            if (this._renderData === null) {\n                console.error(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            u_time = gl.getUniformLocation(this.program, \"time\") as WebGLUniformLocation;\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            setupWorker();\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this._splatTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                this._renderData.width,\n                this._renderData.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                this._renderData.data,\n            );\n\n            const positions = this._renderData.positions;\n            const dummyTransforms = new Float32Array(new Matrix4().buffer);\n            const dummyTransformIndices = new Uint32Array(this._renderData.vertexCount);\n            dummyTransformIndices.fill(0);\n            worker.postMessage(\n                {\n                    sortData: {\n                        positions: positions,\n                        transforms: dummyTransforms,\n                        transformIndices: dummyTransformIndices,\n                        vertexCount: this._renderData.vertexCount,\n                    },\n                },\n                [positions.buffer, dummyTransforms.buffer, dummyTransformIndices.buffer],\n            );\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === null) {\n                    this._renderData = e.object.data;\n                    e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n                } else {\n                    console.warn(\"Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.\");\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === e.object.data) {\n                    this._renderData = null;\n                    e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splatv && this._renderData === e.object.data) {\n                this.dispose();\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (!this._renderData) {\n                console.warn(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this._depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this._renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === object.data) {\n                        this._renderData = null;\n                        object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    }\n                }\n            }\n\n            worker?.terminate();\n\n            gl.deleteTexture(this._splatTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n    }\n\n    get renderData(): SplatvData | null {\n        return this._renderData;\n    }\n\n    protected _getVertexSource(): string {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource(): string {\n        return fragmentShaderSource;\n    }\n}\n\nexport { VideoRenderProgram };\n","import { Box3 } from \"./Box3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public pointIndices: number[] = [];\n\n    constructor(\n        public bounds: Box3,\n        public boxes: Box3[],\n        pointIndices: number[],\n    ) {\n        if (pointIndices.length > 1) {\n            this.split(bounds, boxes, pointIndices);\n        } else if (pointIndices.length > 0) {\n            this.pointIndices = pointIndices;\n        }\n    }\n    \n    private split(bounds: Box3, boxes: Box3[], pointIndices: number[]) {\n        const axis = bounds.size().maxComponent();\n        pointIndices.sort((a, b) => boxes[a].center().getComponent(axis) - boxes[b].center().getComponent(axis));\n\n        const mid = Math.floor(pointIndices.length / 2);\n        const leftIndices = pointIndices.slice(0, mid);\n        const rightIndices = pointIndices.slice(mid);\n\n        this.left = new BVHNode(bounds, boxes, leftIndices);\n        this.right = new BVHNode(bounds, boxes, rightIndices);\n    }\n\n    public queryRange(range: Box3): number[] {\n        if (!this.bounds.intersects(range)) {\n            return [];\n        } else if (this.left !== null && this.right !== null) {\n            return this.left.queryRange(range).concat(this.right.queryRange(range));\n        } else {\n            return this.pointIndices.filter((index) => range.intersects(this.boxes[index]));\n        }\n    }\n}\n\nclass BVH {\n    public root: BVHNode;\n\n    constructor(bounds: Box3, boxes: Box3[]) {\n        const pointIndices = boxes.map((_, index) => index);\n        this.root = new BVHNode(bounds, boxes, pointIndices);\n    }\n\n    public queryRange(range: Box3) {\n        return this.root.queryRange(range);\n    }\n}\n\nexport { BVH };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Vector3 } from \"../../../math/Vector3\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\nimport { Box3 } from \"../../../math/Box3\";\nimport { BVH } from \"../../../math/BVH\";\nimport { RenderData } from \"./RenderData\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n    testPointSingleSplats: (x: number, y: number) => SingleSplat[] | null;\n    testLayer: (value: number, positiveDirection: boolean, axis: string) => SingleSplat[] | null;\n\n    constructor(renderProgram: RenderProgram, maxDistance: number = 100, resolution: number = 1.0) {\n        let vertexCount = 0;\n        let bvh: BVH | null = null;\n\n        let singleSplatbvh: BVH | null = null;\n        let lookup: Splat[] = [];\n        let singleSplatLookup: SingleSplat[] = [];\n\n        const build = () => {\n            if(renderProgram.renderData === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return;\n            }\n            const startTimeSplat = performance.now();\n            \n            lookup = [];\n            const renderData = renderProgram.renderData as RenderData;\n            const boxes = new Array<Box3>(renderData.offsets.size);\n            let i = 0;\n            const bounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const splat of renderData.offsets.keys()) {\n                const splatBounds = splat.bounds;\n                boxes[i++] = splatBounds;\n                bounds.expand(splatBounds.min);\n                bounds.expand(splatBounds.max);\n                lookup.push(splat);\n            }\n            bounds.permute();\n            bvh = new BVH(bounds, boxes);\n\n            const endTimeSplat = performance.now();\n            const duration = endTimeSplat - startTimeSplat; \n            console.log(`creating BVH with SPLAT:  ${duration/1000} s (${duration} ms).`);\n\n            const startTimeSingleSplat = performance.now();\n            singleSplatLookup = [];\n            const singleSplatBoxes = new Array<Box3>(renderData.singleOffsets.size);\n            let j = 0;\n            const singleSplatbounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatBoxes[j++] = splatBounds;\n                singleSplatbounds.expand(splatBounds.min);\n                singleSplatbounds.expand(splatBounds.max);\n                singleSplatLookup.push(singleSplat);\n            }\n            singleSplatbounds.permute();\n            singleSplatbvh = new BVH(singleSplatbounds, singleSplatBoxes);\n\n            const endTimeSingleSplat = performance.now();\n            const durationSingleSplat = endTimeSingleSplat - startTimeSingleSplat;\n            console.log(`creating BVH with SPLAT:  ${durationSingleSplat/1000} s (${durationSingleSplat} ms).`);\n            \n            console.log(\"Got \" + boxes.length + \" boxes for Splat!\")\n            console.log(\"Got \" + singleSplatBoxes.length + \" boxes for Single Splats!\")\n            \n            vertexCount = renderData.vertexCount;\n        };\n        \n        this.testLayer = (value: number, positiveDirection: boolean, axis: string) => {\n            const renderData = renderProgram.renderData as RenderData;\n            singleSplatLookup = [];\n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                if(axis === \"x\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().x >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().x < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"y\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().y >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().y < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"z\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().z >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().z < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                }\n            }\n            return singleSplatLookup;\n        }\n\n        this.testPoint = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            build();\n\n            if (bvh === null) {\n                console.error(\"Failed to build octree for IntersectionTester\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            if (vertexCount !== renderData.vertexCount) {\n                console.warn(\"IntersectionTester has not been rebuilt since the last render\");\n            }\n\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                const points = bvh.queryRange(queryBox);\n                if (points.length > 0) {\n                    return lookup[points[0]];\n                }\n            }\n\n            return null;\n        };\n\n        \n        this.testPointSingleSplats = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            singleSplatLookup = [];\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                \n                for (const singleSplat of renderData.singleOffsets.keys()) {\n                    if(singleSplat.bounds.intersects(queryBox)) {\n                        singleSplatLookup.push(singleSplat)\n                    }\n                }\n            }\n            return singleSplatLookup;\n        };\n    }\n}\n\nexport { IntersectionTester };\n","import { Box3 } from \"./Box3\";\nimport { SingleSplat } from \"../splats/SingleSplat\";\nimport { Vector3 } from \"./Vector3\";\nimport { Ray } from \"./Ray\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public bounds: Box3;\n    public objects: SingleSplat[] = [];\n\n    constructor(objects: SingleSplat[] | undefined = undefined) {\n        this.bounds = new Box3(new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity));\n        \n        if(objects === undefined)\n            return;\n        \n        objects.forEach(obj => {\n            this.bounds.expand(obj.bounds.min);\n            this.bounds.expand(obj.bounds.max);\n        });\n        if (objects.length <= 2) {\n            this.objects = objects;\n        } else {\n            this.split(objects);\n        }\n    }\n\n    private split(objects: SingleSplat[]): void {\n        const mid = Math.floor(objects.length / 2);\n        objects.sort((a, b) => a.bounds.center().x - b.bounds.center().x); // Simplistic sort by X-axis\n\n        this.left = new BVHNode(objects.slice(0, mid));\n        this.right = new BVHNode(objects.slice(mid));\n    }\n\n    public intersects(ray: Ray, maxDistance: number): SingleSplat[] {\n        if (!ray.intersectsBox(this.bounds, maxDistance)) {\n            return [];\n        }\n        if (this.objects.length > 0) {\n            return this.objects.filter(obj => ray.intersectsBox(obj.bounds, maxDistance));\n        }\n        return [\n            ...(this.left ? this.left.intersects(ray, maxDistance) : []),\n            ...(this.right ? this.right.intersects(ray, maxDistance) : [])\n        ];\n    }\n}\n\nexport { BVHNode }","import { Vector3 } from \"./Vector3\";\nimport { Box3 } from \"./Box3\";\n\nclass Ray {\n    origin: Vector3;\n    direction: Vector3;\n\n    constructor(origin: Vector3, direction: Vector3) {\n        this.origin = origin;\n        this.direction = direction.normalize(); // Stellen Sie sicher, dass die Richtung normalisiert ist\n    }\n\n    /**\n     * Berechnet einen Punkt auf dem Strahl bei einem bestimmten Skalar 't'.\n     * @param t Der Skalarwert, der bestimmt, wie weit entlang des Strahls der Punkt liegt.\n     * @returns Der Punkt auf dem Strahl.\n     */\n    getPoint(t: number): Vector3 {\n        return this.origin.add(this.direction.multiply(t));\n    }\n\n    /**\n     * Prüft die Intersektion dieses Strahls mit einer gegebenen Bounding Box.\n     * @param box Die Box, mit der die Intersektion geprüft werden soll.\n     * @returns True, wenn der Strahl die Box schneidet, sonst false.\n     */\n    intersectsBox(box: Box3, maxDistance: number = Infinity): boolean {\n        let tmin = (box.min.x - this.origin.x) / this.direction.x;\n        let tmax = (box.max.x - this.origin.x) / this.direction.x;\n\n        if (tmin > tmax) [tmin, tmax] = [tmax, tmin];\n\n        let tymin = (box.min.y - this.origin.y) / this.direction.y;\n        let tymax = (box.max.y - this.origin.y) / this.direction.y;\n\n        if (tymin > tymax) [tymin, tymax] = [tymax, tymin];\n\n        if ((tmin > tymax) || (tymin > tmax))\n            return false;\n\n        if (tymin > tmin) tmin = tymin;\n        if (tymax < tmax) tmax = tymax;\n\n        let tzmin = (box.min.z - this.origin.z) / this.direction.z;\n        let tzmax = (box.max.z - this.origin.z) / this.direction.z;\n\n        if (tzmin > tzmax) [tzmin, tzmax] = [tzmax, tzmin];\n\n        if ((tmin > tzmax) || (tzmin > tmax))\n            return false;\n\n        if (tzmin > tmin) tmin = tzmin;\n        if (tzmax < tmax) tmax = tzmax;\n\n        return (tmin < maxDistance) && (tmax > 0);\n    }\n}\n\nexport { Ray }","import { Camera } from \"./Camera\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { CameraData } from \"./CameraData\";\nimport {Vector4} from \"../math/Vector4\";\nimport {Plane} from \"../math/Plane\";\n\nclass CameraHelper {\n    private _camera:Camera;\n    private _cameraData: CameraData;\n    \n    private _frustumCorners: Vector3[];\n    \n    constructor(camera: Camera) {\n        this._camera = camera;\n        this._cameraData = this._camera.data;\n        this._frustumCorners = [];\n    }\n    \n    public calculateFrustum(): Vector3[] {\n        \n        const near = this._cameraData.near;\n        const far = this._cameraData.far;\n        const fovX = this._cameraData.fx;\n        const fovY = this._cameraData.fy;\n        \n        const halfHeightNear = Math.tan(fovY / 2) * near;\n        const halfWidthNear = Math.tan(fovX / 2) * near;\n        \n        const halfHeightFar = Math.tan(fovY / 2) * far;\n        const halfWidthFar = Math.tan(fovX / 2) * far;\n        \n        const nearTopLeft = new Vector3(-halfWidthNear, halfHeightNear, -near);\n        const nearTopRight = new Vector3(halfWidthNear, halfHeightNear, -near);\n        const nearBottomLeft = new Vector3(-halfWidthNear, -halfHeightNear, -near);\n        const nearBottomRight = new Vector3(halfWidthNear, -halfHeightNear, -near);\n\n        const farTopLeft = new Vector3(-halfWidthFar, halfHeightFar, far);\n        const farTopRight = new Vector3(halfWidthFar, halfHeightFar, far);\n        const farBottomLeft = new Vector3(-halfWidthFar, -halfHeightFar, far);\n        const farBottomRight = new Vector3(halfWidthFar, -halfHeightFar, far);\n\n        this._frustumCorners.push(\n            this.cameraToWorldCoords(nearTopLeft),\n            this.cameraToWorldCoords(nearTopRight),\n            this.cameraToWorldCoords(nearBottomLeft),\n            this.cameraToWorldCoords(nearBottomRight),\n            this.cameraToWorldCoords(farTopLeft),\n            this.cameraToWorldCoords(farTopRight),\n            this.cameraToWorldCoords(farBottomLeft),\n            this.cameraToWorldCoords(farBottomRight)\n        );\n\n        return this._frustumCorners;\n    }\n    \n    public cameraToWorldCoords(cameraCoords: Vector3): Vector3 {\n        const cameraSpaceCoords = new Vector4(cameraCoords.x, cameraCoords.y, cameraCoords.z, 1);\n        \n        const inverseViewMatrix = this._cameraData.viewMatrix.invert();\n        const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n        \n        const worldSpacePosition = new Vector3(\n            worldSpaceCoords.x / worldSpaceCoords.w,\n            worldSpaceCoords.y / worldSpaceCoords.w,\n            worldSpaceCoords.z / worldSpaceCoords.w,\n        );\n        \n        return worldSpacePosition;\n    }\n\n    public pointInFrustum(point: Vector3): boolean {\n        const planes = [\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[2]), // Near plane\n            this.createPlane(this._frustumCorners[4], this._frustumCorners[5], this._frustumCorners[6]), // Far plane\n            \n            this.createPlane(this._frustumCorners[0], this._frustumCorners[2], this._frustumCorners[4]), // left\n            this.createPlane(this._frustumCorners[1], this._frustumCorners[3], this._frustumCorners[5]), // right\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[4]), // bottom\n            this.createPlane(this._frustumCorners[2], this._frustumCorners[3], this._frustumCorners[6]), // top\n        ];\n        \n        return  planes[0].distanceToPoint(point) <= 0 && // before near plane\n                planes[1].distanceToPoint(point) >= 0 && // behind far plane\n                planes[2].distanceToPoint(point) <= 0 && // right from left plane\n                planes[3].distanceToPoint(point) >= 0 && // left from right plane\n                planes[4].distanceToPoint(point) >= 0 && // over bottom plane\n                planes[5].distanceToPoint(point) <= 0; // under top plane\n    }\n\n    private createPlane(a: Vector3, b: Vector3, c: Vector3): FrustumPlane {\n        const ab = b.subtract(a);\n        const ac = c.subtract(a);\n        const normal = ab.cross(ac).normalize();\n        const d = -normal.dot(a);\n        return new FrustumPlane(normal, d);\n    }\n}\n\nclass FrustumPlane {\n    normal: Vector3;\n    d: number;\n\n    constructor(normal: Vector3, d: number) {\n        this.normal = normal;\n        this.d = d;\n    }\n\n    distanceToPoint(point: Vector3): number {\n        // Berechnet den Abstand des Punktes von der Ebene\n        return this.normal.dot(point) + this.d;\n    }\n}\n\n\nexport { CameraHelper }","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass CubeVisualisationProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], points: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        if(points.length !== (2 || 8)) {\n            console.log(\"Please provide 2 oder 8 corners\")\n        }\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let corners: Float32Array;\n        let surface: Float32Array;\n        \n        if(points.length === 2) {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n        } else {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n            const [x3, y3, z3] = points[2];\n            const [x4, y4, z4] = points[3];\n            const [x5, y5, z5] = points[4];\n            const [x6, y6, z6] = points[5];\n            const [x7, y7, z7] = points[6];\n            const [x8, y8, z8] = points[7];\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y2, z2,  // Linie von P1 zu P2\n                x1, y1, z1, x3, y3, z3,  // Linie von P1 zu P3\n                x1, y1, z1, x5, y5, z5,  // Linie von P1 zu P5\n                x2, y2, z2, x4, y4, z4,  // Linie von P2 zu P4\n                x2, y2, z2, x6, y6, z6,  // Linie von P2 zu P6\n                x3, y3, z3, x4, y4, z4,  // Linie von P3 zu P4\n                x3, y3, z3, x7, y7, z7,  // Linie von P3 zu P7\n                x5, y5, z5, x6, y6, z6,  // Linie von P5 zu P6\n                x5, y5, z5, x7, y7, z7,  // Linie von P5 zu P7\n                x4, y4, z4, x8, y8, z8,  // Linie von P4 zu P8\n                x6, y6, z6, x8, y8, z8,  // Linie von P6 zu P8\n                x7, y7, z7, x8, y8, z8   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y2, z2, x3, y3, z3, x2, y2, z2, x4, y4, z4, x3, y3, z3,\n                x5, y5, z5, x6, y6, z6, x7, y7, z7, x6, y6, z6, x8, y8, z8, x7, y7, z7,\n                x1, y1, z1, x5, y5, z5, x3, y3, z3, x7, y7, z7, x5, y5, z5, x3, y3, z3,\n                x2, y2, z2, x6, y6, z6, x4, y4, z4, x8, y8, z8, x6, y6, z6, x4, y4, z4,\n                x1, y1, z1, x2, y2, z2, x5, y5, z5, x6, y6, z6, x2, y2, z2, x5, y5, z5,\n                x3, y3, z3, x4, y4, z4, x7, y7, z7, x8, y8, z8, x4, y4, z4, x7, y7, z7\n            ])\n        }\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36);\n        };\n        \n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(corners, colorLines);\n            drawCube(surface, color)\n        };\n\n        this._resize = () => {};\n        \n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n    \n}\n\nexport { CubeVisualisationProgram }","import {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\nimport {ShaderProgram} from \"../renderers/webgl/programs/ShaderProgram\";\n\nclass Utils {\n    \n    public static draw(renderer: WebGLRenderer, point:Vector3, size: number) {\n        let upperLeftCorner = new Float32Array([point.x+(size/2), point.y+(size/2), point.z+(size/2)]);\n        let bottomRightCorner = new Float32Array([point.x-(size/2), point.y-(size/2), point.z-(size/2)]);\n\n        var renderProgram = new CubeVisualisationProgram(renderer, [], [upperLeftCorner, bottomRightCorner]);\n        renderer.addProgram(renderProgram);\n    }\n\n    public static drawCone(renderer: WebGLRenderer, points:Vector3[]) {\n        \n        let vecs: Float32Array[] = []\n        for(let i = 0; i < points.length; i++) {\n            vecs.push(new Float32Array([points[i].x, points[i].y, points[i].z]))\n        }\n        var renderProgram = new CubeVisualisationProgram(renderer, [], vecs);\n        renderer.addProgram(renderProgram);\n    }\n}\n\nexport { Utils }","import { BVHNode } from \"../../../math/BVHNode\";\nimport { SingleSplat } from \"../../../splats/SingleSplat\";\nimport { Camera } from \"../../../cameras/Camera\";\nimport { Ray } from \"../../../math/Ray\"\nimport {BVH} from \"../../../math/BVH\";\nimport {Box3} from \"../../../math/Box3\";\nimport {Vector3} from \"../../../math/Vector3\";\nimport {RenderProgram} from \"../programs/RenderProgram\";\nimport {RenderData} from \"./RenderData\";\nimport {WebGLRenderer} from \"../../WebGLRenderer\";\nimport { CubeVisualisationProgram } from \"../programs/individual/CubeVisualisationProgram\";\nimport {CameraHelper} from \"../../../cameras/CameraHelper\";\nimport {Utils} from \"../../../utils/Utils\";\n\nclass Raycaster {\n    private bvh: BVHNode | undefined;\n    private renderer: WebGLRenderer;\n    private renderProgram: RenderProgram;\n    \n    public testBox: (point1: Float32Array, point2: Float32Array) => SingleSplat[] | null;\n    public testCameraViewFrustum: (camera: Camera) => SingleSplat[] | null;\n\n    constructor(renderer: WebGLRenderer, buildBVH: boolean) {\n        let singleSplatLookup: SingleSplat[] = [];\n        this.renderer = renderer;\n        this.renderProgram = renderer.renderProgram;\n        \n        if(buildBVH) {\n            const renderData = this.renderProgram.renderData as RenderData;\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatLookup.push(singleSplat);\n            }\n            this.bvh = new BVHNode(singleSplatLookup);\n        }\n\n        this.testBox = (point1: Float32Array, point2: Float32Array) => {\n            const renderData = this.renderProgram.renderData as RenderData;\n            \n            if(renderData === undefined)\n                return null;\n\n            singleSplatLookup = [];\n            \n            const [x1, y1, z1] = point1;\n            const [x2, y2, z2] = point2;\n            const minPoint = new Vector3(x1, y1, z1);\n            const maxPoint = new Vector3(x2, y2, z2);\n            \n            const queryBox = new Box3(maxPoint, minPoint);\n            queryBox.permute();\n            \n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(queryBox.contains(singleSplat.bounds.center())) {\n                    \n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n\n        this.testCameraViewFrustum = (camera: Camera, showFrustum: boolean = false, showForSeconds: number = -1) => {\n            this.renderer.removeAllPrograms();\n            const renderData = this.renderProgram.renderData as RenderData;\n            let camHelper: CameraHelper = new CameraHelper(camera);\n            let corners: Vector3[] = camHelper.calculateFrustum();\n            \n            singleSplatLookup = [];\n            \n            if(showFrustum) {\n                Utils.drawCone(this.renderer,corners)\n                if(showForSeconds > 0) {\n                    setTimeout(function() {\n                        renderer.removeAllPrograms();\n                    }, showForSeconds * 1000);\n                } \n            }\n\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(camHelper.pointInFrustum(singleSplat.bounds.center())) {\n\n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n    }\n\n    public testPointSingleSplats(x: number, y: number, camera: Camera, maxDistance: number): SingleSplat[] | null {\n        if(this.bvh === undefined)\n            return null;\n        \n        if (!camera) {\n            console.error(\"Camera is not initialized\");\n            return null;\n        }\n\n        const ray = new Ray(camera.position, camera.screenPointToRay(x, y));\n        return this.bvh.intersects(ray, maxDistance);\n    }\n}\n\nexport { Raycaster }","import { ShaderProgram } from \"../ShaderProgram\";\nimport { WebGLRenderer } from \"../../../WebGLRenderer\";\nimport { ShaderPass } from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 axisColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = axisColor;\n}\n`;\n\nclass AxisProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        const xVertices = new Float32Array([-50, 0, 0, 50, 0, 0]);\n        const yVertices = new Float32Array([0, -50, 0, 0, 50, 0]);\n        const zVertices = new Float32Array([0, 0, -50, 0, 0, 50]);\n\n        const xColor = new Float32Array([1, 0, 0, 0.5]);\n        const yColor = new Float32Array([0, 1, 0, 0.5]);\n        const zColor = new Float32Array([0, 0.5, 1, 0.5]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"axisColor\") as WebGLUniformLocation;\n        };\n\n        const drawAxis = (vertices: Float32Array, color: Float32Array) => {\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 2);\n        };\n\n        this._resize = () => {};\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawAxis(xVertices, xColor);\n            drawAxis(yVertices, yColor);\n            drawAxis(zVertices, zColor);\n        };\n\n        this._dispose = () => {};\n    }\n\n    protected _getVertexSource() {\n        return axisVertexShader;\n    }\n\n    protected _getFragmentSource() {\n        return axisFragmentShader;\n    }\n}\n\nexport { AxisProgram };\n","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass MultibleCubesProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], upperLeftCorners: Float32Array[], bottomRightCorners: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let tempAllCorners = [];\n        let tempAllSurface = [];\n        \n        let numberOfCubes = upperLeftCorners.length;\n        \n        for(var i = 0; i < numberOfCubes; i++) {\n            const [x1, y1, z1] = upperLeftCorners[i];\n            const [x2, y2, z2] = bottomRightCorners[i];\n\n\n            const corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n            tempAllCorners.push(...corners);\n\n\n            const surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n            tempAllSurface.push(...surface);\n        }\n\n        let allCorners = new Float32Array(tempAllCorners);\n        let allsurface = new Float32Array(tempAllSurface);\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24 * numberOfCubes);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36 * numberOfCubes);\n        };\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(allCorners, colorLines);\n            drawCube(allsurface, color)\n        };\n\n        this._resize = () => {};\n\n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n\n}\n\nexport { MultibleCubesProgram }\n"],"names":["Vector3","constructor","x","y","z","this","equals","v","add","subtract","multiply","buffer","divide","cross","dot","lerp","t","min","Math","max","getComponent","axis","Error","minComponent","maxComponent","magnitude","sqrt","distanceTo","normalize","length","flat","clone","toString","join","One","value","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","inverse","apply","vecQuat","conjugate","rotatedQuat","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","trace","s","FromAxisAngle","angle","halfAngle","LookRotation","direction","forward","rotAngle","acos","rotAxis","EventDispatcher","listeners","Map","addEventListener","type","listener","has","set","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","i","a","b","determinant","invert","det","invDet","Compose","position","rotation","scale","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","ObjectAddedEvent","Event","object","super","ObjectRemovedEvent","ObjectChangedEvent","RenderedSplatsChangedEvent","Object3D","positionChanged","rotationChanged","scaleChanged","_position","_rotation","_scale","_transform","_changeEvent","_renderedSplatsChanged","update","applyPosition","applyRotation","applyScale","raiseChangeEvent","_updateMatrix","transform","SplatData","vertexCount","positions","rotations","scales","colors","rendered","changed","detached","_vertexCount","_positions","Float32Array","_rotations","_scales","_colors","Uint8Array","_selection","_rendered","fill","removeVertex","index","removeItemsFromArray","removeVertexRange","count","arr","start","part1","subarray","part2","newArr","serialize","data","RowLength","f_buffer","u_buffer","reattach","selection","console","assert","byteLength","Deserialize","SplatvData","width","height","_data","_width","_height","Uint32Array","floor","Converter","SplatToPLY","header","properties","push","property","headerBuffer","TextEncoder","encode","plyRowLength","plyLength","output","DataView","ArrayBuffer","offset","scale_offset","opacity_offset","rot_offset","pos0","pos1","pos2","f_dc_0","SH_C0","f_dc_1","f_dc_2","alpha","opacity","log","scale0","scale1","scale2","rot0","rot1","rot2","rot3","setFloat32","f_dc_offset","Box3","contains","point","intersects","box","intersectsBasedOnCenter","centerA","center","centerB","sizeA","size","sizeB","expand","permute","surfaceArea","depth","Matrix3","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","SingleSplat","color","_colorTransforms","_colorTransformsMap","_index","_bounds","Infinity","_defaultColor","_color","_selected","recalculateBounds","translate","translation","pos","Position","rotate","R","rot","Rotation","currentRotation","newRot","scl","Scale","Selected","Rendered","Color","colorVector","colorIndex","ResetColor","bounds","PositionVec3","ScaleVec3","Constants","BYTE_OFFSET_FLOAT","BYTE_OFFSET_DOUBLE","BYTE_OFFSET_INT","Splat","splat","undefined","selectedChanged","renderNumberChanged","colorTransformChanged","_splats","_numberOfSplats","_numberOfRenderedSplats","selected","Array","createSplatsData","singleSplat","forEach","applySelection","saveToFile","name","format","document","now","Date","getFullYear","getMonth","getDate","blob","plyData","Blob","link","createElement","download","href","URL","createObjectURL","click","splats","getSplatAtIndex","error","selectSplat","updateRenderingOfSplats","colorTransforms","colorTransformsMap","splatCount","numberOfRenderedSplats","Positions","tempPositions","Scales","tempScales","Rotations","tempRotations","Colors","tempColors","Selections","tempSelections","Splatv","CameraData","_fx","_fy","_near","_far","_projectionMatrix","_viewMatrix","_viewProj","_updateProjectionMatrix","fx","fy","far","near","projectionMatrix","viewMatrix","setSize","viewProj","Vector4","Camera","camera","screenPointToRay","clipSpaceCoords","inverseProjectionMatrix","cameraSpaceCoords","inverseViewMatrix","worldSpaceCoords","Scene","_objects","addObject","objects","removeObject","indexOf","splice","findObject","predicate","findObjectOfType","reset","objectsToRemove","slice","buffers","async","initiateFetchRequest","url","useCache","req","fetch","mode","credentials","cache","status","loadRequestDataIntoBuffer","res","onProgress","headers","reader","body","getReader","contentLength","parseInt","bytesRead","done","read","loadDataIntoBuffer","chunks","receivedLength","chunk","loadChunkedDataIntoBuffer","Loader","LoadAsync","scene","LoadFromArrayBuffer","LoadFromFileAsync","file","FileReader","onload","target","result","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","arrayBuffer","PLYLoader","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","header_end","header_end_index","exec","rowOffset","offsets","double","int","uint","float","short","ushort","uchar","prop","split","filter","k","startsWith","_p","dataView","q_polycam","rgba","Uint8ClampedArray","r0","r1","r2","r3","getFloat32","getInt32","exp","temp","SplatvLoader","_ParseSplatvBuffer","splatv","handleChunk","intView","Int32Array","splatChunks","JSON","parse","warn","cameras","cameraData","texwidth","texheight","shift","inputOffset","sizeToRead","ShaderProgram","renderer","passes","_scene","_camera","_started","_initialized","_renderer","gl","_program","createProgram","_passes","vertexShader","createShader","VERTEX_SHADER","shaderSource","_getVertexSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","_getFragmentSource","attachShader","program","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","resize","useProgram","_resize","initialize","_initialize","pass","render","dispose","_render","_dispose","started","loadWasm","moduleArg","readyPromiseResolve","readyPromiseReject","readBinary","Module","readyPromise","reject","moduleOverrides","Object","assign","scriptDirectory","self","location","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","response","bind","wasmBinary","wasmMemory","err","tryParseAsDataURI","filename","isDataURI","decoded","atob","bytes","charCodeAt","intArrayFromBase64","dataURIPrefix","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","Int8Array","Int16Array","Uint16Array","Float64Array","wasmBinaryFile","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","getBinaryPromise","binaryFile","then","binary","getBinarySync","instantiateArrayBuffer","imports","receiver","WebAssembly","instantiate","reason","what","RuntimeError","abort","callRuntimeCallbacks","callbacks","embind_charCodes","BindingError","readLatin1String","ptr","ret","c","awaitingDependencies","registeredTypes","throwBindingError","message","registerType","rawType","registeredInstance","options","TypeError","hasOwnProperty","ignoreDuplicateRegistrations","cb","sharedRegisterType","emval_freelist","emval_handles","count_emval_handles","Emval","handle","pop","readPointer","pointer","EmValType","fromWireType","rv","__emval_decref","toWireType","destructors","argPackAdvance","readValueFromPointer","destructorFunction","floatReadValueFromPointer","integerReadValueFromPointer","signed","UTF8Decoder","UTF8ToString","maxBytesToRead","heapOrArray","idx","endIdx","endPtr","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","growMemory","pages","grow","codes","embind_init_charCodes","wasmImports","f","primitiveType","minRange","maxRange","h","trueValue","falseValue","wt","o","g","bitshift","isUnsignedType","includes","dataTypeIndex","TA","decodeMemoryView","d","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","_free","valueIsOfTypeString","lengthBytesUTF8","base","_malloc","heap","outIdx","u","startIdx","stringToUTF8Array","charCode","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","isVoid","j","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","newSize","wasmExports","callback","info","receiveInstance","instance","module","exports","unshift","id","removeRunDependency","catch","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","calledRun","run","doRun","postRun","preRun","setTimeout","runCaller","RenderData","dataChanged","transformsChanged","colorTransformsChanged","_updating","_dirty","splatIndex","_splatIndices","_singleSplatIndices","_offsets","_singleOffsets","lookup","singlelookup","ceil","_transformsWidth","_transformsHeight","_transforms","_transformIndicesWidth","_transformIndicesHeight","_transformIndices","_colorTransformsWidth","_colorTransformsHeight","_colorTransformIndicesWidth","_colorTransformIndicesHeight","_colorTransformIndices","colorTransformIndices","_worker","DataWorker","updateTransform","updateColorTransforms","keys","colorTransform","colorTransformIndex","wasmModule","onmessage","worldPositions","worldRotations","worldScales","initWasm","buildImmediate","waitForWasm","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","_pack","outData","build","serializedSplat","postMessage","getSplat","key","getLocalIndex","markDirty","rebuild","clear","terminate","singleOffsets","transforms","transformsWidth","transformsHeight","transformIndices","transformIndicesWidth","transformIndicesHeight","colorTransformsWidth","colorTransformsHeight","colorTransformIndicesWidth","colorTransformIndicesHeight","needsRebuild","updating","Color32","r","flatNorm","toHexString","map","padStart","RenderProgram","_outlineThickness","_outlineColor","_renderData","_depthIndex","_splatTexture","canvas","u_projection","u_viewport","u_focal","u_view","u_texture","u_transforms","u_transformIndices","u_colorTransforms","u_colorTransformIndices","u_outlineThickness","u_outlineColor","positionAttribute","indexAttribute","transformsTexture","transformIndicesTexture","colorTransformsTexture","colorTransformIndicesTexture","vertexBuffer","indexBuffer","getUniformLocation","uniformMatrix4fv","uniform2fv","createWorker","SortWorker","depthIndex","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","handleObjectAdded","handleObjectRemoved","handleObjectChanged","handleRenderedSplatsChanged","uniform1f","outlineThickness","uniform4fv","outlineColor","createTexture","uniform1i","createBuffer","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","resetSplatData","_a","_b","renderData","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","splatTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","TEXTURE1","RGBA32F","RGBA","TEXTURE2","R32UI","RED_INTEGER","TEXTURE3","TEXTURE4","detachedPositions","detachedTransforms","detachedTransformIndices","sortData","viewport","clearColor","COLOR_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","vertexAttribIPointer","INT","vertexAttribDivisor","drawArraysInstanced","TRIANGLE_FAN","deleteTexture","deleteBuffer","_setOutlineThickness","_setOutlineColor","worker","FadeInPass","speed","renderProgram","u_useDepthFade","u_depthFade","active","WebGLRenderer","optionalCanvas","optionalRenderPasses","_backgroundColor","style","display","boxSizing","margin","padding","appendChild","background","_canvas","_gl","getContext","antialias","renderPasses","_renderProgram","_customPrograms","programs","clientWidth","clientHeight","addProgram","removeProgram","removeAllPrograms","backgroundColor","OrbitControls","beta","radius","enableKeyboardControls","inputTarget","enabled","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","isUpdatingCamera","eulerRotation","newTarget","dx","dy","dz","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","rx","ry","moveSpeed","rotateSpeed","stopPropagation","FPSControls","lookSpeed","pitch","yaw","targetPosition","pointerLock","requestPointerLock","onPointerLockChange","pointerLockElement","mouseX","movementX","mouseY","movementY","exitPointerLock","move","Plane","normal","intersect","origin","denominator","ShaderPass","VideoRenderProgram","u_time","setupWorker","dummyTransforms","dummyTransformIndices","BVHNode$1","BVHNode","boxes","pointIndices","left","sort","mid","leftIndices","rightIndices","queryRange","range","concat","BVH","_","root","IntersectionTester","maxDistance","resolution","bvh","singleSplatLookup","testLayer","positiveDirection","splatBounds","testPoint","startTimeSplat","performance","duration","startTimeSingleSplat","singleSplatBoxes","singleSplatbounds","durationSingleSplat","ray","minPoint","maxPoint","queryBox","points","testPointSingleSplats","obj","intersectsBox","Ray","getPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","CameraHelper","_cameraData","_frustumCorners","calculateFrustum","fovX","fovY","halfHeightNear","tan","halfWidthNear","halfHeightFar","halfWidthFar","nearTopLeft","nearTopRight","nearBottomLeft","nearBottomRight","farTopLeft","farTopRight","farBottomLeft","farBottomRight","cameraToWorldCoords","cameraCoords","pointInFrustum","planes","createPlane","distanceToPoint","ab","ac","FrustumPlane","CubeVisualisationProgram","u_color","corners","surface","x3","y3","z3","x4","y4","z4","x5","y5","z5","x6","y6","z6","x7","y7","z7","x8","y8","z8","colorLines","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","vertices","lineWidth","drawArrays","LINES","drawCubeLines","TRIANGLES","drawCube","Utils","draw","upperLeftCorner","bottomRightCorner","drawCone","vecs","Raycaster","buildBVH","testBox","point1","point2","testCameraViewFrustum","showFrustum","showForSeconds","camHelper","AxisProgram","xVertices","yVertices","zVertices","xColor","yColor","zColor","drawAxis","MultibleCubesProgram","upperLeftCorners","bottomRightCorners","tempAllCorners","tempAllSurface","numberOfCubes","allCorners","allsurface"],"mappings":"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IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEnI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAEhI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE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"}