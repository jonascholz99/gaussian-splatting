{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/events/EventDispatcher.ts","../src/math/Matrix4.ts","../src/events/Events.ts","../src/core/Object3D.ts","../src/splats/SplatData.ts","../src/splats/SplatvData.ts","../src/utils/Converter.ts","../src/math/Box3.ts","../src/math/Matrix3.ts","../src/splats/SingleSplat.ts","../src/utils/Constants.ts","../src/Octree/core/OctreeIterator.ts","../src/math/NewRay.ts","../src/Octree/core/intersectOctree.ts","../src/Octree/core/OctreeRaycaster.ts","../src/Octree/core/RaycastingFlags.ts","../src/Octree/Octree.ts","../src/Octree/core/layout.ts","../src/Octree/core/Octant.ts","../src/Octree/points/PointContainer.ts","../src/Octree/points/RayPointIntersection.ts","../src/Octree/points/PointData.ts","../src/Octree/points/PointOctant.ts","../src/Octree/points/PointOctree.ts","../src/splats/Splat.ts","../src/splats/Splatv.ts","../src/cameras/CameraData.ts","../src/math/Vector4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/utils/LoaderUtils.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/loaders/SplatvLoader.ts","../src/renderers/webgl/programs/ShaderProgram.ts","../src/wasm/data.js","../src/renderers/webgl/utils/RenderData.ts","../src/math/Color32.ts","../src/renderers/webgl/programs/RenderProgram.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/controls/OrbitControls.ts","../src/controls/FPSControls.ts","../src/math/Plane.ts","../src/renderers/webgl/passes/ShaderPass.ts","../src/renderers/webgl/programs/VideoRenderProgram.ts","../src/math/BVH.ts","../src/renderers/webgl/utils/IntersectionTester.ts","../src/math/BVHNode.ts","../src/math/Ray.ts","../src/cameras/CameraHelper.ts","../src/renderers/webgl/programs/individual/CubeVisualisationProgram.ts","../src/utils/Utils.ts","../src/renderers/webgl/utils/Raycaster.ts","../src/renderers/webgl/programs/individual/AxisProgram.ts","../src/renderers/webgl/programs/individual/MultibleCubesProgram.ts","../src/Octree/OctreeHelper.ts","../src/math/Frustum.ts"],"sourcesContent":["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public x: number;\n    public y: number;\n    public z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    set( x: number, y: number, z: number ) {\n\n        if ( z === undefined ) z = this.z;\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    addVectors(a:Vector3, b:Vector3) {\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n        \n        return this;\n    }\n    \n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    addScaledVector( v:Vector3, s: number ) {\n\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n\n        return this;\n\n    }\n\n    subVectors(a:Vector3, b:Vector3) {\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n\n        return this;\n    }\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    sub( v: Vector3 ) {\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    divide(v: number): Vector3;\n    divide(v: Vector3): Vector3;\n    divide(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x / v, this.y / v, this.z / v);\n        } else {\n            return new Vector3(this.x / v.x, this.y / v.y, this.z / v.z);\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    distanceToSquared( v:Vector3 ) {\n\n        const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n        return dx * dx + dy * dy + dz * dz;\n\n    }\n\n    \n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    min(v: Vector3): Vector3 {\n        return new Vector3(Math.min(this.x, v.x), Math.min(this.y, v.y), Math.min(this.z, v.z));\n    }\n\n    max(v: Vector3): Vector3 {\n        return new Vector3(Math.max(this.x, v.x), Math.max(this.y, v.y), Math.max(this.z, v.z));\n    }\n\n    getComponent(axis: number) {\n        switch (axis) {\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            default:\n                throw new Error(`Invalid component index: ${axis}`);\n        }\n    }\n\n    minComponent(): number {\n        if (this.x < this.y && this.x < this.z) {\n            return 0;\n        } else if (this.y < this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    maxComponent(): number {\n        if (this.x > this.y && this.x > this.z) {\n            return 0;\n        } else if (this.y > this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    lengthSq() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    clamp( min:Vector3, max:Vector3 ) {\n\n        // assumes min < max, componentwise\n\n        this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n        this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n        this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n        return this;\n\n    }\n    \n    copy( v: Vector3 ) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    static LookRotation(direction: Vector3): Quaternion {\n        const forward = new Vector3(0, 0, 1);\n        const dot = forward.dot(direction);\n\n        if (Math.abs(dot - -1.0) < 0.000001) {\n            return new Quaternion(0, 1, 0, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            return new Quaternion();\n        }\n\n        const rotAngle = Math.acos(dot);\n        const rotAxis = forward.cross(direction).normalize();\n        return Quaternion.FromAxisAngle(rotAxis, rotAngle);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n","class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n","import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nclass RenderedSplatsChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"renderedSplatsChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent, RenderedSplatsChangedEvent };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport {ObjectChangedEvent, RenderedSplatsChangedEvent} from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n    protected _renderedSplatsChanged = new RenderedSplatsChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n    raiseChangeEvent: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n\n        this.raiseChangeEvent = () => {\n            this.dispatchEvent(this._changeEvent);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport {PointOctree} from \"../Octree/points/PointOctree\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n    \n    private _vertexCount: number;\n    private _renderedSplats: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n    private _rendered: Uint8Array;\n\n    translate: (translation: Vector3) => void;\n    private removeItemsFromArray: (arr: Float32Array | Uint8Array, start: number, count: number) => Float32Array | Uint8Array;\n    removeVertex:(index: number) => void;\n    removeVertexRange:(index: number, count: number) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n        rendered: ArrayBufferLike,\n    ) => void;\n    \n    resetRendering: () => void;\n    countRenderedSplats: () => void;\n    \n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n        rendered: Uint8Array | null = null\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n        this._rendered = new Uint8Array(this.vertexCount).fill(1);\n        this._renderedSplats = vertexCount;\n        \n        this.resetRendering = () => {\n            this._rendered = new Uint8Array(this.vertexCount).fill(0);\n            // this.countRenderedSplats();\n            // this.changed = true;\n        }\n\n        this.translate = (translation: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] += translation.x;\n                this.positions[3 * i + 1] += translation.y;\n                this.positions[3 * i + 2] += translation.z;\n            }\n\n            this.changed = true;\n        };\n        \n        this.removeVertex = (index: number) => {\n            if(index < 0 || index >= this._vertexCount) {\n                throw new Error(\"Index out od bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, 4);\n\n            this._vertexCount--;  // reduce vertexCount\n            this.changed = true; \n        }\n        \n        this.removeVertexRange = (index: number, count: number) => {\n            if (index < 0 || index + count > this._vertexCount) {\n                throw new Error(\"Index range out of bounds\");\n            }\n\n            // remove from positions\n            this._positions = <Float32Array>this.removeItemsFromArray(this._positions, index * 3, count * 3);\n            // remove from rotations\n            this._rotations = <Float32Array>this.removeItemsFromArray(this._rotations, index * 4, count * 4);\n            // remove from scales\n            this._scales = <Float32Array>this.removeItemsFromArray(this._scales, index * 3, count * 3);\n            // remove from colors\n            this._colors = <Uint8Array>this.removeItemsFromArray(this._colors, index * 4, count * 4);\n\n            this._vertexCount -= count;  // reduce vertexCount\n            this.changed = true;\n        }\n        \n        this.removeItemsFromArray = (arr: Float32Array | Uint8Array, start: number, count: number) => {\n            let part1 = arr.subarray(0, start);\n            let part2 = arr.subarray(start + count, arr.length);\n            let newArr = new (arr.constructor as any)(part1.length + part2.length);\n            newArr.set(part1, 0);\n            newArr.set(part2, part1.length);\n            return newArr;\n        }\n        \n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n            rendered: ArrayBufferLike,\n        ) => {\n            const renderedFrame = new Uint8Array(rendered);\n            let receivedSplats = 0;\n            for (let i = 0; i < renderedFrame.length; i++) {\n                if (renderedFrame[i] !== 0) {\n                    receivedSplats++;\n                }\n            }\n            \n            console.assert(\n                positions.byteLength === receivedSplats * 3 * 4,\n                `Expected ${receivedSplats * 3 * 4} bytes, got ${positions.byteLength} bytes which are ${positions.byteLength / 3 / 4} splats`,\n            );\n            \n            const newPositions = new Float32Array(positions);\n            const newRotations = new Float32Array(rotations);\n            const newScales = new Float32Array(scales);\n            const newColors = new Uint8Array(colors);\n            const newSelection = new Uint8Array(selection);\n\n            let newIndex = 0;\n            for (let i = 0; i < renderedFrame.length; i++) {\n                if (renderedFrame[i] === 1) {\n                    // Calculate the starting index\n                    const posIndex = i * 3;\n                    const rotIndex = i * 4;\n                    const scaleIndex = i * 3;\n                    const colorIndex = i * 4;\n\n                    // Update positions (3 values per position)\n                    this._positions.set(newPositions.subarray(newIndex * 3, newIndex * 3 + 3), posIndex);\n\n                    // Update rotations (4 values per rotation)\n                    this._rotations.set(newRotations.subarray(newIndex * 4, newIndex * 4 + 4), rotIndex);\n\n                    // Update scales (3 values per scale)\n                    this._scales.set(newScales.subarray(newIndex * 3, newIndex * 3 + 3), scaleIndex);\n\n                    // Update colors (4 values per color, assuming RGBA)\n                    this._colors.set(newColors.subarray(newIndex * 4, newIndex * 4 + 4), colorIndex);\n\n                    // Update selection\n                    this._selection[i] = newSelection[newIndex];\n\n                    newIndex++;\n                }\n            }\n\n            // this._rendered = new Uint8Array(rendered);\n            // this._positions = new Float32Array(positions);\n            // this._rotations = new Float32Array(rotations);\n            // this._scales = new Float32Array(scales);\n            // this._colors = new Uint8Array(colors);\n            // this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n\n        this.countRenderedSplats = () => {\n            let count = 0;\n            for (let i = 0; i < this._rendered.length; i++) {\n                if (this._rendered[i] !== 0) {\n                    count++;\n                }\n            }\n            this._renderedSplats = count;\n        };\n    }\n    \n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n        \n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n    \n    get renderedSplats() {\n        return this._renderedSplats;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n\n    get rendered() {\n        return this._rendered;\n    }\n}\n\nexport { SplatData };\n","class SplatvData {\n    static RowLength = 64;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n\n    serialize: () => Uint8Array;\n\n    constructor(vertexCount: number, positions: Float32Array, data: Uint32Array, width: number, height: number) {\n        this._vertexCount = vertexCount;\n        this._positions = positions;\n        this._data = data;\n        this._width = width;\n        this._height = height;\n\n        this.serialize = () => {\n            return new Uint8Array(this._data.buffer);\n        };\n    }\n\n    static Deserialize(data: Uint8Array, width: number, height: number): SplatvData {\n        const buffer = new Uint32Array(data.buffer);\n        const f_buffer = new Float32Array(data.buffer);\n        const vertexCount = Math.floor(f_buffer.byteLength / this.RowLength);\n        const positions = new Float32Array(vertexCount * 3);\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[16 * i + 0];\n            positions[3 * i + 1] = f_buffer[16 * i + 1];\n            positions[3 * i + 2] = f_buffer[16 * i + 2];\n            positions[3 * i + 0] = f_buffer[16 * i + 3];\n        }\n        return new SplatvData(vertexCount, positions, buffer, width, height);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n}\n\nexport { SplatvData };\n","import { Quaternion } from \"../math/Quaternion\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Converter {\n    public static SH_C0 = 0.28209479177387814;\n\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\n        header += `element vertex ${vertexCount}\\n`;\n\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\n        for (let i = 0; i < 45; i++) {\n            properties.push(`f_rest_${i}`);\n        }\n        properties.push(\"opacity\");\n        properties.push(\"scale_0\");\n        properties.push(\"scale_1\");\n        properties.push(\"scale_2\");\n        properties.push(\"rot_0\");\n        properties.push(\"rot_1\");\n        properties.push(\"rot_2\");\n        properties.push(\"rot_3\");\n\n        for (const property of properties) {\n            header += `property float ${property}\\n`;\n        }\n        header += \"end_header\\n\";\n\n        const headerBuffer = new TextEncoder().encode(header);\n\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\n        const plyLength = vertexCount * plyRowLength;\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\n\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        const offset = headerBuffer.length;\n        const f_dc_offset = 4 * 3 + 4 * 3;\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\n        const scale_offset = opacity_offset + 4;\n        const rot_offset = scale_offset + 4 * 3;\n        for (let i = 0; i < vertexCount; i++) {\n            const pos0 = f_buffer[8 * i + 0];\n            const pos1 = f_buffer[8 * i + 1];\n            const pos2 = f_buffer[8 * i + 2];\n\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\n\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\n            const opacity = Math.log(alpha / (1 - alpha));\n\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\n\n            let q = new Quaternion(\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n            q = q.normalize();\n\n            const rot0 = q.w;\n            const rot1 = q.x;\n            const rot2 = q.y;\n            const rot3 = q.z;\n\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\n\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\n\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\n\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\n\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\n        }\n\n        return output.buffer;\n    }\n}\n\nexport { Converter };\n","import { Vector3 } from \"./Vector3\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\n\nclass Box3 {\n    constructor(\n        public min: Vector3,\n        public max: Vector3,\n    ) {}\n\n    public contains(point: Vector3) {\n        return (\n            point.x >= this.min.x &&\n            point.x <= this.max.x &&\n            point.y >= this.min.y &&\n            point.y <= this.max.y &&\n            point.z >= this.min.z &&\n            point.z <= this.max.z\n        );\n    }\n\n    public intersects(box: Box3) {\n        return (\n            this.max.x >= box.min.x &&\n            this.min.x <= box.max.x &&\n            this.max.y >= box.min.y &&\n            this.min.y <= box.max.y &&\n            this.max.z >= box.min.z &&\n            this.min.z <= box.max.z\n        );\n    }\n\n    public intersectsBox(box: Box3) {\n        return (\n            this.max.x >= box.min.x &&\n            this.min.x <= box.max.x &&\n            this.max.y >= box.min.y &&\n            this.min.y <= box.max.y &&\n            this.max.z >= box.min.z &&\n            this.min.z <= box.max.z\n        );\n    }\n\n    public intersectsBasedOnCenter(box: Box3) {\n        const centerA = this.center();\n        const centerB = box.center();\n\n        const sizeA = this.size();\n        const sizeB = box.size();\n\n        \n        return (\n            Math.abs(centerA.x - centerB.x) <= (sizeA.x / 2 + sizeB.x / 2) &&\n            Math.abs(centerA.y - centerB.y) <= (sizeA.y / 2 + sizeB.y / 2) &&\n            Math.abs(centerA.z - centerB.z) <= (sizeA.z / 2 + sizeB.z / 2)\n        );\n    }\n\n\n    public size() {\n        return this.max.subtract(this.min);\n    }\n\n    public center() {\n        return this.min.add(this.max).divide(2);\n    }\n\n    public expand(point: Vector3) {\n        this.min = this.min.min(point);\n        this.max = this.max.max(point);\n    }\n\n    public permute() {\n        const min = this.min;\n        const max = this.max;\n        this.min = new Vector3(Math.min(min.x, max.x), Math.min(min.y, max.y), Math.min(min.z, max.z));\n        this.max = new Vector3(Math.max(min.x, max.x), Math.max(min.y, max.y), Math.max(min.z, max.z));\n    }\n    \n    public surfaceArea(): number {\n        const width = this.max.x - this.min.x;\n        const height = this.max.y - this.min.y;\n        const depth = this.max.z - this.min.z;\n        return 2 * ((width * height) + (width * depth) + (height * depth));\n    }\n}\n\nexport { Box3 };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n","import {Object3D} from \"../core/Object3D\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport {Vector4} from \"../math/Vector4\";\nimport {SplatData} from \"./SplatData\";\n\nclass SingleSplat {\n\n    private _index: number;\n    private _data: SplatData;\n\n    private _bounds: Box3;\n\n    private _defaultColor: Uint8Array;\n    \n    // private _position: Float32Array;\n    // private _rotation: Float32Array;\n    // private _scale: Float32Array;\n    // private _color: Uint8Array;\n    // private _selected: Uint8Array;\n    // private _rendered: Uint8Array;\n    //\n    // private _colorTransforms: Array<Matrix4> = [];\n    // private _colorTransformsMap: Map<number, number> = new Map();\n\n    recalculateBounds: () => void;\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    \n    constructor(index: number, data: SplatData) { //position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array,\n        this._index = index;\n        this._data = data;\n\n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n        this._defaultColor = new Uint8Array(data.colors.subarray(index * 4, index * 4 + 4));\n        \n        // this._position = position;\n        // this._rotation = rotation;\n        // this._scale = scale;\n        // this._color = color;\n        // this._selected = new Uint8Array([0]);\n        // this._rendered = new Uint8Array([1]);\n\n        this.recalculateBounds = () => {\n            const pos = this.Position;\n            const scl = this.Scale;\n            \n            this._bounds.min = new Vector3(\n                pos[0] - scl[0],\n                pos[1] - scl[1],\n                pos[2] - scl[2]\n            );\n            this._bounds.max = new Vector3(\n                pos[0] + scl[0],\n                pos[1] + scl[1],\n                pos[2] + scl[2]\n            );\n        };\n\n\n        this.translate = (translation: Vector3) => {\n            const pos = this.Position;\n            pos[0] += translation.x;\n            pos[1] += translation.y;\n            pos[2] += translation.z;\n            // this._position[0] += translation.x;\n            // this._position[1] += translation.y;\n            // this._position[2] += translation.z;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const pos = this.Position;\n\n            const x = pos[0];\n            const y = pos[1];\n            const z = pos[2];\n\n            pos[0] = R[0] * x + R[1] * y + R[2] * z;\n            pos[1] = R[3] * x + R[4] * y + R[5] * z;\n            pos[2] = R[6] * x + R[7] * y + R[8] * z;\n\n            const rot = this.Rotation;\n            const currentRotation = new Quaternion(rot[1], rot[2], rot[3], rot[0]);\n\n            const newRot = rotation.multiply(currentRotation);\n            rot[0] = newRot.w;\n            rot[1] = newRot.x;\n            rot[2] = newRot.y;\n            rot[3] = newRot.z;\n            \n            //\n            // const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            //\n            // const x = this._position[0];\n            // const y = this._position[1];\n            // const z = this._position[2];\n            //\n            // this._position[0] = R[0] * x + R[1] * y + R[2] * z;\n            // this._position[1] = R[3] * x + R[4] * y + R[5] * z;\n            // this._position[2] = R[6] * x + R[7] * y + R[8] * z;\n            //\n            // const currentRotation = new Quaternion(\n            //     this._rotation[1],\n            //     this._rotation[2],\n            //     this._rotation[3],\n            //     this._rotation[0],\n            // );\n            //\n            // const newRot = rotation.multiply(currentRotation);\n            // this._rotation[1] = newRot.x;\n            // this._rotation[2] = newRot.y;\n            // this._rotation[3] = newRot.z;\n            // this._rotation[0] = newRot.w;\n        };\n        \n        this.scale = (scale: Vector3) => {\n            const pos = this.Position;\n            const scl = this.Scale;\n\n            pos[0] *= scale.x;\n            pos[1] *= scale.y;\n            pos[2] *= scale.z;\n\n            scl[0] *= scale.x;\n            scl[1] *= scale.y;\n            scl[2] *= scale.z;\n            //\n            // this._position[0] *= scale.x;\n            // this._position[1] *= scale.y;\n            // this._position[2] *= scale.z;\n            //\n            // this._scale[0] *= scale.x;\n            // this._scale[1] *= scale.y;\n            // this._scale[2] *= scale.z;\n        };\n        \n        this.recalculateBounds();\n    }\n\n    reattach(position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array, selection: Uint8Array) {\n        this._data.positions.set(position, this._index * 3);\n        this._data.rotations.set(rotation, this._index * 4);\n        this._data.scales.set(scale, this._index * 3);\n        this._data.colors.set(color, this._index * 4);\n        this._data.selection.set(selection, this._index);\n        \n        // this._position = position;\n        // this._rotation = rotation;\n        // this._scale = scale;\n        // this._color = color;\n        // this._selected = selection;\n    }\n\n    get Selected() {\n        return this._data.selection[this._index];\n    }\n\n    set Selected(value: number) {\n        this._data.selection[this._index] = value;\n    }\n    \n    // Select(select: boolean) {\n    //     this._selected[0] = select ? 1 : 0;        \n    // }\n    //\n    // get Selection() {\n    //     return this._selected;\n    // }\n\n    get Rendered() {\n        return this._data.rendered[this._index];\n    }\n\n    set Rendered(value: number) {\n        this._data.rendered[this._index] = value;\n    }\n\n    get Position() {\n        const i = this._index * 3;\n        return this._data.positions.subarray(i, i + 3);\n    }\n\n    get Rotation() {\n        const i = this._index * 4;\n        return this._data.rotations.subarray(i, i + 4);\n    }\n\n    get Scale() {\n        const i = this._index * 3;\n        return this._data.scales.subarray(i, i + 3);\n    }\n    \n    set Color(colorVector: Uint8Array) {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(colorVector, colorIndex);\n    }\n    get Color() {\n        const i = this._index * 4;\n        return this._data.colors.subarray(i, i + 4);\n    }\n    \n    // Render(render: boolean) {\n    //     this._rendered[0] = render ? 1 : 0;\n    // }\n    //\n    // get Rendered() {\n    //     return this._rendered;\n    // }\n    \n    ResetColor() {\n        const colorIndex = this._index * 4;\n        this._data.colors.set(this._defaultColor, colorIndex);\n    }\n    \n    get bounds() {\n        return this._bounds;\n    }\n    \n    get PositionVec3() {\n        const pos = this.Position;\n        return new Vector3(pos[0], pos[1], pos[2]);\n    }\n    \n    // get Position() {\n    //     return this._position;\n    // }\n    //\n    // get Scale() {\n    //    return this._scale; \n    // }\n    \n    get ScaleVec3() {\n        const scale = this.Scale;\n        return new Vector3(scale[0], scale[1], scale[2]);\n    }\n    \n    // get Color() {\n    //     return this._color;\n    // }\n    //\n    // get Rotation() {\n    //     return this._rotation;\n    // }\n}\n\nexport { SingleSplat };","class Constants {\n    static readonly BYTE_OFFSET_FLOAT: number = 4;\n    static readonly BYTE_OFFSET_DOUBLE: number = 8;\n\n    static readonly BYTE_OFFSET_INT: number = 4;\n}\n\nexport { Constants }","import { Box3 } from \"../../math/Box3\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Node } from \"./Node\";\nimport {Frustum} from \"../../math/Frustum\";\n\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\n\nexport class OctreeIterator implements Iterator<Node>, Iterable<Node> {\n    \n    private root: Node;\n    \n    private region: Box3 | Frustum | null;\n    \n    private result!: IteratorResult<Node>;\n    \n    private trace!: Node[];\n    \n    private indices!: number[];\n    \n    constructor(root: Node, region: Box3 | Frustum | null = null) {\n        this.root = root;\n        this.region = region;\n        this.reset();\n    }\n    \n    reset() {\n        const root = this.root;\n        \n        this.trace = [];\n        this.indices = [];\n        \n        if(root !== null) {\n            b.min = root.min;\n            b.max = root.max;\n            \n            if(this.region === null || this.region.intersectsBox(b)) {\n                this.trace.push(root);\n                this.indices.push(0);\n            }\n        }\n        \n        this.result = {\n            done: false\n        } as IteratorResult<Node>;\n        \n        return this;\n    }\n\n    next(): IteratorResult<Node> {\n        const region = this.region;\n        const indices = this.indices;\n        const trace = this.trace;\n        \n        let octant = null;\n        let depth = trace.length - 1;\n        \n        while(octant === null && depth >= 0) {\n            const index = indices[depth]++;\n            const children = trace[depth].children;\n            \n            if(index < 8) {\n                if(children !== undefined && children !== null) {\n                    const child = children[index];\n                    \n                    if(region !== null) {\n                        b.min = child.min;\n                        b.max = child.max;\n                        \n                        if(!region.intersectsBox(b)) {\n                            continue;\n                        }\n                    }\n                    \n                    trace.push(child);\n                    indices.push(0);\n                    \n                    ++depth;\n                } else {\n                    octant = trace.pop();\n                    indices.pop();\n                }\n            } else {\n                trace.pop();\n                indices.pop();\n                \n                --depth;\n            }\n        }\n        \n        this.result.value = octant;\n        this.result.done = (octant === null);\n        \n        return this.result;\n    }\n    \n    [Symbol.iterator](): Iterator<Node> {\n        return this;\n    }\n}\n","import {Vector3} from \"./Vector3\";\nimport {Box3} from \"./Box3\";\n\nconst _vector:Vector3 = new Vector3();\nconst _segCenter:Vector3 = new Vector3();\nconst _segDir:Vector3 = new Vector3();\nconst _diff:Vector3 = new Vector3();\n\nconst _edge1:Vector3 = new Vector3();\nconst _edge2:Vector3 = new Vector3();\nconst _normal:Vector3 = new Vector3();\nclass NewRay {\n    public origin: Vector3;\n    public direction: Vector3;\n    \n    constructor(origin:Vector3 = new Vector3(), direction:Vector3 = new Vector3(0, 0, -1)) {\n        this.origin = origin;\n        this.direction = direction;\n    }\n    \n    set(origin:Vector3, direction:Vector3) {\n        this.origin.copy( origin );\n        this.direction.copy( direction );\n        \n        return this;\n    }\n    \n    copy( ray: NewRay ) {\n        this.origin.copy( ray.origin );\n        this.direction.copy( ray.direction );\n\n        return this;\n    }\n\n    at( t: number, target:Vector3 ) {\n\n        return target.copy( this.origin ).addScaledVector( this.direction, t );\n\n    }\n\n    lookAt( v:Vector3 ) {\n\n        this.direction.copy( v ).sub( this.origin ).normalize();\n\n        return this;\n\n    }\n\n    recast( t:number ) {\n\n        this.origin.copy( this.at( t, _vector ) );\n\n        return this;\n\n    }\n\n    closestPointToPoint( point:Vector3, target:Vector3 ) {\n\n        target.subVectors( point, this.origin );\n\n        const directionDistance = target.dot( this.direction );\n\n        if ( directionDistance < 0 ) {\n\n            return target.copy( this.origin );\n\n        }\n\n        return target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n    }\n\n    distanceToPoint( point:Vector3 ) {\n\n        return Math.sqrt( this.distanceSqToPoint( point ) );\n\n    }\n\n    distanceSqToPoint( point:Vector3 ) {\n\n        const directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n        // point behind the ray\n\n        if ( directionDistance < 0 ) {\n\n            return this.origin.distanceToSquared( point );\n\n        }\n\n        _vector.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n        return _vector.distanceToSquared( point );\n\n    }\n\n    intersectBox( box: Box3, target:Vector3 ) {\n\n        let tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n        const invdirx = 1 / this.direction.x,\n            invdiry = 1 / this.direction.y,\n            invdirz = 1 / this.direction.z;\n\n        const origin = this.origin;\n\n        if ( invdirx >= 0 ) {\n\n            tmin = ( box.min.x - origin.x ) * invdirx;\n            tmax = ( box.max.x - origin.x ) * invdirx;\n\n        } else {\n\n            tmin = ( box.max.x - origin.x ) * invdirx;\n            tmax = ( box.min.x - origin.x ) * invdirx;\n\n        }\n\n        if ( invdiry >= 0 ) {\n\n            tymin = ( box.min.y - origin.y ) * invdiry;\n            tymax = ( box.max.y - origin.y ) * invdiry;\n\n        } else {\n\n            tymin = ( box.max.y - origin.y ) * invdiry;\n            tymax = ( box.min.y - origin.y ) * invdiry;\n\n        }\n\n        if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n        if ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n        if ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n        if ( invdirz >= 0 ) {\n\n            tzmin = ( box.min.z - origin.z ) * invdirz;\n            tzmax = ( box.max.z - origin.z ) * invdirz;\n\n        } else {\n\n            tzmin = ( box.max.z - origin.z ) * invdirz;\n            tzmax = ( box.min.z - origin.z ) * invdirz;\n\n        }\n\n        if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n        if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n        if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n        //return point closest to the ray (positive side)\n\n        if ( tmax < 0 ) return null;\n\n        return this.at( tmin >= 0 ? tmin : tmax, target );\n\n    }\n\n    intersectsBox( box:Box3 ) {\n\n        return this.intersectBox( box, _vector ) !== null;\n\n    }\n\n    equals( ray: NewRay ) {\n\n        return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n    }\n\n    clone() {\n        const Constructor = this.constructor as new () => this;\n        return new Constructor().copy(this);\n    }\n}\n\nexport { NewRay }","import { Node } from \"../core/Node.js\";\nimport { RaycastingFlags } from \"./RaycastingFlags.js\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Box3 } from \"../../math/Box3\";\nimport {NewRay} from \"../../math/NewRay\";\n\nconst v = new Vector3();\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\nconst d = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\nconst r = new NewRay();\n\n\nexport function intersectOctree(octree: Node, ray: NewRay, flags: RaycastingFlags): number[] | null {\n\n    // Translate the octant extents to the scene origin.\n    const min = b.min.set(0, 0, 0);\n    const max = b.max.subVectors(octree.max, octree.min);\n\n    const dimensions = octree.getDimensions(d.min);\n    const halfDimensions = d.max.copy(dimensions).multiply(0.5);\n\n    const origin = r.origin.copy(ray.origin);\n    const direction = r.direction.copy(ray.direction);\n\n    // Translate the ray to the center of the octant.\n    origin.sub(octree.getCenter(v)).add(halfDimensions);\n\n    // Reset all flags.\n    flags.value = 0;\n\n    // Handle rays with negative directions and prevent division by zero.\n    if(direction.x < 0.0) {\n\n        origin.x = dimensions.x - origin.x;\n        direction.x = -direction.x;\n        flags.value |= 4;\n\n    } else if(direction.x === 0.0) {\n\n        direction.x = Number.EPSILON;\n\n    }\n\n    if(direction.y < 0.0) {\n\n        origin.y = dimensions.y - origin.y;\n        direction.y = -direction.y;\n        flags.value |= 2;\n\n    } else if(direction.y === 0.0) {\n\n        direction.y = Number.EPSILON;\n\n    }\n\n    if(direction.z < 0.0) {\n\n        origin.z = dimensions.z - origin.z;\n        direction.z = -direction.z;\n        flags.value |= 1;\n\n    } else if(direction.z === 0.0) {\n\n        direction.z = Number.EPSILON;\n\n    }\n\n    // Improve IEEE double stability.\n    const invDirX = 1.0 / direction.x;\n    const invDirY = 1.0 / direction.y;\n    const invDirZ = 1.0 / direction.z;\n\n    // Project the ray to the octant's boundaries.\n    const tx0 = (min.x - origin.x) * invDirX;\n    const tx1 = (max.x - origin.x) * invDirX;\n    const ty0 = (min.y - origin.y) * invDirY;\n    const ty1 = (max.y - origin.y) * invDirY;\n    const tz0 = (min.z - origin.z) * invDirZ;\n    const tz1 = (max.z - origin.z) * invDirZ;\n\n    // Check if the ray hits the octree.\n    const hit = (Math.max(tx0, ty0, tz0) < Math.min(tx1, ty1, tz1));\n    return hit ? [tx0, ty0, tz0, tx1, ty1, tz1] : null;\n\n}","import { RaycastingFlags } from \"./RaycastingFlags\";\nimport { Node } from \"./Node\";\nimport {Ray} from \"../../math/Ray\";\nimport { intersectOctree } from \"./intersectOctree\";\nimport {NewRay} from \"../../math/NewRay\";\n\nconst flags = new RaycastingFlags();\n\nconst octantTable = [\n\n    new Uint8Array([4, 2, 1]),\n    new Uint8Array([5, 3, 8]),\n    new Uint8Array([6, 8, 3]),\n    new Uint8Array([7, 8, 8]),\n    new Uint8Array([8, 6, 5]),\n    new Uint8Array([8, 7, 8]),\n    new Uint8Array([8, 8, 7]),\n    new Uint8Array([8, 8, 8])\n\n];\n\nexport function findNextOctant(currentOctant: number, tx1: number, ty1: number, tz1: number): number {\n\n    let min: number;\n    let exit: number;\n\n    // Find the exit plane.\n    if(tx1 < ty1) {\n\n        min = tx1;\n        exit = 0; // YZ-plane.\n\n    } else {\n\n        min = ty1;\n        exit = 1; // XZ-plane.\n\n    }\n\n    if(tz1 < min) {\n\n        exit = 2; // XY-plane.\n\n    }\n\n    return octantTable[currentOctant][exit];\n\n}\n\nfunction findEntryOctant(tx0: number, ty0: number, tz0: number, txm: number, tym: number, tzm: number): number {\n\n    let entry = 0;\n\n    // Find the entry plane.\n    if(tx0 > ty0 && tx0 > tz0) {\n\n        // YZ-plane.\n        if(tym < tx0) {\n\n            entry |= 2;\n\n        }\n\n        if(tzm < tx0) {\n\n            entry |= 1;\n\n        }\n\n    } else if(ty0 > tz0) {\n\n        // XZ-plane.\n        if(txm < ty0) {\n\n            entry |= 4;\n\n        }\n\n        if(tzm < ty0) {\n\n            entry |= 1;\n\n        }\n\n    } else {\n\n        // XY-plane.\n        if(txm < tz0) {\n\n            entry |= 4;\n\n        }\n\n        if(tym < tz0) {\n\n            entry |= 2;\n\n        }\n\n    }\n\n    return entry;\n\n}\n\nfunction raycastOctant(node: Node, tx0: number, ty0: number, tz0: number, tx1: number, ty1: number, tz1: number, result: Node[]): void {\n    if(tx1 >= 0.0 && ty1 >= 0.0 && tz1 >= 0.0) {\n\n        const c = node.children;\n\n        if(c === null || c === undefined) {\n\n            // Leaf.\n            result.push(node);\n\n        } else {\n\n            // Calculate mean values.\n            const txm = 0.5 * (tx0 + tx1);\n            const tym = 0.5 * (ty0 + ty1);\n            const tzm = 0.5 * (tz0 + tz1);\n\n            const f = flags.value;\n            let currentOctant = findEntryOctant(tx0, ty0, tz0, txm, tym, tzm);\n\n            /* The possibilities for the next node are passed in the same respective\n            order as the t-values. Hence, if the first value is found to be the\n            greatest, the fourth one will be returned. If the second value is the\n            greatest, the fifth one will be returned, etc. */\n\n            while(currentOctant < 8) {\n\n                switch(currentOctant) {\n\n                    case 0:\n                        raycastOctant(c[f], tx0, ty0, tz0, txm, tym, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, txm, tym, tzm);\n                        break;\n\n                    case 1:\n                        raycastOctant(c[f ^ 1], tx0, ty0, tzm, txm, tym, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, txm, tym, tz1);\n                        break;\n\n                    case 2:\n                        raycastOctant(c[f ^ 2], tx0, tym, tz0, txm, ty1, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, txm, ty1, tzm);\n                        break;\n\n                    case 3:\n                        raycastOctant(c[f ^ 3], tx0, tym, tzm, txm, ty1, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, txm, ty1, tz1);\n                        break;\n\n                    case 4:\n                        raycastOctant(c[f ^ 4], txm, ty0, tz0, tx1, tym, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, tym, tzm);\n                        break;\n\n                    case 5:\n                        raycastOctant(c[f ^ 5], txm, ty0, tzm, tx1, tym, tz1, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, tym, tz1);\n                        break;\n\n                    case 6:\n                        raycastOctant(c[f ^ 6], txm, tym, tz0, tx1, ty1, tzm, result);\n                        currentOctant = findNextOctant(currentOctant, tx1, ty1, tzm);\n                        break;\n\n                    case 7:\n                        raycastOctant(c[f ^ 7], txm, tym, tzm, tx1, ty1, tz1, result);\n                        // Far top right octant. No other octants can be reached from here.\n                        currentOctant = 8;\n                        break;\n\n                }\n\n            }\n\n        }\n\n    }\n}\n\nexport class OctreeRaycaster {\n    \n    static intersectOctree(node: Node, ray: NewRay): Node[] {\n\n        const result: Node[] = [];\n        const t = intersectOctree(node, ray, flags);\n\n        if(t !== null) {\n\n            raycastOctant(node, t[0], t[1], t[2], t[3], t[4], t[5], result);\n\n        }\n\n        return result;\n\n    }\n\n}","export class RaycastingFlags {\n    \n    value: number;\n\n    constructor() {\n\n        this.value = 0;\n\n    }\n\n}","import { Tree } from \"./core/Tree\";\nimport { Node } from \"./core/Node\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Box3 } from \"../math/Box3\";\nimport { OctreeIterator } from \"./core/OctreeIterator\";\nimport {Raycaster} from \"../utils/Raycaster\";\nimport {OctreeRaycaster} from \"./core/OctreeRaycaster\";\nimport {Frustum} from \"../math/Frustum\";\n\nconst b = new Box3(\n    new Vector3(Infinity, Infinity, Infinity),\n    new Vector3(-Infinity, -Infinity, -Infinity),\n);\n\nfunction getDepth(node: Node): number {\n    const children = node.children;\n    \n    let result = 0;\n    \n    if(children !== undefined && children !== null) {\n        for(let i = 0; i < children.length; ++i) {\n            const d = 1 + getDepth(children[i]);\n            \n            if(d > result) {\n                result = d;\n            }\n        }\n    }\n    \n    return result;\n}\n\nfunction cull(node: Node, region: Box3 | Frustum, result: Node[]): void {\n    const children = node.children;\n    \n    b.min = node.min;\n    b.max = node.max;\n    \n    if(region.intersectsBox(b)) {\n        if(children !== undefined && children !== null) {\n            for(let i = 0; i < children.length; ++i) {\n                cull(children[i], region, result);\n            }\n        } else {\n            result.push(node);\n        }\n    }\n}\n\nfunction findNodesByLevel(node: Node, level: number, depth: number, result: Node[]): void {\n    const children = node.children;\n    \n    if(depth === level) {\n        result.push(node);\n    } else if(children !== undefined && children !== null) {\n        \n        ++depth;\n        \n        for(let i = 0; i < children.length; ++i) {\n            findNodesByLevel(children[i], level, depth, result)\n        }\n    }\n}\n\nexport class Octree implements Tree, Iterable<Node> {\n    protected root: Node;\n    \n    constructor(root: Node) {\n        this.root = root;\n    }\n    \n    get min(): Vector3 {\n        return this.root.min;\n    }\n    \n    get max(): Vector3 {\n        return this.root.max;\n    }\n    \n    get children(): Node[] | null {\n        return this.root.children || null;\n    }\n    \n    getCenter(result: Vector3): Vector3 {\n        return this.root.getCenter(result);\n    }\n    \n    getDimensions(result: Vector3): Vector3 {\n        return this.root.getDimensions(result);\n    }\n    \n    cull(region: Box3 | Frustum): Node[] {\n        const result: Node[] = []\n        cull(this.root, region, result);\n        return result;\n    }\n    \n    getDepth(): number {\n        return getDepth(this.root);\n    }\n    \n    findNodesByLevel(level: number): Node[] {\n        const result: Node[] = [];\n        findNodesByLevel(this.root, level, 0, result);\n        return result;\n    }\n    \n    getIntersectingNodes(raycaster: Raycaster): Node[] {\n        return OctreeRaycaster.intersectOctree(this.root, raycaster.ray);\n    }\n    \n    leaves(region: Box3 | Frustum | null = null): Iterator<Node> {\n        return new OctreeIterator(this.root, region);\n    }\n    \n    [Symbol.iterator](): Iterator<Node> {\n        return new OctreeIterator(this.root);\n    }\n}","/**\n * A binary pattern that describes the standard octant layout:\n *\n * ```text\n *    3____7\n *  2/___6/|\n *  | 1__|_5\n *  0/___4/\n * ```\n *\n * This common layout is crucial for positional assumptions.\n */\n\nexport const layout = [\n\n    new Uint8Array([0, 0, 0]),\n    new Uint8Array([0, 0, 1]),\n    new Uint8Array([0, 1, 0]),\n    new Uint8Array([0, 1, 1]),\n\n    new Uint8Array([1, 0, 0]),\n    new Uint8Array([1, 0, 1]),\n    new Uint8Array([1, 1, 0]),\n    new Uint8Array([1, 1, 1])\n\n];","import {Node} from \"./Node\";\nimport {DataContainer} from \"./DataContainer\";\nimport {Vector3} from \"../../math/Vector3\";\nimport {layout} from \"./layout\";\n\nconst c = new Vector3();\nexport class Octant<T> implements Node, DataContainer<T> {\n    min: Vector3;\n    max: Vector3;\n    children: Node[] | null;\n    data: T | null;\n    \n    constructor(min = new Vector3(), max = new Vector3()) {\n        this.min = min;\n        this.max = max;\n        this.children = null;\n        this.data = null;\n    }\n    \n    getCenter(result: Vector3): Vector3 {\n        return result.addVectors(this.min, this.max).multiply(0.5)\n    }\n    \n    getDimensions(result: Vector3): Vector3 {\n        return result.subVectors(this.max, this.min);\n    }\n    \n    split(): void {\n        const min = this.min;\n        const max = this.max;\n        const mid = this.getCenter(c);\n        \n        const children: Node[] = this.children = [];\n        \n        for(let i = 0; i < 8; ++i) {\n            const combination = layout[i];\n            const child = new (<typeof Octant> this.constructor)();\n            \n            child.min.set(\n                (combination[0] === 0) ? min.x : mid.x,\n                (combination[1] === 0) ? min.y : mid.y,\n                (combination[2] === 0) ? min.z : mid.z\n            );\n            \n            child.max.set(\n                (combination[0] === 0) ? mid.x : max.x,\n                (combination[1] === 0) ? mid.y : max.y,\n                (combination[2] === 0) ? mid.z : max.z\n            );\n            \n            children[i] = child;\n        }\n    }\n}","import { DataContainer } from \"../core/DataContainer\";\nimport { Vector3 } from \"../../math/Vector3\";\n\nexport class PointContainer<T> implements DataContainer<T> {\n\n    data: T | null;\n    \n\n    point: Vector3 | null;\n\n\n    distance: number;\n    \n    constructor(point: Vector3 | null = null, data: T | null = null, distance = 0.0) {\n\n        this.point = point;\n        this.data = data;\n        this.distance = distance;\n\n    }\n\n}","import { PointContainer } from \"./PointContainer\";\nimport { Vector3 } from \"../../math/Vector3\";\n\nexport class RayPointIntersection<T> extends PointContainer<T> {\n    \n    distanceToRay: number;\n    \n\n    constructor(distanceToOrigin: number, distanceToRay: number, point: Vector3, data: T | null = null) {\n\n        super(point, data, distanceToOrigin);\n        this.distanceToRay = distanceToRay;\n\n    }\n\n}","import { Vector3 } from \"../../math/Vector3\";\nimport { Raycaster } from \"../../utils/Raycaster\";\nimport { RayPointIntersection } from \"./RayPointIntersection\";\n\nexport class PointData<T> {\n    points: Vector3[];\n    \n    data: T[];\n\n    constructor() {\n        this.points = [];\n        this.data = [];\n    }\n    \n    testPoints(raycaster: Raycaster, result: RayPointIntersection<T>[]): void {\n        const threshold = (raycaster.params.Points !== undefined) ? raycaster.params.Points.threshold : 0;\n        const thresholdSq = threshold * threshold;\n        const ray = raycaster.ray;\n        \n        const points = this.points;\n        const data = this.data;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            const point = points[i];\n            const distanceToRaySq = ray.distanceSqToPoint(point);\n\n            if(distanceToRaySq < thresholdSq) {\n\n                const closestPoint = ray.closestPointToPoint(point, new Vector3());\n                const distance = ray.origin.distanceTo(closestPoint);\n\n                if(distance >= raycaster.near && distance <= raycaster.far) {\n\n                    result.push(new RayPointIntersection<T>(distance, Math.sqrt(distanceToRaySq), closestPoint, data[i]));\n\n                }\n\n            }\n\n        }\n    }\n}","import {Vector3} from \"../../math/Vector3\";\nimport {Octant} from \"../core/Octant\";\nimport {PointData} from \"./PointData\";\n\nconst p = new Vector3();\n\nexport class PointOctant<T> extends Octant<PointData<T>> {\n    constructor(min: Vector3, max: Vector3) {\n        super(min, max);\n    }\n\n    distanceToSquared(point: Vector3): number {\n\n        const clampedPoint = p.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).lengthSq();\n\n    }\n\n    distanceToCenterSquared(point: Vector3): number {\n\n        const center = this.getCenter(p);\n\n        const dx = point.x - center.x;\n        const dy = point.y - center.x;\n        const dz = point.z - center.z;\n\n        return dx * dx + dy * dy + dz * dz;\n\n    }\n\n    contains(point: Vector3, bias: number): boolean {\n\n        const min = this.min;\n        const max = this.max;\n\n        return (\n            point.x >= min.x - bias &&\n            point.y >= min.y - bias &&\n            point.z >= min.z - bias &&\n            point.x <= max.x + bias &&\n            point.y <= max.y + bias &&\n            point.z <= max.z + bias\n        );\n    }\n\n    redistribute(bias: number): void {\n\n        const children = this.children;\n        const pointData = this.data;\n\n        if(children !== null && pointData !== null) {\n\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, il = points.length; i < il; ++i) {\n\n                const point = points[i];\n                const entry = data[i];\n\n                for(let j = 0, jl = children.length; j < jl; ++j) {\n\n                    const child = children[j] as PointOctant<T>;\n\n                    if(child.contains(point, bias)) {\n\n                        if(child.data === null) {\n\n                            child.data = new PointData<T>();\n\n                        }\n\n                        const childData = child.data;\n                        childData.points.push(point);\n                        childData.data.push(entry);\n\n                        break;\n\n                    }\n\n                }\n\n            }\n\n            this.data = null;\n\n        }\n\n    }\n\n    merge(): void {\n\n        const children = this.children;\n\n        if(children !== null) {\n\n            const pointData = new PointData<T>();\n\n            for(let i = 0, l = children.length; i < l; ++i) {\n\n                const child = children[i] as PointOctant<T>;\n                const childData = child.data;\n\n                if(childData !== null) {\n\n                    pointData.points = pointData.points.concat(childData.points);\n                    pointData.data = pointData.data.concat(childData.data);\n\n                }\n\n            }\n\n            this.children = null;\n            this.data = pointData;\n\n        }\n\n    }\n\n}","import { Octree } from \"../Octree\";\nimport {Vector3} from \"../../math/Vector3\";\nimport {PointOctant} from \"./PointOctant\";\nimport {PointContainer} from \"./PointContainer\";\nimport {RayPointIntersection} from \"./RayPointIntersection\";\nimport {Raycaster} from \"../../utils/Raycaster\";\nimport {PointData} from \"./PointData\";\n\nfunction countPoints<T>(octant: PointOctant<T>): number {\n\n    const children = octant.children;\n    let result = 0;\n\n    if(children !== null) {\n\n        for(let i = 0, l = children.length; i < l; ++i) {\n\n            result += countPoints(children[i] as PointOctant<T>);\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        result = pointData.points.length;\n\n    }\n\n    return result;\n\n}\n\nfunction set<T>(point: Vector3, data: T, octree: PointOctree<T>, octant: PointOctant<T> | null, depth: number): boolean {\n\n    let exists = false;\n    let done = false;\n\n    if(octant !== null && octant.contains(point, octree.getBias())) {\n\n        let children = octant.children;\n\n        if(children === null) {\n\n            let index = 0;\n\n            if(octant.data === null) {\n\n                octant.data = new PointData<T>();\n\n            } else {\n\n                const pointData = octant.data;\n                const points = pointData.points;\n\n                for(let i = 0, l = points.length; !exists && i < l; ++i) {\n\n                    exists = points[i].equals(point);\n                    index = i;\n\n                }\n\n            }\n\n            const pointData = octant.data;\n\n            if(exists) {\n\n                pointData.data[index] = data;\n                done = true;\n\n            } else if(pointData.points.length < octree.getMaxPoints() || depth === octree.getMaxDepth()) {\n\n                pointData.points.push(point.clone());\n                pointData.data.push(data);\n                done = true;\n\n            } else {\n\n                octant.split();\n                octant.redistribute(octree.getBias());\n                children = octant.children;\n\n            }\n\n        }\n\n        if(children !== null) {\n\n            ++depth;\n\n            for(let i = 0, l = children.length; !done && i < l; ++i) {\n\n                done = set(point, data, octree, children[i] as PointOctant<T>, depth);\n\n            }\n\n        }\n\n    }\n\n    return done;\n}\n\nfunction remove<T>(point: Vector3, octree: PointOctree<T>, octant: PointOctant<T>,\n                   parent: PointOctant<T> | null): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(children !== null) {\n\n            for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                result = remove(point, octree, children[i] as PointOctant<T>, octant);\n\n            }\n\n        } else if(octant.data !== null) {\n\n            const pointData = octant.data;\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, l = points.length; i < l; ++i) {\n\n                if(points[i].equals(point)) {\n\n                    const last = l - 1;\n                    result = data[i];\n\n                    // If the point is NOT the last one in the array:\n                    if(i < last) {\n\n                        // Overwrite with the last point and data entry.\n                        points[i] = points[last];\n                        data[i] = data[last];\n\n                    }\n\n                    // Drop the last entry.\n                    points.pop();\n                    data.pop();\n\n                    if(parent !== null && countPoints(parent) <= octree.getMaxPoints()) {\n\n                        parent.merge();\n\n                    }\n\n                    break;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    return result;\n}\n\nfunction get<T>(point: Vector3, octree: PointOctree<T>, octant: PointOctant<T>): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(children !== null) {\n\n            for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                result = get(point, octree, children[i] as PointOctant<T>);\n\n            }\n\n        } else if(octant.data !== null) {\n\n            const pointData = octant.data;\n            const points = pointData.points;\n            const data = pointData.data;\n\n            for(let i = 0, l = points.length; result === null && i < l; ++i) {\n\n                if(point.equals(points[i])) {\n\n                    result = data[i];\n\n                }\n\n            }\n\n        }\n\n    }\n\n    return result;\n}\n\nfunction move<T>(point: Vector3, position: Vector3, octree: PointOctree<T>,\n                 octant: PointOctant<T>, parent: PointOctant<T> | null, depth: number): T | null {\n\n    const children = octant.children;\n    let result = null;\n\n    if(octant.contains(point, octree.getBias())) {\n\n        if(octant.contains(position, octree.getBias())) {\n\n            // The point and the new position both fall into the current octant.\n            if(children !== null) {\n\n                ++depth;\n\n                for(let i = 0, l = children.length; result === null && i < l; ++i) {\n\n                    const child = children[i] as PointOctant<T>;\n                    result = move(point, position, octree, child, octant, depth);\n\n                }\n\n            } else if(octant.data !== null) {\n\n                // No divergence - the point can be updated in place.\n                const pointData = octant.data;\n                const points = pointData.points;\n                const data = pointData.data;\n\n                for(let i = 0, l = points.length; i < l; ++i) {\n\n                    if(point.equals(points[i])) {\n\n                        // The point exists! Update its position.\n                        points[i].copy(position);\n                        result = data[i];\n                        break;\n\n                    }\n\n                }\n\n            }\n\n        } else {\n\n            // Retrieve the point and remove it.\n            result = remove(point, octree, octant, parent);\n\n            // Go back to the parent octant and add the updated point.\n            set(position, result, octree, parent, depth - 1);\n\n        }\n\n    }\n\n    return result;\n\n}\n\n\nfunction findNearestPoint<T>(point: Vector3, maxDistance: number,\n                             skipSelf: boolean, octant: PointOctant<T>): PointContainer<T> | null {\n\n    interface SortableOctant<T> {\n\n        octant: PointOctant<T>;\n        distance: number;\n\n    }\n\n    let result = null;\n    let bestDistance = maxDistance;\n\n    if(octant.children !== null) {\n\n        // Sort the children: smallest distance to the point first, ASC.\n        const sortedChildren: SortableOctant<T>[] = octant.children.map((child) => {\n\n            // Precompute distances.\n            const octant = child as PointOctant<T>;\n\n            return {\n                distance: octant.distanceToCenterSquared(point),\n                octant\n            };\n\n        }).sort((a, b) => a.distance - b.distance);\n\n        // Traverse from closest to furthest.\n        for(let i = 0, l = sortedChildren.length; i < l; ++i) {\n\n            const child = sortedChildren[i].octant;\n\n            if(child.contains(point, bestDistance)) {\n\n                const intermediateResult = findNearestPoint(\n                    point, bestDistance, skipSelf, child\n                );\n\n                if(intermediateResult !== null) {\n\n                    bestDistance = intermediateResult.distance;\n                    result = intermediateResult;\n\n                    if(bestDistance === 0.0) {\n\n                        break;\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        const points = pointData.points;\n        const data = pointData.data;\n\n        let index = -1;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            if(points[i].equals(point)) {\n\n                if(!skipSelf) {\n\n                    bestDistance = 0.0;\n                    index = i;\n                    break;\n\n                }\n\n            } else {\n\n                const distance = point.distanceTo(points[i]);\n\n                if(distance < bestDistance) {\n\n                    bestDistance = distance;\n                    index = i;\n\n                }\n\n            }\n\n        }\n\n        if(index >= 0) {\n\n            result = new PointContainer(points[index], data[index], bestDistance);\n\n        }\n\n    }\n\n    return result;\n\n}\n\nfunction findPoints<T>(point: Vector3, radius: number, skipSelf: boolean,\n                       octant: PointOctant<T>, result: PointContainer<T>[]): void {\n\n    const children = octant.children;\n\n    if(children !== null) {\n\n        for(let i = 0, l = children.length; i < l; ++i) {\n\n            const child = children[i] as PointOctant<T>;\n\n            if(child.contains(point, radius)) {\n\n                findPoints(point, radius, skipSelf, child, result);\n\n            }\n\n        }\n\n    } else if(octant.data !== null) {\n\n        const pointData = octant.data;\n        const points = pointData.points;\n        const data = pointData.data;\n\n        for(let i = 0, l = points.length; i < l; ++i) {\n\n            const p = points[i];\n\n            if(p.equals(point)) {\n\n                if(!skipSelf) {\n\n                    result.push(new PointContainer(p.clone(), data[i], 0.0));\n\n                }\n\n            } else {\n\n                const rSq = radius * radius;\n                const dSq = p.distanceToSquared(point);\n\n                if(dSq <= rSq) {\n\n                    result.push(new PointContainer(p.clone(), data[i], Math.sqrt(dSq)));\n\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n\nexport class PointOctree<T> extends Octree {\n    private bias: number;\n    \n    private maxPoints: number;\n    \n    private maxDepth: number;\n    \n    constructor(min: Vector3, max: Vector3, bias = 0.0, maxPoints = 8, maxDepth = 8) {\n        super(new PointOctant<T>(min, max));\n        \n        this.bias = Math.max(0.0, bias);\n        this.maxPoints = Math.max(1, Math.round(maxPoints));\n        this.maxDepth = Math.max(0, Math.round(maxDepth));\n    }\n    \n    getBias(): number {\n        return this.bias;\n    }\n    \n    getMaxPoints(): number {\n        return this.maxPoints;\n    }\n\n    getMaxDepth(): number {\n        return this.maxDepth;\n    }\n\n    countPoints(octant: PointOctant<T> = this.root as PointOctant<T>): number {\n        return countPoints(octant);\n    }\n\n    set(point: Vector3, data: T): boolean {\n        return set(point, data, this, this.root as PointOctant<T>, 0);\n    }\n\n    remove(point: Vector3): T | null {\n        return remove(point, this, this.root as PointOctant<T>, null);\n    }\n\n    get(point: Vector3): T | null {\n        return get(point, this, this.root as PointOctant<T>);\n    }\n    \n    move(point: Vector3, position: Vector3): T | null {\n        return move(point, position, this, this.root as PointOctant<T>, null, 0);\n    }\n\n    findNearestPoint(point: Vector3, maxDistance = Number.POSITIVE_INFINITY, skipSelf = false): PointContainer<T> | null {\n        const root = this.root as PointOctant<T>;\n        const result = findNearestPoint(point, maxDistance, skipSelf, root);\n\n        if(result !== null && result.point !== null) {\n\n            result.point = result.point.clone();\n\n        }\n\n        return result;\n    }\n\n    findPoints(point: Vector3, radius: number, skipSelf = false): PointContainer<T>[] {\n        const result: PointContainer<T>[] = [];\n        findPoints(point, radius, skipSelf, this.root as PointOctant<T>, result);\n        return result;\n    }\n\n    raycast(raycaster: Raycaster): RayPointIntersection<T>[] {\n\n        const result: RayPointIntersection<T>[] = [];\n        const octants = super.getIntersectingNodes(raycaster) as PointOctant<T>[];\n\n        if(octants.length > 0) {\n\n            for(let i = 0, l = octants.length; i < l; ++i) {\n\n                const octant = octants[i];\n                const pointData = octant.data;\n\n                if(pointData !== null) {\n\n                    pointData.testPoints(raycaster, result);\n\n                }\n\n            }\n\n        }\n\n        return result;\n    }\n} ","import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Converter } from \"../utils/Converter\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\nimport { SingleSplat } from \"./SingleSplat\"\n\nimport { Constants } from \"../utils/Constants\";\nimport {PointOctree} from \"../Octree/points/PointOctree\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n    public renderNumberChanged: boolean = false;\n    public colorTransformChanged: boolean = false;\n\n    private _splats: Array<SingleSplat> = [];\n    private _data: SplatData;\n    private _selected: boolean = false;\n    private _colorTransforms: Array<Matrix4> = [];\n    private _colorTransformsMap: Map<number, number> = new Map();\n    private _bounds: Box3;\n    \n    private _numberOfSplats: number;\n    private _numberOfRenderedSplats: number;\n\n    private _octree: PointOctree<SingleSplat> | undefined;\n\n    recalculateBounds: () => void;\n    createSplatsData: () => void;\n    applySelection: () => void;\n    applyRendering: () => void;\n    createOctree: () => void;\n    \n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n        \n        this._splats = new Array<SingleSplat>();\n        this._data = splat || new SplatData();\n        \n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n\n        this._numberOfSplats = 0;\n        this._numberOfRenderedSplats = 0\n        \n        this.createSplatsData = () => {\n            \n            if(splat != undefined)\n            {\n                this._numberOfSplats = splat.vertexCount;\n                this._numberOfRenderedSplats = splat.vertexCount;\n\n                console.time(\"Splats creation\");\n                for (let i = 0; i < splat.vertexCount; i++) {\n                    let singleSplat = new SingleSplat(i, this._data);\n                    this._splats.push(singleSplat);\n                }\n                console.timeEnd(\"Splats creation\");\n\n            }\n            \n        }\n        \n        this.recalculateBounds = () => {\n            console.time(\"Bounds calculation\");\n            for (let i = 0; i < this._numberOfSplats; i++) {\n                const pos = this._splats[i].Position;\n                this._bounds.expand(new Vector3(pos[0], pos[1], pos[2]));\n            }\n            console.timeEnd(\"Bounds calculation\");\n        }\n\n        this.createOctree = () => {\n            this._octree = new PointOctree<SingleSplat>(this._bounds.min, this._bounds.max, 0.0, 8, 8);\n\n            console.time(\"Octree creation\");\n            const positionVector = new Vector3();\n            for (let i = 0; i < this._numberOfSplats; i++) {\n                const pos = this._splats[i].Position;\n                positionVector.set(pos[0], pos[1], pos[2]);\n                this._octree.set(positionVector, this._splats[i]);\n            }\n            console.timeEnd(\"Octree creation\");\n\n            console.log(\"Depth: \" + this._octree.getDepth());\n\n            let dimension = new Vector3();\n            this._octree.getDimensions(dimension);\n            console.log(\"Dimension: \" + dimension);\n        }\n\n\n        this.applyPosition = () => {\n            this.data.translate(this.position);\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this._splats.forEach((splat, index) => {\n                splat.rotate(this.rotation);\n            });\n            this.rotation = new Quaternion();\n\n            this.data.changed = true;\n        };\n\n        this.applyScale = () => {\n            this._splats.forEach((splat, index) => {\n                splat.scale(this.scale);\n            });\n            this.scale = new Vector3(1, 1, 1);\n        };\n        \n        this.applySelection = () => {\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n            \n            this.data.changed = true;\n        }\n        \n        this.applyRendering = () => {\n            this.data.countRenderedSplats();\n            \n            this.dispatchEvent(this._changeEvent);\n            this.data.changed = true;\n        }\n\n        this.createSplatsData();\n        this.recalculateBounds();\n        this.createOctree();\n        \n        this.data.changed = true;\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const data = this.serialize();\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, this._numberOfSplats);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n    \n    get splats() {\n        return this._splats;\n    }\n    \n    getSplatAtIndex(index: number): SingleSplat | undefined {\n        if (index < 0 || index >= this._numberOfSplats) {\n            console.error(\"Index out of bounds\");\n            return undefined; \n        }\n        return this._splats[index];\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n    \n    selectSplat(index: number, value: number) {\n        this._splats[index].Selected = value;\n        \n        this.selectedChanged = true;\n        this.dispatchEvent(this._changeEvent);\n    }\n    \n    renderSplat(index: number, value: number) {\n        this._data.rendered[index] = value;\n    }\n    \n    updateRenderingOfSplats() {\n        this.data.changed = true;\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsMap() {\n        return this._colorTransformsMap;\n    }\n    \n    get bounds() {\n        let center = this._bounds.center();\n        center = center.add(this.position);\n\n        let size = this._bounds.size();\n        size = size.multiply(this.scale);\n\n        return new Box3(center.subtract(size.divide(2)), center.add(size.divide(2)));\n    }\n    \n    get splatCount() {\n        return this._numberOfSplats;\n    }\n    \n    get numberOfRenderedSplats() {\n        return this._numberOfRenderedSplats;\n    }\n\n    serialize = () => {\n        const data = new Uint8Array(this._numberOfSplats * SplatData.RowLength);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n        \n        for (let i = 0; i < this._numberOfSplats; i++) {\n            f_buffer[8 * i + 0] = this._splats[i].Position[0];\n            f_buffer[8 * i + 1] = this._splats[i].Position[1];\n            f_buffer[8 * i + 2] = this._splats[i].Position[2];\n\n            u_buffer[32 * i + 24 + 0] = this._splats[i].Color[0];\n            u_buffer[32 * i + 24 + 1] = this._splats[i].Color[1];\n            u_buffer[32 * i + 24 + 2] = this._splats[i].Color[2];\n            u_buffer[32 * i + 24 + 3] = this._splats[i].Color[3];\n\n            f_buffer[8 * i + 3 + 0] = this._splats[i].Scale[0];\n            f_buffer[8 * i + 3 + 1] = this._splats[i].Scale[1];\n            f_buffer[8 * i + 3 + 2] = this._splats[i].Scale[2];\n\n            u_buffer[32 * i + 28 + 0] = (this._splats[i].Rotation[0] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 1] = (this._splats[i].Rotation[1] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 2] = (this._splats[i].Rotation[2] * 128 + 128) & 0xff;\n            u_buffer[32 * i + 28 + 3] = (this._splats[i].Rotation[3] * 128 + 128) & 0xff;\n        }\n\n        return data;\n    };\n\n    reattach = (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => {\n        console.assert(\n            positions.byteLength === this._numberOfRenderedSplats * 3 * 4,\n            `Expected ${this._numberOfRenderedSplats * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n        );\n\n        for(let i = 0; i < this._numberOfSplats; i++) {\n            if(this._splats[i].Rendered === 1){\n                let position: Float32Array = new Float32Array(positions, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let rotation: Float32Array = new Float32Array(rotations, 4 * i * Constants.BYTE_OFFSET_FLOAT, 4);\n                let scale: Float32Array = new Float32Array(scales, 3 * i * Constants.BYTE_OFFSET_FLOAT, 3);\n                let color: Uint8Array = new Uint8Array(colors, 1 * i * Constants.BYTE_OFFSET_INT, 4);\n                let selected: Uint8Array = new Uint8Array(selection, i, 1);\n\n                this._splats[i].reattach(position, rotation, scale, color, selected);       \n            }\n        }\n        \n        this._data.detached = false;\n    };\n\n    get Positions(): Float32Array {\n        // return this._data.positions;\n        let tempPositions: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempPositions.push(...singleSplat.Position);\n            }\n        });\n\n        return new Float32Array(tempPositions);\n    }\n\n\n\n    get Scales(): Float32Array {\n        // return this._data.scales;\n        let tempScales: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempScales.push(...singleSplat.Scale);\n            }\n        });\n\n        return new Float32Array(tempScales);\n    }\n\n    get Rotations(): Float32Array {\n        // return this._data.rotations;\n        let tempRotations: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempRotations.push(...singleSplat.Rotation);\n            }\n        });\n\n        return new Float32Array(tempRotations);\n    }\n\n    get Colors(): Uint8Array {\n        // return this._data.colors;\n        let tempColors: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempColors.push(...singleSplat.Color);\n            }\n        });\n\n        return new Uint8Array(tempColors);\n    }\n\n    get Selections(): Uint8Array {\n        const tempSelections: number[] = [];\n\n        this._splats.forEach((singleSplat) => {\n            if (singleSplat.Rendered === 1) {\n                tempSelections.push(singleSplat.Selected);\n            }\n        });\n\n        return new Uint8Array(tempSelections);\n    }\n\n    get Rendered(): Uint8Array {\n        return this.data.rendered;\n    }\n\n}\n\nexport { Splat };\n","import { Object3D } from \"../core/Object3D\";\nimport { SplatvData } from \"./SplatvData\";\n\nclass Splatv extends Object3D {\n    private _data: SplatvData;\n\n    constructor(splat: SplatvData) {\n        super();\n\n        this._data = splat;\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Splatv };\n","import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 30;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n            \n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n","import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n","import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n","import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.serialize();\n                buffers.push(buffer);\n                vertexCount += object.splatCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n","export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\n    const req = await fetch(url, {\n        mode: \"cors\",\n        credentials: \"omit\",\n        cache: useCache ? \"force-cache\" : \"default\",\n    });\n\n    if (req.status != 200) {\n        throw new Error(req.status + \" Unable to load \" + req.url);\n    }\n\n    return req;\n}\n\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\n    const buffer = new Uint8Array(contentLength);\n\n    let bytesRead = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer.set(value, bytesRead);\n        bytesRead += value.length;\n        onProgress?.(bytesRead / contentLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadChunkedDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const chunks = [];\n    let receivedLength = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        chunks.push(value);\n        receivedLength += value.length;\n    }\n\n    const buffer = new Uint8Array(receivedLength);\n    let position = 0;\n    for (const chunk of chunks) {\n        buffer.set(chunk, position);\n        position += chunk.length;\n\n        onProgress?.(position / receivedLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadRequestDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    if (res.headers.has(\"content-length\")) {\n        return loadDataIntoBuffer(res, onProgress);\n    } else {\n        return loadChunkedDataIntoBuffer(res, onProgress);\n    }\n}\n","import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this.LoadFromArrayBuffer(buffer, scene);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene): Splat {\n        const buffer = new Uint8Array(arrayBuffer);\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n}\n\nexport { Loader };\n","import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { Converter } from \"../utils/Converter\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass PLYLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        return this.LoadFromArrayBuffer(plyData.buffer, scene, format);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene, format);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene, format: string = \"\"): Splat {\n        const buffer = new Uint8Array(this._ParsePLYBuffer(arrayBuffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            \n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                    case \"scaling_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                    case \"scaling_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                    case \"scaling_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                    case \"features_0\":\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                    case \"features_1\":\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                    case \"features_2\":\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                    case \"opacity_0\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                    case \"rotation_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                    case \"rotation_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                    case \"rotation_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                    case \"rotation_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n","import { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Splatv } from \"../splats/Splatv\";\nimport { SplatvData } from \"../splats/SplatvData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass SplatvLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splatv> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this._ParseSplatvBuffer(buffer.buffer, scene, camera);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n    ): Promise<Splatv> {\n        const reader = new FileReader();\n        let splatv: Splatv | null = null;\n        reader.onload = (e) => {\n            splatv = this._ParseSplatvBuffer(e.target!.result as ArrayBuffer, scene, camera);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        if (!splatv) {\n            throw new Error(\"Failed to load splatv file\");\n        }\n        return splatv;\n    }\n\n    private static _ParseSplatvBuffer(inputBuffer: ArrayBuffer, scene: Scene, camera: Camera | null): Splatv {\n        let result: Splatv | null = null;\n\n        const handleChunk = (\n            chunk: { size: number; type: string; texwidth: number; texheight: number },\n            buffer: Uint8Array,\n            chunks: { size: number; type: string }[],\n        ) => {\n            if (chunk.type === \"magic\") {\n                const intView = new Int32Array(buffer.buffer);\n                if (intView[0] !== 0x674b) {\n                    throw new Error(\"Invalid splatv file\");\n                }\n                chunks.push({ size: intView[1], type: \"chunks\" });\n            } else if (chunk.type === \"chunks\") {\n                const splatChunks = JSON.parse(new TextDecoder(\"utf-8\").decode(buffer));\n                if (splatChunks.length == 0) {\n                    throw new Error(\"Invalid splatv file\");\n                } else if (splatChunks.length > 1) {\n                    console.warn(\"Splatv file contains more than one chunk, only the first one will be loaded\");\n                }\n                const chunk = splatChunks[0];\n                const cameras = chunk.cameras as { position: number[]; rotation: number[][] }[];\n                if (camera && cameras && cameras.length) {\n                    const cameraData = cameras[0];\n                    const position = new Vector3(\n                        cameraData.position[0],\n                        cameraData.position[1],\n                        cameraData.position[2],\n                    );\n                    const rotation = Quaternion.FromMatrix3(\n                        new Matrix3(\n                            cameraData.rotation[0][0],\n                            cameraData.rotation[0][1],\n                            cameraData.rotation[0][2],\n                            cameraData.rotation[1][0],\n                            cameraData.rotation[1][1],\n                            cameraData.rotation[1][2],\n                            cameraData.rotation[2][0],\n                            cameraData.rotation[2][1],\n                            cameraData.rotation[2][2],\n                        ),\n                    );\n                    camera.position = position;\n                    camera.rotation = rotation;\n                }\n                chunks.push(chunk);\n            } else if (chunk.type === \"splat\") {\n                const data = SplatvData.Deserialize(buffer, chunk.texwidth, chunk.texheight);\n                const splatv = new Splatv(data);\n                scene.addObject(splatv);\n                result = splatv;\n            }\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const chunks: { size: number; type: string; texwidth: number; texheight: number }[] = [\n            { size: 8, type: \"magic\", texwidth: 0, texheight: 0 },\n        ];\n        let chunk: { size: number; type: string; texwidth: number; texheight: number } | undefined = chunks.shift();\n        let buffer = new Uint8Array(chunk!.size);\n        let offset = 0;\n        let inputOffset = 0;\n        while (chunk) {\n            while (offset < chunk.size) {\n                const sizeToRead = Math.min(chunk.size - offset, ubuf.length - inputOffset);\n                buffer.set(ubuf.subarray(inputOffset, inputOffset + sizeToRead), offset);\n                offset += sizeToRead;\n                inputOffset += sizeToRead;\n            }\n            handleChunk(chunk, buffer, chunks);\n            if (result) {\n                return result;\n            }\n            chunk = chunks.shift();\n            if (chunk) {\n                buffer = new Uint8Array(chunk.size);\n                offset = 0;\n            }\n        }\n\n        throw new Error(\"Invalid splatv file\");\n    }\n}\n\nexport { SplatvLoader };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n","\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,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X19jeHhhYml2MTE2X19zaGltX3R5cGVfaW5mb0UAAAAADAYAABgEAAAQBAAATjEwX19jeHhhYml2MTE3X19jbGFzc190eXBlX2luZm9FAAAADAYAAEgEAAA8BAAATjEwX19jeHhhYml2MTE3X19wYmFzZV90eXBlX2luZm9FAAAADAYAAHgEAAA8BAAATjEwX19jeHhhYml2MTE5X19wb2ludGVyX3R5cGVfaW5mb0UADAYAAKgEAACcBAAAAAAAABwFAAABAAAAAgAAAAMAAAAEAAAABQAAAE4xMF9fY3h4YWJpdjEyM19fZnVuZGFtZW50YWxfdHlwZV9pbmZvRQAMBgAA9AQAADwEAAB2AAAA4AQAACgFAABiAAAA4AQAADQFAABjAAAA4AQAAEAFAABoAAAA4AQAAEwFAABhAAAA4AQAAFgFAABzAAAA4AQAAGQFAAB0AAAA4AQAAHAFAABpAAAA4AQAAHwFAABqAAAA4AQAAIgFAABsAAAA4AQAAJQFAABtAAAA4AQAAKAFAAB4AAAA4AQAAKwFAAB5AAAA4AQAALgFAABmAAAA4AQAAMQFAABkAAAA4AQAANAFAAAAAAAAbAQAAAEAAAAGAAAAAwAAAAQAAAAHAAAACAAAAAkAAAAKAAAAAAAAAFQGAAABAAAACwAAAAMAAAAEAAAABwAAAAwAAAANAAAADgAAAE4xMF9fY3h4YWJpdjEyMF9fc2lfY2xhc3NfdHlwZV9pbmZvRQAAAAAMBgAALAYAAGwEAAB1bnNpZ25lZCBzaG9ydAB1bnNpZ25lZCBpbnQAZmxvYXQAdWludDY0X3QAdW5zaWduZWQgY2hhcgBib29sAHVuc2lnbmVkIGxvbmcAc3RkOjp3c3RyaW5nAHN0ZDo6c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAGRvdWJsZQB2b2lkAGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGZsb2F0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50NjRfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50NjRfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGNoYXI+AHN0ZDo6YmFzaWNfc3RyaW5nPHVuc2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+AE5TdDNfXzIxMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAAAAAOQFAACSCQAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUAAOQFAADcCQAATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUAAOQFAAAkCgAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUAAADkBQAAbAoAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEaU5TXzExY2hhcl90cmFpdHNJRGlFRU5TXzlhbGxvY2F0b3JJRGlFRUVFAAAA5AUAALgKAABOMTBlbXNjcmlwdGVuM3ZhbEUAAOQFAAAECwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJY0VFAADkBQAAIAsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWFFRQAA5AUAAEgLAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUAAOQFAABwCwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJc0VFAADkBQAAmAsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXRFRQAA5AUAAMALAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUAAOQFAADoCwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJakVFAADkBQAAEAwAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWxFRQAA5AUAADgMAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUAAOQFAABgDAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJeEVFAADkBQAAiAwAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXlFRQAA5AUAALAMAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lmRUUAAOQFAADYDAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZEVFAADkBQAAAA0AQagaCwMwDwE=\";function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,h:__embind_register_bool,g:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,i:__embind_register_void,j:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"__getTypeName\"])(a0);var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"_emscripten_stack_restore\"])(a0);var __emscripten_stack_alloc=a0=>(__emscripten_stack_alloc=wasmExports[\"_emscripten_stack_alloc\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"emscripten_stack_get_current\"])();var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return readyPromise\n}\n);\n})();\nexport default loadWasm;","import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n    public colorTransformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _singleSplatIndices: Map<SingleSplat, number>;\n    private _offsets: Map<Splat, number>;\n    private _singleOffsets: Map<SingleSplat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _colorTransforms: Float32Array;\n    private _colorTransformsWidth: number;\n    private _colorTransformsHeight: number;\n    private _colorTransformIndices: Uint32Array;\n    private _colorTransformIndicesWidth: number;\n    private _colorTransformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._singleSplatIndices = new Map<SingleSplat, number>();\n        this._offsets = new Map<Splat, number>();\n        this._singleOffsets = new Map<SingleSplat, number>();\n        const lookup = new Map<number, Splat>();\n        const singlelookup = new Map<number, SingleSplat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.splatCount;\n                splatIndex++;\n                \n                for(let singleSplat of object.splats) {\n                    this._singleSplatIndices.set(singleSplat, splatIndex);\n                    this._singleOffsets.set(singleSplat, splatIndex);\n                    singlelookup.set(vertexCount, singleSplat);\n                    splatIndex++;\n                }\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._colorTransformsWidth = 4;\n        this._colorTransformsHeight = 64;\n        this._colorTransforms = new Float32Array(this._colorTransformsWidth * this._colorTransformsHeight * 4);\n        this._colorTransforms.fill(0);\n        this._colorTransforms[0] = 1;\n        this._colorTransforms[5] = 1;\n        this._colorTransforms[10] = 1;\n        this._colorTransforms[15] = 1;\n\n        this._colorTransformIndicesWidth = 1024;\n        this._colorTransformIndicesHeight = Math.ceil(this.vertexCount / this._colorTransformIndicesWidth);\n        this._colorTransformIndices = new Uint32Array(\n            this._colorTransformIndicesWidth * this._colorTransformIndicesHeight,\n        );\n        this.colorTransformIndices.fill(0);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            splat.renderNumberChanged = false;\n            this.transformsChanged = true;\n        };\n\n        const updateColorTransforms = () => {\n            let colorTransformsChanged = false;\n            for (const splat of this._splatIndices.keys()) {\n                if (splat.colorTransformChanged) {\n                    colorTransformsChanged = true;\n                    break;\n                }\n            }\n            if (!colorTransformsChanged) {\n                return;\n            }\n            const colorTransformsMap: Matrix4[] = [new Matrix4()];\n            this._colorTransformIndices.fill(0);\n            let i = 1;\n            for (const splat of this._splatIndices.keys()) {\n                const offset = this._offsets.get(splat) as number;\n                for (const colorTransform of splat.colorTransforms) {\n                    if (!colorTransformsMap.includes(colorTransform)) {\n                        colorTransformsMap.push(colorTransform);\n                        i++;\n                    }\n                }\n                for (const index of splat.colorTransformsMap.keys()) {\n                    const colorTransformIndex = splat.colorTransformsMap.get(index) as number;\n                    this._colorTransformIndices[index + offset] = colorTransformIndex + i - 1;\n                }\n                splat.colorTransformChanged = false;\n            }\n            for (let index = 0; index < colorTransformsMap.length; index++) {\n                const colorTransform = colorTransformsMap[index];\n                this._colorTransforms.set(colorTransform.buffer, index * 16);\n            }\n            this.colorTransformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n                updateColorTransforms();\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.splatCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                    response.rendered,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n                splat.renderNumberChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            \n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.splatCount);\n            const selectionPtr = wasmModule._malloc(splat.splatCount);\n            const renderedPtr = wasmModule._malloc(splat.splatCount)\n            const dataPtr = wasmModule._malloc(8 * splat.splatCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.splatCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.splatCount * 4);\n            \n\n            wasmModule.HEAPF32.set(splat.Positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.Scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.Colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.Selections, selectionPtr);\n            wasmModule.HEAPU8.set(splat.Rendered, renderedPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.splatCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                renderedPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.splatCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.splatCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.splatCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.splatCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.splatCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(renderedPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n            \n\n            this.dataChanged = true;\n            this.colorTransformsChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            \n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (splat.colorTransformChanged) {\n                updateColorTransforms();\n            }\n            \n            if (!splat.data.changed || splat.data.detached || splat.renderNumberChanged) return;\n            \n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.splatCount,\n                positions: splat.Positions,\n                rotations: splat.Rotations,\n                scales: splat.Scales,\n                colors: splat.Colors,\n                selection: splat.Selections,\n                rendered: splat.Rendered,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                    serializedSplat.rendered.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n\n        updateColorTransforms();\n    }\n    \n    get offsets() {\n        return this._offsets;\n    }\n\n    get singleOffsets() {\n        return this._singleOffsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsWidth() {\n        return this._colorTransformsWidth;\n    }\n\n    get colorTransformsHeight() {\n        return this._colorTransformsHeight;\n    }\n\n    get colorTransformIndices() {\n        return this._colorTransformIndices;\n    }\n\n    get colorTransformIndicesWidth() {\n        return this._colorTransformIndicesWidth;\n    }\n\n    get colorTransformIndicesHeight() {\n        return this._colorTransformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n","class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n","import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport {\n    ObjectAddedEvent,\n    ObjectChangedEvent,\n    ObjectRemovedEvent,\n    RenderedSplatsChangedEvent\n} from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { Scene } from \"../../../core/Scene\"\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n    private _worker: Worker | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n        let u_colorTransforms: WebGLUniformLocation;\n        let u_colorTransformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let colorTransformsTexture: WebGLTexture;\n        let colorTransformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            this._worker = new SortWorker();\n            this._worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n            \n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    object.addEventListener(\"renderedSplatsChanged\", handleRenderedSplatsChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            colorTransformsTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransforms = gl.getUniformLocation(this.program, \"u_colorTransforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransforms, 3);\n\n            colorTransformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransformIndices = gl.getUniformLocation(\n                this.program,\n                \"u_colorTransformIndices\",\n            ) as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransformIndices, 4);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            resetSplatData();\n        };\n\n        const handleRenderedSplatsChanged = (event: Event) => {\n            const e = event as RenderedSplatsChangedEvent;\n            \n            resetSplatData();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n            \n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        const resetSplatData = () => {\n            this._renderData?.dispose();\n            this._renderData = new RenderData(this._scene as Scene);\n\n            this._worker?.terminate();\n            createWorker();\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (\n                this.renderData.dataChanged ||\n                this.renderData.transformsChanged ||\n                this.renderData.colorTransformsChanged\n            ) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                if (this.renderData.colorTransformsChanged) {\n                    gl.activeTexture(gl.TEXTURE3);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.colorTransformsWidth,\n                        this.renderData.colorTransformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.colorTransforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE4);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.colorTransformIndicesWidth,\n                        this.renderData.colorTransformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.colorTransformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                // console.log(detachedPositions.length)\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                // console.log(detachedTransforms.length)\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                // console.log(detachedTransformIndices.length)\n                this._worker?.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n                this.renderData.colorTransformsChanged = false;\n            }\n\n            this._camera.update();\n            this._worker?.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.depthIndex.length);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    object.removeEventListener(\"renderedSplatsChanged\", handleObjectChanged);\n                }\n            }\n\n            this._worker?.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    get worker() {\n        return this._worker;\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n","import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n","import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n    \n    private _customPrograms: ShaderProgram[];\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    removeAllPrograms: () => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n        \n        this._renderProgram = new RenderProgram(this, renderPasses);\n        this._customPrograms = [];\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n            this._customPrograms?.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.removeAllPrograms = () => {\n            for(let i = 0; i < this._customPrograms.length; i++) {\n                var program = this._customPrograms.pop();\n                if(program != undefined)\n                    this.removeProgram(program);\n            }\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n","import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    public enabled: boolean = true;\n\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    \n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled) return;\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!this.enabled || !dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { Camera } from \"../cameras/Camera\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass FPSControls {\n    moveSpeed: number = 1.5;\n    lookSpeed: number = 0.7;\n    dampening: number = 0.5;\n    update: () => void;\n    dispose: () => void;\n\n    constructor(camera: Camera, canvas: HTMLCanvasElement) {\n        const keys: { [key: string]: boolean } = {};\n        let pitch = camera.rotation.toEuler().x;\n        let yaw = camera.rotation.toEuler().y;\n        let targetPosition = camera.position;\n        let pointerLock = false;\n\n        const onMouseDown = () => {\n            canvas.requestPointerLock();\n        };\n\n        const onPointerLockChange = () => {\n            pointerLock = document.pointerLockElement === canvas;\n            if (pointerLock) {\n                canvas.addEventListener(\"mousemove\", onMouseMove);\n            } else {\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\n            }\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            const mouseX = e.movementX;\n            const mouseY = e.movementY;\n\n            yaw += mouseX * this.lookSpeed * 0.001;\n            pitch -= mouseY * this.lookSpeed * 0.001;\n            pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch));\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n            if (e.code === \"Escape\") document.exitPointerLock();\n        };\n\n        this.update = () => {\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n            let move = new Vector3(0, 0, 0);\n            if (keys[\"KeyS\"]) {\n                move = move.add(forward);\n            }\n            if (keys[\"KeyW\"]) {\n                move = move.subtract(forward);\n            }\n            if (keys[\"KeyA\"]) {\n                move = move.subtract(right);\n            }\n            if (keys[\"KeyD\"]) {\n                move = move.add(right);\n            }\n            move = new Vector3(move.x, 0, move.z);\n            if (move.magnitude() > 0) {\n                move = move.normalize();\n            }\n\n            targetPosition = targetPosition.add(move.multiply(this.moveSpeed * 0.01));\n            camera.position = camera.position.add(targetPosition.subtract(camera.position).multiply(this.dampening));\n\n            camera.rotation = Quaternion.FromEuler(new Vector3(pitch, yaw, 0));\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n\n            document.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n\n            window.removeEventListener(\"keydown\", onKeyDown);\n            window.removeEventListener(\"keyup\", onKeyUp);\n        };\n\n        window.addEventListener(\"keydown\", onKeyDown);\n        window.addEventListener(\"keyup\", onKeyUp);\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n\n        document.addEventListener(\"pointerlockchange\", onPointerLockChange);\n\n        this.update();\n    }\n}\n\nexport { FPSControls };\n","import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n    public constant: number;\n    \n    constructor(normal: Vector3 = new Vector3(1, 0, 0), point: Vector3 = new Vector3(0,0,0), constant:number = 0) {\n        this.normal = normal;\n        this.point = point;\n        this.constant = constant;\n    }\n\n    setComponents(x: number, y:number, z:number, w:number): this {\n        this.normal.set(x, y, z);\n        this.constant = w;\n        return this;\n    }\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n\n    normalize(): this {\n        \n        const inverseNormalLength = 1.0 / this.normal.magnitude();\n        this.normal.multiply(inverseNormalLength);\n        this.constant *= inverseNormalLength;\n        return this;\n    }\n\n    distanceToPoint(point: Vector3): number {\n        return this.normal.dot(point) + this.constant;\n    }\n}\n\nexport { Plane };\n","import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n","import { Splatv } from \"../../../splats/Splatv\";\nimport { SplatvData } from \"../../../splats/SplatvData\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n  \nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\nuniform float time;\n  \nin vec2 position;\nin int index;\n  \nout vec4 vColor;\nout vec2 vPosition;\n  \nvoid main () {\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\n    vec2 trbf = unpackHalf2x16(motion1.w);\n    float dt = time - trbf.x;\n\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\n    if(topacity < 0.02) return;\n\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\n\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \n      \n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\n      \n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\n    vec4 pos = projection * cam;\n  \n    float clip = 1.2 * pos.w;\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\n\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\n    rot /= sqrt(dot(rot, rot));\n  \n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\n    mat3 R = mat3(\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\n    mat3 M = S * R;\n    mat3 Vrk = 4.0 * transpose(M) * M;\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n  \n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n  \n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n  \n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      \n    uint rgba = static1.w;\n    vColor = \n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \n        vec4(1.0, 1.0, 1.0, topacity) *\n        vec4(\n            (rgba) & 0xffu, \n            (rgba >> 8) & 0xffu, \n            (rgba >> 16) & 0xffu, \n            (rgba >> 24) & 0xffu) / 255.0;\n\n    vec2 vCenter = vec2(pos) / pos.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n    vPosition = position;\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n  \nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n\nclass VideoRenderProgram extends ShaderProgram {\n    private _renderData: SplatvData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[] = []) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_time: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const setupWorker = () => {\n            if (renderer.renderProgram.worker === null) {\n                console.error(\"Render program is not initialized. Cannot render without worker\");\n                return;\n            }\n            worker = renderer.renderProgram.worker;\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === null) {\n                        this._renderData = object.data;\n                        object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    } else {\n                        console.warn(\"Multiple Splatv objects are not currently supported\");\n                    }\n                }\n            }\n\n            if (this._renderData === null) {\n                console.error(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            u_time = gl.getUniformLocation(this.program, \"time\") as WebGLUniformLocation;\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            setupWorker();\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this._splatTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                this._renderData.width,\n                this._renderData.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                this._renderData.data,\n            );\n\n            const positions = this._renderData.positions;\n            const dummyTransforms = new Float32Array(new Matrix4().buffer);\n            const dummyTransformIndices = new Uint32Array(this._renderData.vertexCount);\n            dummyTransformIndices.fill(0);\n            worker.postMessage(\n                {\n                    sortData: {\n                        positions: positions,\n                        transforms: dummyTransforms,\n                        transformIndices: dummyTransformIndices,\n                        vertexCount: this._renderData.vertexCount,\n                    },\n                },\n                [positions.buffer, dummyTransforms.buffer, dummyTransformIndices.buffer],\n            );\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === null) {\n                    this._renderData = e.object.data;\n                    e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n                } else {\n                    console.warn(\"Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.\");\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === e.object.data) {\n                    this._renderData = null;\n                    e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splatv && this._renderData === e.object.data) {\n                this.dispose();\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (!this._renderData) {\n                console.warn(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this._depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this._renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === object.data) {\n                        this._renderData = null;\n                        object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    }\n                }\n            }\n\n            worker?.terminate();\n\n            gl.deleteTexture(this._splatTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n    }\n\n    get renderData(): SplatvData | null {\n        return this._renderData;\n    }\n\n    protected _getVertexSource(): string {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource(): string {\n        return fragmentShaderSource;\n    }\n}\n\nexport { VideoRenderProgram };\n","import { Box3 } from \"./Box3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public pointIndices: number[] = [];\n\n    constructor(\n        public bounds: Box3,\n        public boxes: Box3[],\n        pointIndices: number[],\n    ) {\n        if (pointIndices.length > 1) {\n            this.split(bounds, boxes, pointIndices);\n        } else if (pointIndices.length > 0) {\n            this.pointIndices = pointIndices;\n        }\n    }\n    \n    private split(bounds: Box3, boxes: Box3[], pointIndices: number[]) {\n        const axis = bounds.size().maxComponent();\n        pointIndices.sort((a, b) => boxes[a].center().getComponent(axis) - boxes[b].center().getComponent(axis));\n\n        const mid = Math.floor(pointIndices.length / 2);\n        const leftIndices = pointIndices.slice(0, mid);\n        const rightIndices = pointIndices.slice(mid);\n\n        this.left = new BVHNode(bounds, boxes, leftIndices);\n        this.right = new BVHNode(bounds, boxes, rightIndices);\n    }\n\n    public queryRange(range: Box3): number[] {\n        if (!this.bounds.intersects(range)) {\n            return [];\n        } else if (this.left !== null && this.right !== null) {\n            return this.left.queryRange(range).concat(this.right.queryRange(range));\n        } else {\n            return this.pointIndices.filter((index) => range.intersects(this.boxes[index]));\n        }\n    }\n}\n\nclass BVH {\n    public root: BVHNode;\n\n    constructor(bounds: Box3, boxes: Box3[]) {\n        const pointIndices = boxes.map((_, index) => index);\n        this.root = new BVHNode(bounds, boxes, pointIndices);\n    }\n\n    public queryRange(range: Box3) {\n        return this.root.queryRange(range);\n    }\n}\n\nexport { BVH };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Vector3 } from \"../../../math/Vector3\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\nimport { Box3 } from \"../../../math/Box3\";\nimport { BVH } from \"../../../math/BVH\";\nimport { RenderData } from \"./RenderData\";\nimport {SingleSplat} from \"../../../splats/SingleSplat\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n    testPointSingleSplats: (x: number, y: number) => SingleSplat[] | null;\n    testLayer: (value: number, positiveDirection: boolean, axis: string) => SingleSplat[] | null;\n\n    constructor(renderProgram: RenderProgram, maxDistance: number = 100, resolution: number = 1.0) {\n        let vertexCount = 0;\n        let bvh: BVH | null = null;\n\n        let singleSplatbvh: BVH | null = null;\n        let lookup: Splat[] = [];\n        let singleSplatLookup: SingleSplat[] = [];\n\n        const build = () => {\n            if(renderProgram.renderData === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return;\n            }\n            const startTimeSplat = performance.now();\n            \n            lookup = [];\n            const renderData = renderProgram.renderData as RenderData;\n            const boxes = new Array<Box3>(renderData.offsets.size);\n            let i = 0;\n            const bounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const splat of renderData.offsets.keys()) {\n                const splatBounds = splat.bounds;\n                boxes[i++] = splatBounds;\n                bounds.expand(splatBounds.min);\n                bounds.expand(splatBounds.max);\n                lookup.push(splat);\n            }\n            bounds.permute();\n            bvh = new BVH(bounds, boxes);\n\n            const endTimeSplat = performance.now();\n            const duration = endTimeSplat - startTimeSplat; \n            console.log(`creating BVH with SPLAT:  ${duration/1000} s (${duration} ms).`);\n\n            const startTimeSingleSplat = performance.now();\n            singleSplatLookup = [];\n            const singleSplatBoxes = new Array<Box3>(renderData.singleOffsets.size);\n            let j = 0;\n            const singleSplatbounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatBoxes[j++] = splatBounds;\n                singleSplatbounds.expand(splatBounds.min);\n                singleSplatbounds.expand(splatBounds.max);\n                singleSplatLookup.push(singleSplat);\n            }\n            singleSplatbounds.permute();\n            singleSplatbvh = new BVH(singleSplatbounds, singleSplatBoxes);\n\n            const endTimeSingleSplat = performance.now();\n            const durationSingleSplat = endTimeSingleSplat - startTimeSingleSplat;\n            console.log(`creating BVH with SPLAT:  ${durationSingleSplat/1000} s (${durationSingleSplat} ms).`);\n            \n            console.log(\"Got \" + boxes.length + \" boxes for Splat!\")\n            console.log(\"Got \" + singleSplatBoxes.length + \" boxes for Single Splats!\")\n            \n            vertexCount = renderData.vertexCount;\n        };\n        \n        this.testLayer = (value: number, positiveDirection: boolean, axis: string) => {\n            const renderData = renderProgram.renderData as RenderData;\n            singleSplatLookup = [];\n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                if(axis === \"x\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().x >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().x < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"y\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().y >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().y < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                } else if(axis === \"z\") {\n                    if(positiveDirection) {\n                        if(splatBounds.center().z >= value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    } else {\n                        if(splatBounds.center().z < value) {\n                            singleSplatLookup.push(singleSplat)\n                        }\n                    }\n                }\n            }\n            return singleSplatLookup;\n        }\n\n        this.testPoint = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            build();\n\n            if (bvh === null) {\n                console.error(\"Failed to build octree for IntersectionTester\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            if (vertexCount !== renderData.vertexCount) {\n                console.warn(\"IntersectionTester has not been rebuilt since the last render\");\n            }\n\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                const points = bvh.queryRange(queryBox);\n                if (points.length > 0) {\n                    return lookup[points[0]];\n                }\n            }\n\n            return null;\n        };\n\n        \n        this.testPointSingleSplats = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            singleSplatLookup = [];\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                \n                for (const singleSplat of renderData.singleOffsets.keys()) {\n                    if(singleSplat.bounds.intersects(queryBox)) {\n                        singleSplatLookup.push(singleSplat)\n                    }\n                }\n            }\n            return singleSplatLookup;\n        };\n    }\n}\n\nexport { IntersectionTester };\n","import { Box3 } from \"./Box3\";\nimport { SingleSplat } from \"../splats/SingleSplat\";\nimport { Vector3 } from \"./Vector3\";\nimport { Ray } from \"./Ray\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public bounds: Box3;\n    public objects: SingleSplat[] = [];\n\n    constructor(objects: SingleSplat[] | undefined = undefined) {\n        this.bounds = new Box3(new Vector3(Infinity, Infinity, Infinity), new Vector3(-Infinity, -Infinity, -Infinity));\n        \n        if(objects === undefined)\n            return;\n        \n        objects.forEach(obj => {\n            this.bounds.expand(obj.bounds.min);\n            this.bounds.expand(obj.bounds.max);\n        });\n        if (objects.length <= 2) {\n            this.objects = objects;\n        } else {\n            this.split(objects);\n        }\n    }\n\n    private split(objects: SingleSplat[]): void {\n        const mid = Math.floor(objects.length / 2);\n        objects.sort((a, b) => a.bounds.center().x - b.bounds.center().x); // Simplistic sort by X-axis\n\n        this.left = new BVHNode(objects.slice(0, mid));\n        this.right = new BVHNode(objects.slice(mid));\n    }\n\n    public intersects(ray: Ray, maxDistance: number): SingleSplat[] {\n        if (!ray.intersectsBox(this.bounds, maxDistance)) {\n            return [];\n        }\n        if (this.objects.length > 0) {\n            return this.objects.filter(obj => ray.intersectsBox(obj.bounds, maxDistance));\n        }\n        return [\n            ...(this.left ? this.left.intersects(ray, maxDistance) : []),\n            ...(this.right ? this.right.intersects(ray, maxDistance) : [])\n        ];\n    }\n}\n\nexport { BVHNode }","import { Vector3 } from \"./Vector3\";\nimport { Box3 } from \"./Box3\";\n\nclass Ray {\n    origin: Vector3;\n    direction: Vector3;\n\n    constructor(origin: Vector3, direction: Vector3) {\n        this.origin = origin;\n        this.direction = direction.normalize(); // Stellen Sie sicher, dass die Richtung normalisiert ist\n    }\n\n    /**\n     * Berechnet einen Punkt auf dem Strahl bei einem bestimmten Skalar 't'.\n     * @param t Der Skalarwert, der bestimmt, wie weit entlang des Strahls der Punkt liegt.\n     * @returns Der Punkt auf dem Strahl.\n     */\n    getPoint(t: number): Vector3 {\n        return this.origin.add(this.direction.multiply(t));\n    }\n\n    /**\n     * Prüft die Intersektion dieses Strahls mit einer gegebenen Bounding Box.\n     * @param box Die Box, mit der die Intersektion geprüft werden soll.\n     * @returns True, wenn der Strahl die Box schneidet, sonst false.\n     */\n    intersectsBox(box: Box3, maxDistance: number = Infinity): boolean {\n        let tmin = (box.min.x - this.origin.x) / this.direction.x;\n        let tmax = (box.max.x - this.origin.x) / this.direction.x;\n\n        if (tmin > tmax) [tmin, tmax] = [tmax, tmin];\n\n        let tymin = (box.min.y - this.origin.y) / this.direction.y;\n        let tymax = (box.max.y - this.origin.y) / this.direction.y;\n\n        if (tymin > tymax) [tymin, tymax] = [tymax, tymin];\n\n        if ((tmin > tymax) || (tymin > tmax))\n            return false;\n\n        if (tymin > tmin) tmin = tymin;\n        if (tymax < tmax) tmax = tymax;\n\n        let tzmin = (box.min.z - this.origin.z) / this.direction.z;\n        let tzmax = (box.max.z - this.origin.z) / this.direction.z;\n\n        if (tzmin > tzmax) [tzmin, tzmax] = [tzmax, tzmin];\n\n        if ((tmin > tzmax) || (tzmin > tmax))\n            return false;\n\n        if (tzmin > tmin) tmin = tzmin;\n        if (tzmax < tmax) tmax = tzmax;\n\n        return (tmin < maxDistance) && (tmax > 0);\n    }\n}\n\nexport { Ray }","import { Camera } from \"./Camera\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { CameraData } from \"./CameraData\";\nimport {Vector4} from \"../math/Vector4\";\nimport {Plane} from \"../math/Plane\";\n\nclass CameraHelper {\n    private _camera:Camera;\n    private _cameraData: CameraData;\n    \n    private _frustumCorners: Vector3[];\n    \n    constructor(camera: Camera) {\n        this._camera = camera;\n        this._cameraData = this._camera.data;\n        this._frustumCorners = [];\n    }\n    \n    public calculateFrustum(): Vector3[] {\n        \n        const near = this._cameraData.near;\n        const far = this._cameraData.far;\n        const fovX = this._cameraData.fx;\n        const fovY = this._cameraData.fy;\n        \n        const halfHeightNear = Math.tan(fovY / 2) * near;\n        const halfWidthNear = Math.tan(fovX / 2) * near;\n        \n        const halfHeightFar = Math.tan(fovY / 2) * far;\n        const halfWidthFar = Math.tan(fovX / 2) * far;\n        \n        const nearTopLeft = new Vector3(-halfWidthNear, halfHeightNear, -near);\n        const nearTopRight = new Vector3(halfWidthNear, halfHeightNear, -near);\n        const nearBottomLeft = new Vector3(-halfWidthNear, -halfHeightNear, -near);\n        const nearBottomRight = new Vector3(halfWidthNear, -halfHeightNear, -near);\n\n        const farTopLeft = new Vector3(-halfWidthFar, halfHeightFar, far);\n        const farTopRight = new Vector3(halfWidthFar, halfHeightFar, far);\n        const farBottomLeft = new Vector3(-halfWidthFar, -halfHeightFar, far);\n        const farBottomRight = new Vector3(halfWidthFar, -halfHeightFar, far);\n\n        this._frustumCorners.push(\n            this.cameraToWorldCoords(nearTopLeft),\n            this.cameraToWorldCoords(nearTopRight),\n            this.cameraToWorldCoords(nearBottomLeft),\n            this.cameraToWorldCoords(nearBottomRight),\n            this.cameraToWorldCoords(farTopLeft),\n            this.cameraToWorldCoords(farTopRight),\n            this.cameraToWorldCoords(farBottomLeft),\n            this.cameraToWorldCoords(farBottomRight)\n        );\n\n        return this._frustumCorners;\n    }\n    \n    public cameraToWorldCoords(cameraCoords: Vector3): Vector3 {\n        const cameraSpaceCoords = new Vector4(cameraCoords.x, cameraCoords.y, cameraCoords.z, 1);\n        \n        const inverseViewMatrix = this._cameraData.viewMatrix.invert();\n        const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n        \n        const worldSpacePosition = new Vector3(\n            worldSpaceCoords.x / worldSpaceCoords.w,\n            worldSpaceCoords.y / worldSpaceCoords.w,\n            worldSpaceCoords.z / worldSpaceCoords.w,\n        );\n        \n        return worldSpacePosition;\n    }\n\n    public pointInFrustum(point: Vector3): boolean {\n        const planes = [\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[2]), // Near plane\n            this.createPlane(this._frustumCorners[4], this._frustumCorners[5], this._frustumCorners[6]), // Far plane\n            \n            this.createPlane(this._frustumCorners[0], this._frustumCorners[2], this._frustumCorners[4]), // left\n            this.createPlane(this._frustumCorners[1], this._frustumCorners[3], this._frustumCorners[5]), // right\n            this.createPlane(this._frustumCorners[0], this._frustumCorners[1], this._frustumCorners[4]), // bottom\n            this.createPlane(this._frustumCorners[2], this._frustumCorners[3], this._frustumCorners[6]), // top\n        ];\n        \n        return  planes[0].distanceToPoint(point) <= 0 && // before near plane\n                planes[1].distanceToPoint(point) >= 0 && // behind far plane\n                planes[2].distanceToPoint(point) <= 0 && // right from left plane\n                planes[3].distanceToPoint(point) >= 0 && // left from right plane\n                planes[4].distanceToPoint(point) >= 0 && // over bottom plane\n                planes[5].distanceToPoint(point) <= 0; // under top plane\n    }\n\n    private createPlane(a: Vector3, b: Vector3, c: Vector3): FrustumPlane {\n        const ab = b.subtract(a);\n        const ac = c.subtract(a);\n        const normal = ab.cross(ac).normalize();\n        const d = -normal.dot(a);\n        return new FrustumPlane(normal, d);\n    }\n}\n\nclass FrustumPlane {\n    normal: Vector3;\n    d: number;\n\n    constructor(normal: Vector3, d: number) {\n        this.normal = normal;\n        this.d = d;\n    }\n\n    distanceToPoint(point: Vector3): number {\n        // Berechnet den Abstand des Punktes von der Ebene\n        return this.normal.dot(point) + this.d;\n    }\n}\n\n\nexport { CameraHelper }","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass CubeVisualisationProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], points: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        if(points.length !== (2 || 8)) {\n            console.log(\"Please provide 2 oder 8 corners\")\n        }\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let corners: Float32Array;\n        let surface: Float32Array;\n        \n        if(points.length === 2) {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n        } else {\n            const [x1, y1, z1] = points[0];\n            const [x2, y2, z2] = points[1];\n            const [x3, y3, z3] = points[2];\n            const [x4, y4, z4] = points[3];\n            const [x5, y5, z5] = points[4];\n            const [x6, y6, z6] = points[5];\n            const [x7, y7, z7] = points[6];\n            const [x8, y8, z8] = points[7];\n\n            corners = new Float32Array([\n                x1, y1, z1, x2, y2, z2,  // Linie von P1 zu P2\n                x1, y1, z1, x3, y3, z3,  // Linie von P1 zu P3\n                x1, y1, z1, x5, y5, z5,  // Linie von P1 zu P5\n                x2, y2, z2, x4, y4, z4,  // Linie von P2 zu P4\n                x2, y2, z2, x6, y6, z6,  // Linie von P2 zu P6\n                x3, y3, z3, x4, y4, z4,  // Linie von P3 zu P4\n                x3, y3, z3, x7, y7, z7,  // Linie von P3 zu P7\n                x5, y5, z5, x6, y6, z6,  // Linie von P5 zu P6\n                x5, y5, z5, x7, y7, z7,  // Linie von P5 zu P7\n                x4, y4, z4, x8, y8, z8,  // Linie von P4 zu P8\n                x6, y6, z6, x8, y8, z8,  // Linie von P6 zu P8\n                x7, y7, z7, x8, y8, z8   // Linie von P7 zu P8\n            ]);\n\n\n            surface = new Float32Array([\n                x1, y1, z1, x2, y2, z2, x3, y3, z3, x2, y2, z2, x4, y4, z4, x3, y3, z3,\n                x5, y5, z5, x6, y6, z6, x7, y7, z7, x6, y6, z6, x8, y8, z8, x7, y7, z7,\n                x1, y1, z1, x5, y5, z5, x3, y3, z3, x7, y7, z7, x5, y5, z5, x3, y3, z3,\n                x2, y2, z2, x6, y6, z6, x4, y4, z4, x8, y8, z8, x6, y6, z6, x4, y4, z4,\n                x1, y1, z1, x2, y2, z2, x5, y5, z5, x6, y6, z6, x2, y2, z2, x5, y5, z5,\n                x3, y3, z3, x4, y4, z4, x7, y7, z7, x8, y8, z8, x4, y4, z4, x7, y7, z7\n            ])\n        }\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36);\n        };\n        \n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(corners, colorLines);\n            drawCube(surface, color)\n        };\n\n        this._resize = () => {};\n        \n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n    \n}\n\nexport { CubeVisualisationProgram }","import {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {Vector3} from \"../math/Vector3\";\nimport {CubeVisualisationProgram} from \"../renderers/webgl/programs/individual/CubeVisualisationProgram\";\nimport {ShaderProgram} from \"../renderers/webgl/programs/ShaderProgram\";\n\nclass Utils {\n    \n    public static draw(renderer: WebGLRenderer, point:Vector3, size: number) {\n        let upperLeftCorner = new Float32Array([point.x+(size/2), point.y+(size/2), point.z+(size/2)]);\n        let bottomRightCorner = new Float32Array([point.x-(size/2), point.y-(size/2), point.z-(size/2)]);\n\n        var renderProgram = new CubeVisualisationProgram(renderer, [], [upperLeftCorner, bottomRightCorner]);\n        renderer.addProgram(renderProgram);\n    }\n\n    public static drawCone(renderer: WebGLRenderer, points:Vector3[]) {\n        \n        let vecs: Float32Array[] = []\n        for(let i = 0; i < points.length; i++) {\n            vecs.push(new Float32Array([points[i].x, points[i].y, points[i].z]))\n        }\n        var renderProgram = new CubeVisualisationProgram(renderer, [], vecs);\n        renderer.addProgram(renderProgram);\n    }\n}\n\nexport { Utils }","import { BVHNode } from \"../../../math/BVHNode\";\nimport { SingleSplat } from \"../../../splats/SingleSplat\";\nimport { Camera } from \"../../../cameras/Camera\";\nimport { Ray } from \"../../../math/Ray\"\nimport {BVH} from \"../../../math/BVH\";\nimport {Box3} from \"../../../math/Box3\";\nimport {Vector3} from \"../../../math/Vector3\";\nimport {RenderProgram} from \"../programs/RenderProgram\";\nimport {RenderData} from \"./RenderData\";\nimport {WebGLRenderer} from \"../../WebGLRenderer\";\nimport { CubeVisualisationProgram } from \"../programs/individual/CubeVisualisationProgram\";\nimport {CameraHelper} from \"../../../cameras/CameraHelper\";\nimport {Utils} from \"../../../utils/Utils\";\n\nclass Raycaster {\n    private bvh: BVHNode | undefined;\n    private renderer: WebGLRenderer;\n    private renderProgram: RenderProgram;\n    \n    public testBox: (point1: Float32Array, point2: Float32Array) => SingleSplat[] | null;\n    public testCameraViewFrustum: (camera: Camera) => SingleSplat[] | null;\n\n    constructor(renderer: WebGLRenderer, buildBVH: boolean) {\n        let singleSplatLookup: SingleSplat[] = [];\n        this.renderer = renderer;\n        this.renderProgram = renderer.renderProgram;\n        \n        if(buildBVH) {\n            const renderData = this.renderProgram.renderData as RenderData;\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                const splatBounds = singleSplat.bounds;\n                singleSplatLookup.push(singleSplat);\n            }\n            this.bvh = new BVHNode(singleSplatLookup);\n        }\n\n        this.testBox = (point1: Float32Array, point2: Float32Array) => {\n            const renderData = this.renderProgram.renderData as RenderData;\n            \n            if(renderData === undefined)\n                return null;\n\n            singleSplatLookup = [];\n            \n            const [x1, y1, z1] = point1;\n            const [x2, y2, z2] = point2;\n            const minPoint = new Vector3(x1, y1, z1);\n            const maxPoint = new Vector3(x2, y2, z2);\n            \n            const queryBox = new Box3(maxPoint, minPoint);\n            queryBox.permute();\n            \n            \n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(queryBox.contains(singleSplat.bounds.center())) {\n                    \n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n\n        this.testCameraViewFrustum = (camera: Camera, showFrustum: boolean = false, showForSeconds: number = -1) => {\n            this.renderer.removeAllPrograms();\n            const renderData = this.renderProgram.renderData as RenderData;\n            let camHelper: CameraHelper = new CameraHelper(camera);\n            let corners: Vector3[] = camHelper.calculateFrustum();\n            \n            singleSplatLookup = [];\n            \n            if(showFrustum) {\n                Utils.drawCone(this.renderer,corners)\n                if(showForSeconds > 0) {\n                    setTimeout(function() {\n                        renderer.removeAllPrograms();\n                    }, showForSeconds * 1000);\n                } \n            }\n\n            for (const singleSplat of renderData.singleOffsets.keys()) {\n                if(camHelper.pointInFrustum(singleSplat.bounds.center())) {\n\n                    singleSplatLookup.push(singleSplat)\n                }\n            }\n\n            return singleSplatLookup;\n        }\n    }\n\n    public testPointSingleSplats(x: number, y: number, camera: Camera, maxDistance: number): SingleSplat[] | null {\n        if(this.bvh === undefined)\n            return null;\n        \n        if (!camera) {\n            console.error(\"Camera is not initialized\");\n            return null;\n        }\n\n        const ray = new Ray(camera.position, camera.screenPointToRay(x, y));\n        return this.bvh.intersects(ray, maxDistance);\n    }\n}\n\nexport { Raycaster }","import { ShaderProgram } from \"../ShaderProgram\";\nimport { WebGLRenderer } from \"../../../WebGLRenderer\";\nimport { ShaderPass } from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 axisColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = axisColor;\n}\n`;\n\nclass AxisProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        const xVertices = new Float32Array([-50, 0, 0, 50, 0, 0]);\n        const yVertices = new Float32Array([0, -50, 0, 0, 50, 0]);\n        const zVertices = new Float32Array([0, 0, -50, 0, 0, 50]);\n\n        const xColor = new Float32Array([1, 0, 0, 0.5]);\n        const yColor = new Float32Array([0, 1, 0, 0.5]);\n        const zColor = new Float32Array([0, 0.5, 1, 0.5]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"axisColor\") as WebGLUniformLocation;\n        };\n\n        const drawAxis = (vertices: Float32Array, color: Float32Array) => {\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 2);\n        };\n\n        this._resize = () => {};\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawAxis(xVertices, xColor);\n            drawAxis(yVertices, yColor);\n            drawAxis(zVertices, zColor);\n        };\n\n        this._dispose = () => {};\n    }\n\n    protected _getVertexSource() {\n        return axisVertexShader;\n    }\n\n    protected _getFragmentSource() {\n        return axisFragmentShader;\n    }\n}\n\nexport { AxisProgram };\n","import {ShaderProgram} from \"../ShaderProgram\";\nimport {WebGLRenderer} from \"../../../WebGLRenderer\";\nimport {ShaderPass} from \"../../passes/ShaderPass\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass MultibleCubesProgram extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], upperLeftCorners: Float32Array[], bottomRightCorners: Float32Array[], color: Float32Array = new Float32Array([1, 0, 0, 0.2])) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let tempAllCorners = [];\n        let tempAllSurface = [];\n        \n        let numberOfCubes = upperLeftCorners.length;\n        \n        for(var i = 0; i < numberOfCubes; i++) {\n            const [x1, y1, z1] = upperLeftCorners[i];\n            const [x2, y2, z2] = bottomRightCorners[i];\n\n\n            const corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n            tempAllCorners.push(...corners);\n\n\n            const surface = new Float32Array([\n                x1, y1, z1, x2, y1, z1, x1, y2, z1, x2, y1, z1, x2, y2, z1, x1, y2, z1,\n                x1, y1, z2, x2, y1, z2, x1, y2, z2, x2, y1, z2, x2, y2, z2, x1, y2, z2,\n                x1, y1, z1, x1, y1, z2, x1, y2, z1, x1, y2, z2, x1, y1, z2, x1, y2, z1,\n                x2, y1, z1, x2, y1, z2, x2, y2, z1, x2, y2, z2, x2, y1, z2, x2, y2, z1,\n                x1, y1, z1, x2, y1, z1, x1, y1, z2, x2, y1, z2, x2, y1, z1, x1, y1, z2,\n                x1, y2, z1, x2, y2, z1, x1, y2, z2, x2, y2, z2, x2, y2, z1, x1, y2, z2\n            ])\n            tempAllSurface.push(...surface);\n        }\n\n        let allCorners = new Float32Array(tempAllCorners);\n        let allsurface = new Float32Array(tempAllSurface);\n        \n\n        const colorLines = new Float32Array([0, 0, 0, 1]);\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24 * numberOfCubes);\n        };\n\n        const drawCube = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(5);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 36 * numberOfCubes);\n        };\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(allCorners, colorLines);\n            drawCube(allsurface, color)\n        };\n\n        this._resize = () => {};\n\n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n\n}\n\nexport { MultibleCubesProgram }\n","import {ShaderProgram} from \"../renderers/webgl/programs/ShaderProgram\";\nimport {WebGLRenderer} from \"../renderers/WebGLRenderer\";\nimport {ShaderPass} from \"../renderers/webgl/passes/ShaderPass\";\nimport {Octree} from \"./Octree\";\n\nconst axisVertexShader = /*glsl*/ `#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n`;\n\nconst axisFragmentShader = /*glsl*/ `#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n`;\n\nclass OctreeHelper extends ShaderProgram {\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[], octree: Octree, level: number = 0, color: Float32Array = new Float32Array([1, 0, 0, 1])) {\n        super(renderer, passes);\n\n        const gl = renderer.gl;\n\n        let vertexBuffer: WebGLBuffer;\n\n        let positionAttribute: number;\n\n        let u_projection: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_color: WebGLUniformLocation;\n\n        let tempAllCorners = [];\n        \n        const result = octree?.findNodesByLevel(level) || [];\n        \n        for(let i = 0; i < result.length; i++) {\n            const [x1, y1, z1] = [result[i].min.x, result[i].min.y, result[i].min.z]\n            const [x2, y2, z2] = [result[i].max.x, result[i].max.y, result[i].max.z]\n\n\n            const corners = new Float32Array([\n                x1, y1, z1, x2, y1, z1,  // Linie von P1 zu P2\n                x1, y1, z1, x1, y2, z1,  // Linie von P1 zu P3\n                x1, y1, z1, x1, y1, z2,  // Linie von P1 zu P5\n                x2, y1, z1, x2, y2, z1,  // Linie von P2 zu P4\n                x2, y1, z1, x2, y1, z2,  // Linie von P2 zu P6\n                x1, y2, z1, x2, y2, z1,  // Linie von P3 zu P4\n                x1, y2, z1, x1, y2, z2,  // Linie von P3 zu P7\n                x1, y1, z2, x2, y1, z2,  // Linie von P5 zu P6\n                x1, y1, z2, x1, y2, z2,  // Linie von P5 zu P7\n                x2, y2, z1, x2, y2, z2,  // Linie von P4 zu P8\n                x2, y1, z2, x2, y2, z2,  // Linie von P6 zu P8\n                x1, y2, z2, x2, y2, z2   // Linie von P7 zu P8\n            ]);\n            tempAllCorners.push(...corners);\n        }\n\n        let allCorners = new Float32Array(tempAllCorners);\n\n\n        const colorLines = color;\n\n        this._initialize = () => {\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            u_color = gl.getUniformLocation(this.program, \"cubeColor\") as WebGLUniformLocation;\n        };\n\n        const drawCubeLines = (vertices: Float32Array, color: Float32Array) => {\n            gl.lineWidth(100);\n            gl.uniform4fv(u_color, color);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 0, 0);\n            gl.drawArrays(gl.LINES, 0, 24 * result.length);\n        };\n\n        this._render = () => {\n            if (!this._camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            drawCubeLines(allCorners, colorLines);\n        };\n\n        this._resize = () => {};\n\n        this._dispose = () => {};\n    }\n\n    protected _getFragmentSource(): string {\n        return axisFragmentShader;\n    }\n\n    protected _getVertexSource(): string {\n        return axisVertexShader;\n    }\n\n}\n\nexport { OctreeHelper }\n","import { Plane } from \"./Plane\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Box3 } from \"./Box3\";\nimport { Vector3 } from \"./Vector3\";\n\nconst _vector = new Vector3();\n\nfunction intersectPlanes(p1: Plane, p2: Plane, p3: Plane): Vector3 | null {\n    const n1 = p1.normal;\n    const n2 = p2.normal;\n    const n3 = p3.normal;\n\n    const det = n1.dot(n2.cross(n3))\n\n    if(Math.abs(det) < 1e-6) {\n        return null;\n    }\n\n    const c1 = p1.constant;\n    const c2 = p2.constant;\n    const c3 = p3.constant;\n\n    const n2n3 = n2.cross(n3).multiply(-c1);\n    const n3n1 = n3.cross(n1).multiply(-c2);\n    const n1n2 = n1.cross(n2).multiply(-c3);\n\n    const point = new Vector3().addVectors(n2n3, n3n1).add(n1n2).divide(det);\n\n    return point;\n}\n\nclass Frustum {\n    planes: Plane[];\n\n    constructor(\n        p0: Plane = new Plane(),\n        p1: Plane = new Plane(),\n        p2: Plane = new Plane(),\n        p3: Plane = new Plane(),\n        p4: Plane = new Plane(),\n        p5: Plane = new Plane()\n    ) {\n        this.planes = [p0, p1, p2, p3, p4, p5];\n    }\n    \n    setFromProjectionMatrix(m: Matrix4) {\n        const planes = this.planes;\n        const me = m.buffer;\n\n        const me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\n        const me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\n        const me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\n        const me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\n\n        planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n        planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n        planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n        planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n        planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n        planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    }\n\n    intersectsBox(box: Box3): boolean {\n        const planes = this.planes;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = planes[i];\n\n            // corner at max distance\n            _vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n            _vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n            _vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n            if (plane.distanceToPoint(_vector) < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    getFrustumPoints(): Vector3[] {\n        const planes = this.planes;\n\n        // Es gibt 8 Ecken in einem Frustum\n        const points: Vector3[] = [];\n\n        // Vorderseite\n        points.push(intersectPlanes(planes[0], planes[2], planes[4])!); // Near-Left-Top\n        points.push(intersectPlanes(planes[1], planes[2], planes[4])!); // Near-Right-Top\n        points.push(intersectPlanes(planes[0], planes[3], planes[4])!); // Near-Left-Bottom\n        points.push(intersectPlanes(planes[1], planes[3], planes[4])!); // Near-Right-Bottom\n\n        // Rückseite (Far)\n        points.push(intersectPlanes(planes[0], planes[3], planes[5])!); // Far-Left-Top         \n        points.push(intersectPlanes(planes[1], planes[3], planes[5])!); // Far-Right-Top\n        points.push(intersectPlanes(planes[0], planes[2], planes[5])!); // Far-Left-Bottom\n        points.push(intersectPlanes(planes[1], planes[2], planes[5])!); // Far-Right-Bottom\n\n        return points;\n    }\n}\n\nexport { Frustum }"],"names":["Vector3","constructor","x","y","z","this","set","undefined","equals","v","addVectors","a","b","add","addScaledVector","s","subVectors","subtract","sub","multiply","buffer","divide","cross","distanceToSquared","dx","dy","dz","dot","lerp","t","min","Math","max","getComponent","axis","Error","minComponent","maxComponent","magnitude","sqrt","distanceTo","normalize","length","lengthSq","flat","clone","clamp","copy","toString","join","One","value","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","inverse","apply","vecQuat","conjugate","rotatedQuat","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","trace","FromAxisAngle","angle","halfAngle","LookRotation","direction","forward","rotAngle","acos","rotAxis","EventDispatcher","listeners","Map","addEventListener","type","listener","has","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","i","determinant","invert","det","invDet","Compose","position","rotation","scale","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","ObjectAddedEvent","Event","object","super","ObjectRemovedEvent","ObjectChangedEvent","RenderedSplatsChangedEvent","Object3D","positionChanged","rotationChanged","scaleChanged","_position","_rotation","_scale","_transform","_changeEvent","_renderedSplatsChanged","update","applyPosition","applyRotation","applyScale","raiseChangeEvent","_updateMatrix","transform","SplatData","vertexCount","positions","rotations","scales","colors","rendered","changed","detached","_vertexCount","_positions","Float32Array","_rotations","_scales","_colors","Uint8Array","_selection","_rendered","fill","_renderedSplats","resetRendering","translate","translation","removeVertex","index","removeItemsFromArray","removeVertexRange","count","arr","start","part1","subarray","part2","newArr","serialize","data","RowLength","f_buffer","u_buffer","reattach","selection","renderedFrame","receivedSplats","console","assert","byteLength","newPositions","newRotations","newScales","newColors","newSelection","newIndex","posIndex","rotIndex","scaleIndex","colorIndex","countRenderedSplats","Deserialize","renderedSplats","SplatvData","width","height","_data","_width","_height","Uint32Array","floor","Converter","SplatToPLY","header","properties","push","property","headerBuffer","TextEncoder","encode","plyRowLength","plyLength","output","DataView","ArrayBuffer","offset","scale_offset","opacity_offset","rot_offset","pos0","pos1","pos2","f_dc_0","SH_C0","f_dc_1","f_dc_2","alpha","opacity","log","scale0","scale1","scale2","rot0","rot1","rot2","rot3","setFloat32","f_dc_offset","Box3","contains","point","intersects","box","intersectsBox","intersectsBasedOnCenter","centerA","center","centerB","sizeA","size","sizeB","expand","permute","surfaceArea","depth","Matrix3","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","SingleSplat","_index","_bounds","Infinity","_defaultColor","recalculateBounds","pos","Position","scl","Scale","rotate","R","rot","Rotation","currentRotation","newRot","color","Selected","Rendered","Color","colorVector","ResetColor","bounds","PositionVec3","ScaleVec3","Constants","BYTE_OFFSET_FLOAT","BYTE_OFFSET_DOUBLE","BYTE_OFFSET_INT","OctreeIterator","root","region","reset","indices","result","done","next","octant","children","child","pop","Symbol","iterator","_vector","d","r","origin","ray","at","target","lookAt","recast","closestPointToPoint","directionDistance","distanceToPoint","distanceSqToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","Constructor","flags","octantTable","findNextOctant","currentOctant","tx1","ty1","tz1","exit","raycastOctant","node","tx0","ty0","tz0","c","txm","tym","tzm","f","entry","findEntryOctant","OctreeRaycaster","intersectOctree","octree","dimensions","getDimensions","halfDimensions","getCenter","Number","EPSILON","invDirX","invDirY","invDirZ","getDepth","cull","findNodesByLevel","level","Octree","getIntersectingNodes","raycaster","leaves","layout","Octant","split","mid","combination","PointContainer","distance","RayPointIntersection","distanceToOrigin","distanceToRay","PointData","points","testPoints","threshold","params","Points","thresholdSq","distanceToRaySq","closestPoint","near","far","p","PointOctant","distanceToCenterSquared","bias","redistribute","pointData","il","j","jl","childData","merge","concat","countPoints","exists","getBias","getMaxPoints","getMaxDepth","remove","parent","last","move","findNearestPoint","maxDistance","skipSelf","bestDistance","sortedChildren","map","sort","intermediateResult","findPoints","radius","rSq","dSq","PointOctree","maxPoints","maxDepth","round","POSITIVE_INFINITY","raycast","octants","Splat","splat","selectedChanged","renderNumberChanged","colorTransformChanged","_splats","_selected","_colorTransforms","_colorTransformsMap","_numberOfSplats","_numberOfRenderedSplats","selected","Array","createSplatsData","time","singleSplat","timeEnd","createOctree","_octree","positionVector","dimension","forEach","applySelection","applyRendering","saveToFile","name","format","document","now","Date","getFullYear","getMonth","getDate","blob","plyData","Blob","link","createElement","download","href","URL","createObjectURL","click","splats","getSplatAtIndex","error","selectSplat","renderSplat","updateRenderingOfSplats","colorTransforms","colorTransformsMap","splatCount","numberOfRenderedSplats","Positions","tempPositions","Scales","tempScales","Rotations","tempRotations","Colors","tempColors","Selections","tempSelections","Splatv","CameraData","_fx","_fy","_near","_far","_projectionMatrix","_viewMatrix","_viewProj","_updateProjectionMatrix","fx","fy","projectionMatrix","viewMatrix","setSize","viewProj","Vector4","Camera","camera","screenPointToRay","clipSpaceCoords","inverseProjectionMatrix","cameraSpaceCoords","inverseViewMatrix","worldSpaceCoords","Scene","_objects","addObject","objects","removeObject","indexOf","splice","findObject","predicate","findObjectOfType","objectsToRemove","slice","buffers","async","initiateFetchRequest","url","useCache","req","fetch","mode","credentials","cache","status","loadRequestDataIntoBuffer","res","onProgress","headers","reader","body","getReader","contentLength","parseInt","bytesRead","read","loadDataIntoBuffer","chunks","receivedLength","chunk","loadChunkedDataIntoBuffer","Loader","LoadAsync","scene","LoadFromArrayBuffer","LoadFromFileAsync","file","FileReader","onload","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","arrayBuffer","PLYLoader","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","header_end","header_end_index","exec","rowOffset","offsets","double","int","uint","float","short","ushort","uchar","prop","filter","k","startsWith","_p","dataView","q_polycam","rgba","Uint8ClampedArray","r0","r1","r2","r3","getFloat32","getInt32","exp","temp","SplatvLoader","_ParseSplatvBuffer","splatv","handleChunk","intView","Int32Array","splatChunks","JSON","parse","warn","cameras","cameraData","texwidth","texheight","shift","inputOffset","sizeToRead","ShaderProgram","renderer","passes","_scene","_camera","_started","_initialized","_renderer","gl","_program","createProgram","_passes","vertexShader","createShader","VERTEX_SHADER","shaderSource","_getVertexSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","_getFragmentSource","attachShader","program","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","resize","useProgram","_resize","initialize","_initialize","pass","render","dispose","_render","_dispose","started","loadWasm","moduleArg","readyPromiseResolve","readyPromiseReject","readBinary","Module","readyPromise","reject","moduleOverrides","Object","assign","scriptDirectory","self","location","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","response","bind","wasmBinary","wasmMemory","err","tryParseAsDataURI","filename","isDataURI","decoded","atob","bytes","charCodeAt","intArrayFromBase64","dataURIPrefix","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","Int8Array","Int16Array","Uint16Array","Float64Array","wasmBinaryFile","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","getBinaryPromise","binaryFile","then","binary","getBinarySync","instantiateArrayBuffer","imports","receiver","WebAssembly","instantiate","reason","what","RuntimeError","abort","callRuntimeCallbacks","callbacks","embind_charCodes","BindingError","readLatin1String","ptr","ret","awaitingDependencies","registeredTypes","throwBindingError","message","registerType","rawType","registeredInstance","options","TypeError","hasOwnProperty","ignoreDuplicateRegistrations","cb","sharedRegisterType","emval_freelist","emval_handles","count_emval_handles","Emval","handle","readPointer","pointer","EmValType","fromWireType","rv","__emval_decref","toWireType","destructors","argPackAdvance","readValueFromPointer","destructorFunction","floatReadValueFromPointer","integerReadValueFromPointer","signed","UTF8Decoder","UTF8ToString","maxBytesToRead","heapOrArray","idx","endIdx","endPtr","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","growMemory","pages","grow","codes","embind_init_charCodes","wasmImports","primitiveType","minRange","maxRange","h","trueValue","falseValue","wt","o","g","bitshift","isUnsignedType","includes","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","_free","valueIsOfTypeString","lengthBytesUTF8","base","_malloc","heap","outIdx","u","startIdx","stringToUTF8Array","charCode","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","isVoid","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","newSize","wasmExports","callback","info","receiveInstance","instance","module","exports","unshift","id","removeRunDependency","catch","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","calledRun","run","doRun","postRun","preRun","setTimeout","runCaller","RenderData","dataChanged","transformsChanged","colorTransformsChanged","_updating","_dirty","splatIndex","_splatIndices","_singleSplatIndices","_offsets","_singleOffsets","lookup","singlelookup","ceil","_transformsWidth","_transformsHeight","_transforms","_transformIndicesWidth","_transformIndicesHeight","_transformIndices","_colorTransformsWidth","_colorTransformsHeight","_colorTransformIndicesWidth","_colorTransformIndicesHeight","_colorTransformIndices","colorTransformIndices","_worker","DataWorker","updateTransform","updateColorTransforms","keys","colorTransform","colorTransformIndex","wasmModule","onmessage","worldPositions","worldRotations","worldScales","initWasm","buildImmediate","waitForWasm","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","renderedPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","_pack","outData","build","serializedSplat","postMessage","getSplat","key","getLocalIndex","markDirty","rebuild","clear","terminate","singleOffsets","transforms","transformsWidth","transformsHeight","transformIndices","transformIndicesWidth","transformIndicesHeight","colorTransformsWidth","colorTransformsHeight","colorTransformIndicesWidth","colorTransformIndicesHeight","needsRebuild","updating","Color32","flatNorm","toHexString","padStart","RenderProgram","_outlineThickness","_outlineColor","_renderData","_depthIndex","_splatTexture","canvas","u_projection","u_viewport","u_focal","u_view","u_texture","u_transforms","u_transformIndices","u_colorTransforms","u_colorTransformIndices","u_outlineThickness","u_outlineColor","positionAttribute","indexAttribute","transformsTexture","transformIndicesTexture","colorTransformsTexture","colorTransformIndicesTexture","vertexBuffer","indexBuffer","getUniformLocation","uniformMatrix4fv","uniform2fv","createWorker","SortWorker","depthIndex","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","handleObjectAdded","handleObjectRemoved","handleObjectChanged","handleRenderedSplatsChanged","uniform1f","outlineThickness","uniform4fv","outlineColor","createTexture","uniform1i","createBuffer","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","resetSplatData","_a","_b","renderData","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","splatTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","TEXTURE1","RGBA32F","RGBA","TEXTURE2","R32UI","RED_INTEGER","TEXTURE3","TEXTURE4","detachedPositions","detachedTransforms","detachedTransformIndices","sortData","viewport","clearColor","COLOR_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","vertexAttribIPointer","INT","vertexAttribDivisor","drawArraysInstanced","TRIANGLE_FAN","deleteTexture","deleteBuffer","_setOutlineThickness","_setOutlineColor","worker","FadeInPass","speed","renderProgram","u_useDepthFade","u_depthFade","active","WebGLRenderer","optionalCanvas","optionalRenderPasses","_backgroundColor","style","display","boxSizing","margin","padding","appendChild","background","_canvas","_gl","getContext","antialias","renderPasses","_renderProgram","_customPrograms","programs","clientWidth","clientHeight","addProgram","removeProgram","removeAllPrograms","backgroundColor","OrbitControls","beta","enableKeyboardControls","inputTarget","enabled","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","isUpdatingCamera","eulerRotation","newTarget","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","rx","ry","moveSpeed","rotateSpeed","stopPropagation","FPSControls","lookSpeed","pitch","yaw","targetPosition","pointerLock","requestPointerLock","onPointerLockChange","pointerLockElement","mouseX","movementX","mouseY","movementY","exitPointerLock","Plane","normal","constant","setComponents","intersect","denominator","inverseNormalLength","ShaderPass","VideoRenderProgram","u_time","setupWorker","dummyTransforms","dummyTransformIndices","BVHNode$1","BVHNode","boxes","pointIndices","left","leftIndices","rightIndices","queryRange","range","BVH","_","IntersectionTester","resolution","bvh","singleSplatLookup","testLayer","positiveDirection","splatBounds","testPoint","startTimeSplat","performance","duration","startTimeSingleSplat","singleSplatBoxes","singleSplatbounds","durationSingleSplat","minPoint","maxPoint","queryBox","testPointSingleSplats","obj","Ray","getPoint","CameraHelper","_cameraData","_frustumCorners","calculateFrustum","fovX","fovY","halfHeightNear","tan","halfWidthNear","halfHeightFar","halfWidthFar","nearTopLeft","nearTopRight","nearBottomLeft","nearBottomRight","farTopLeft","farTopRight","farBottomLeft","farBottomRight","cameraToWorldCoords","cameraCoords","pointInFrustum","planes","createPlane","ab","ac","FrustumPlane","CubeVisualisationProgram","u_color","corners","surface","x3","y3","z3","x4","y4","z4","x5","y5","z5","x6","y6","z6","x7","y7","z7","x8","y8","z8","colorLines","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","vertices","lineWidth","drawArrays","LINES","drawCubeLines","TRIANGLES","drawCube","Utils","draw","upperLeftCorner","bottomRightCorner","drawCone","vecs","Raycaster","buildBVH","testBox","point1","point2","testCameraViewFrustum","showFrustum","showForSeconds","camHelper","AxisProgram","xVertices","yVertices","zVertices","xColor","yColor","zColor","drawAxis","MultibleCubesProgram","upperLeftCorners","bottomRightCorners","tempAllCorners","tempAllSurface","numberOfCubes","allCorners","allsurface","OctreeHelper","intersectPlanes","p1","p2","p3","n1","n2","n3","c1","c2","c3","n2n3","n3n1","n1n2","Frustum","p0","p4","p5","setFromProjectionMatrix","me","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","plane","getFrustumPoints"],"mappings":"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AAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtIuE,GACIvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEnIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAEhIuE,IACKvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtIuE,GACIvE,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErIuE,IACKvE,EAAE,GAAKA,EAA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"}