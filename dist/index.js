class t{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}equals(t){return this.x===t.x&&(this.y===t.y&&this.z===t.z)}add(e){return"number"==typeof e?new t(this.x+e,this.y+e,this.z+e):new t(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return"number"==typeof e?new t(this.x-e,this.y-e,this.z-e):new t(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return"number"==typeof e?new t(this.x*e,this.y*e,this.z*e):e instanceof t?new t(this.x*e.x,this.y*e.y,this.z*e.z):new t(this.x*e.buffer[0]+this.y*e.buffer[4]+this.z*e.buffer[8]+e.buffer[12],this.x*e.buffer[1]+this.y*e.buffer[5]+this.z*e.buffer[9]+e.buffer[13],this.x*e.buffer[2]+this.y*e.buffer[6]+this.z*e.buffer[10]+e.buffer[14])}divide(e){return"number"==typeof e?new t(this.x/e,this.y/e,this.z/e):new t(this.x/e.x,this.y/e.y,this.z/e.z)}cross(e){const n=this.y*e.z-this.z*e.y,l=this.z*e.x-this.x*e.z,F=this.x*e.y-this.y*e.x;return new t(n,l,F)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lerp(e,n){return new t(this.x+(e.x-this.x)*n,this.y+(e.y-this.y)*n,this.z+(e.z-this.z)*n)}min(e){return new t(Math.min(this.x,e.x),Math.min(this.y,e.y),Math.min(this.z,e.z))}max(e){return new t(Math.max(this.x,e.x),Math.max(this.y,e.y),Math.max(this.z,e.z))}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(`Invalid component index: ${t}`)}}minComponent(){return this.x<this.y&&this.x<this.z?0:this.y<this.z?1:2}maxComponent(){return this.x>this.y&&this.x>this.z?0:this.y>this.z?1:2}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}distanceTo(t){return Math.sqrt((this.x-t.x)**2+(this.y-t.y)**2+(this.z-t.z)**2)}normalize(){const e=this.magnitude();return new t(this.x/e,this.y/e,this.z/e)}flat(){return[this.x,this.y,this.z]}clone(){return new t(this.x,this.y,this.z)}toString(){return`[${this.flat().join(", ")}]`}static One(e=1){return new t(e,e,e)}}class e{constructor(t=0,e=0,n=0,l=1){this.x=t,this.y=e,this.z=n,this.w=l}equals(t){return this.x===t.x&&(this.y===t.y&&(this.z===t.z&&this.w===t.w))}normalize(){const t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return new e(this.x/t,this.y/t,this.z/t,this.w/t)}multiply(t){const n=this.w,l=this.x,F=this.y,U=this.z,Q=t.w,i=t.x,d=t.y,a=t.z;return new e(n*i+l*Q+F*a-U*d,n*d-l*a+F*Q+U*i,n*a+l*d-F*i+U*Q,n*Q-l*i-F*d-U*a)}inverse(){const t=this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;return new e(-this.x/t,-this.y/t,-this.z/t,this.w/t)}apply(n){const l=new e(n.x,n.y,n.z,0),F=new e(-this.x,-this.y,-this.z,this.w),U=this.multiply(l).multiply(F);return new t(U.x,U.y,U.z)}flat(){return[this.x,this.y,this.z,this.w]}clone(){return new e(this.x,this.y,this.z,this.w)}static FromEuler(t){const n=t.x/2,l=t.y/2,F=t.z/2,U=Math.cos(l),Q=Math.sin(l),i=Math.cos(n),d=Math.sin(n),a=Math.cos(F),s=Math.sin(F);return new e(U*d*a+Q*i*s,Q*i*a-U*d*s,U*i*s-Q*d*a,U*i*a+Q*d*s)}toEuler(){const e=2*(this.w*this.x+this.y*this.z),n=1-2*(this.x*this.x+this.y*this.y),l=Math.atan2(e,n);let F;const U=2*(this.w*this.y-this.z*this.x);F=Math.abs(U)>=1?Math.sign(U)*Math.PI/2:Math.asin(U);const Q=2*(this.w*this.z+this.x*this.y),i=1-2*(this.y*this.y+this.z*this.z),d=Math.atan2(Q,i);return new t(l,F,d)}static FromMatrix3(t){const n=t.buffer,l=n[0]+n[4]+n[8];let F,U,Q,i;if(l>0){const t=.5/Math.sqrt(l+1);i=.25/t,F=(n[7]-n[5])*t,U=(n[2]-n[6])*t,Q=(n[3]-n[1])*t}else if(n[0]>n[4]&&n[0]>n[8]){const t=2*Math.sqrt(1+n[0]-n[4]-n[8]);i=(n[7]-n[5])/t,F=.25*t,U=(n[1]+n[3])/t,Q=(n[2]+n[6])/t}else if(n[4]>n[8]){const t=2*Math.sqrt(1+n[4]-n[0]-n[8]);i=(n[2]-n[6])/t,F=(n[1]+n[3])/t,U=.25*t,Q=(n[5]+n[7])/t}else{const t=2*Math.sqrt(1+n[8]-n[0]-n[4]);i=(n[3]-n[1])/t,F=(n[2]+n[6])/t,U=(n[5]+n[7])/t,Q=.25*t}return new e(F,U,Q,i)}static FromAxisAngle(t,n){const l=n/2,F=Math.sin(l),U=Math.cos(l);return new e(t.x*F,t.y*F,t.z*F,U)}static LookRotation(n){const l=new t(0,0,1),F=l.dot(n);if(Math.abs(F- -1)<1e-6)return new e(0,1,0,Math.PI);if(Math.abs(F-1)<1e-6)return new e;const U=Math.acos(F),Q=l.cross(n).normalize();return e.FromAxisAngle(Q,U)}toString(){return`[${this.flat().join(", ")}]`}}class n{constructor(){const t=new Map;this.addEventListener=(e,n)=>{t.has(e)||t.set(e,new Set),t.get(e).add(n)},this.removeEventListener=(e,n)=>{t.has(e)&&t.get(e).delete(n)},this.hasEventListener=(e,n)=>!!t.has(e)&&t.get(e).has(n),this.dispatchEvent=e=>{if(t.has(e.type))for(const n of t.get(e.type))n(e)}}}class l{constructor(t=1,e=0,n=0,l=0,F=0,U=1,Q=0,i=0,d=0,a=0,s=1,A=0,r=0,B=0,o=0,V=1){this.buffer=[t,e,n,l,F,U,Q,i,d,a,s,A,r,B,o,V]}equals(t){if(this.buffer.length!==t.buffer.length)return!1;if(this.buffer===t.buffer)return!0;for(let e=0;e<this.buffer.length;e++)if(this.buffer[e]!==t.buffer[e])return!1;return!0}multiply(t){const e=this.buffer,n=t.buffer;return new l(n[0]*e[0]+n[1]*e[4]+n[2]*e[8]+n[3]*e[12],n[0]*e[1]+n[1]*e[5]+n[2]*e[9]+n[3]*e[13],n[0]*e[2]+n[1]*e[6]+n[2]*e[10]+n[3]*e[14],n[0]*e[3]+n[1]*e[7]+n[2]*e[11]+n[3]*e[15],n[4]*e[0]+n[5]*e[4]+n[6]*e[8]+n[7]*e[12],n[4]*e[1]+n[5]*e[5]+n[6]*e[9]+n[7]*e[13],n[4]*e[2]+n[5]*e[6]+n[6]*e[10]+n[7]*e[14],n[4]*e[3]+n[5]*e[7]+n[6]*e[11]+n[7]*e[15],n[8]*e[0]+n[9]*e[4]+n[10]*e[8]+n[11]*e[12],n[8]*e[1]+n[9]*e[5]+n[10]*e[9]+n[11]*e[13],n[8]*e[2]+n[9]*e[6]+n[10]*e[10]+n[11]*e[14],n[8]*e[3]+n[9]*e[7]+n[10]*e[11]+n[11]*e[15],n[12]*e[0]+n[13]*e[4]+n[14]*e[8]+n[15]*e[12],n[12]*e[1]+n[13]*e[5]+n[14]*e[9]+n[15]*e[13],n[12]*e[2]+n[13]*e[6]+n[14]*e[10]+n[15]*e[14],n[12]*e[3]+n[13]*e[7]+n[14]*e[11]+n[15]*e[15])}clone(){const t=this.buffer;return new l(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}determinant(){const t=this.buffer;return t[12]*t[9]*t[6]*t[3]-t[8]*t[13]*t[6]*t[3]-t[12]*t[5]*t[10]*t[3]+t[4]*t[13]*t[10]*t[3]+t[8]*t[5]*t[14]*t[3]-t[4]*t[9]*t[14]*t[3]-t[12]*t[9]*t[2]*t[7]+t[8]*t[13]*t[2]*t[7]+t[12]*t[1]*t[10]*t[7]-t[0]*t[13]*t[10]*t[7]-t[8]*t[1]*t[14]*t[7]+t[0]*t[9]*t[14]*t[7]+t[12]*t[5]*t[2]*t[11]-t[4]*t[13]*t[2]*t[11]-t[12]*t[1]*t[6]*t[11]+t[0]*t[13]*t[6]*t[11]+t[4]*t[1]*t[14]*t[11]-t[0]*t[5]*t[14]*t[11]-t[8]*t[5]*t[2]*t[15]+t[4]*t[9]*t[2]*t[15]+t[8]*t[1]*t[6]*t[15]-t[0]*t[9]*t[6]*t[15]-t[4]*t[1]*t[10]*t[15]+t[0]*t[5]*t[10]*t[15]}invert(){const t=this.buffer,e=this.determinant();if(0===e)throw new Error("Matrix is not invertible.");const n=1/e;return new l(n*(t[5]*t[10]*t[15]-t[5]*t[11]*t[14]-t[9]*t[6]*t[15]+t[9]*t[7]*t[14]+t[13]*t[6]*t[11]-t[13]*t[7]*t[10]),n*(-t[1]*t[10]*t[15]+t[1]*t[11]*t[14]+t[9]*t[2]*t[15]-t[9]*t[3]*t[14]-t[13]*t[2]*t[11]+t[13]*t[3]*t[10]),n*(t[1]*t[6]*t[15]-t[1]*t[7]*t[14]-t[5]*t[2]*t[15]+t[5]*t[3]*t[14]+t[13]*t[2]*t[7]-t[13]*t[3]*t[6]),n*(-t[1]*t[6]*t[11]+t[1]*t[7]*t[10]+t[5]*t[2]*t[11]-t[5]*t[3]*t[10]-t[9]*t[2]*t[7]+t[9]*t[3]*t[6]),n*(-t[4]*t[10]*t[15]+t[4]*t[11]*t[14]+t[8]*t[6]*t[15]-t[8]*t[7]*t[14]-t[12]*t[6]*t[11]+t[12]*t[7]*t[10]),n*(t[0]*t[10]*t[15]-t[0]*t[11]*t[14]-t[8]*t[2]*t[15]+t[8]*t[3]*t[14]+t[12]*t[2]*t[11]-t[12]*t[3]*t[10]),n*(-t[0]*t[6]*t[15]+t[0]*t[7]*t[14]+t[4]*t[2]*t[15]-t[4]*t[3]*t[14]-t[12]*t[2]*t[7]+t[12]*t[3]*t[6]),n*(t[0]*t[6]*t[11]-t[0]*t[7]*t[10]-t[4]*t[2]*t[11]+t[4]*t[3]*t[10]+t[8]*t[2]*t[7]-t[8]*t[3]*t[6]),n*(t[4]*t[9]*t[15]-t[4]*t[11]*t[13]-t[8]*t[5]*t[15]+t[8]*t[7]*t[13]+t[12]*t[5]*t[11]-t[12]*t[7]*t[9]),n*(-t[0]*t[9]*t[15]+t[0]*t[11]*t[13]+t[8]*t[1]*t[15]-t[8]*t[3]*t[13]-t[12]*t[1]*t[11]+t[12]*t[3]*t[9]),n*(t[0]*t[5]*t[15]-t[0]*t[7]*t[13]-t[4]*t[1]*t[15]+t[4]*t[3]*t[13]+t[12]*t[1]*t[7]-t[12]*t[3]*t[5]),n*(-t[0]*t[5]*t[11]+t[0]*t[7]*t[9]+t[4]*t[1]*t[11]-t[4]*t[3]*t[9]-t[8]*t[1]*t[7]+t[8]*t[3]*t[5]),n*(-t[4]*t[9]*t[14]+t[4]*t[10]*t[13]+t[8]*t[5]*t[14]-t[8]*t[6]*t[13]-t[12]*t[5]*t[10]+t[12]*t[6]*t[9]),n*(t[0]*t[9]*t[14]-t[0]*t[10]*t[13]-t[8]*t[1]*t[14]+t[8]*t[2]*t[13]+t[12]*t[1]*t[10]-t[12]*t[2]*t[9]),n*(-t[0]*t[5]*t[14]+t[0]*t[6]*t[13]+t[4]*t[1]*t[14]-t[4]*t[2]*t[13]-t[12]*t[1]*t[6]+t[12]*t[2]*t[5]),n*(t[0]*t[5]*t[10]-t[0]*t[6]*t[9]-t[4]*t[1]*t[10]+t[4]*t[2]*t[9]+t[8]*t[1]*t[6]-t[8]*t[2]*t[5]))}static Compose(t,e,n){const F=e.x,U=e.y,Q=e.z,i=e.w,d=F+F,a=U+U,s=Q+Q,A=F*d,r=F*a,B=F*s,o=U*a,V=U*s,c=Q*s,R=i*d,Z=i*a,h=i*s,W=n.x,m=n.y,I=n.z;return new l((1-(o+c))*W,(r+h)*W,(B-Z)*W,0,(r-h)*m,(1-(A+c))*m,(V+R)*m,0,(B+Z)*I,(V-R)*I,(1-(A+o))*I,0,t.x,t.y,t.z,1)}toString(){return`[${this.buffer.join(", ")}]`}}class F extends Event{constructor(t){super("objectAdded"),this.object=t}}class U extends Event{constructor(t){super("objectRemoved"),this.object=t}}class Q extends Event{constructor(t){super("objectChanged"),this.object=t}}class i extends Event{constructor(t){super("renderedSplatsChanged"),this.object=t}}class d extends n{constructor(){super(),this.positionChanged=!1,this.rotationChanged=!1,this.scaleChanged=!1,this._position=new t,this._rotation=new e,this._scale=new t(1,1,1),this._transform=new l,this._changeEvent=new Q(this),this._renderedSplatsChanged=new i(this),this.update=()=>{},this.applyPosition=()=>{this.position=new t},this.applyRotation=()=>{this.rotation=new e},this.applyScale=()=>{this.scale=new t(1,1,1)},this.raiseChangeEvent=()=>{this.dispatchEvent(this._changeEvent)}}_updateMatrix(){this._transform=l.Compose(this._position,this._rotation,this._scale)}get position(){return this._position}set position(t){this._position.equals(t)||(this._position=t,this.positionChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get rotation(){return this._rotation}set rotation(t){this._rotation.equals(t)||(this._rotation=t,this.rotationChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get scale(){return this._scale}set scale(t){this._scale.equals(t)||(this._scale=t,this.scaleChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get forward(){let e=new t(0,0,1);return e=this.rotation.apply(e),e}get transform(){return this._transform}}class a{constructor(t=0,e=null,n=null,l=null,F=null){this.changed=!1,this.detached=!1,this._vertexCount=t,this._positions=e||new Float32Array(0),this._rotations=n||new Float32Array(0),this._scales=l||new Float32Array(0),this._colors=F||new Uint8Array(0),this._selection=new Uint8Array(this.vertexCount),this.removeVertex=t=>{if(t<0||t>=this._vertexCount)throw new Error("Index out od bounds");this._positions=this.removeItemsFromArray(this._positions,3*t,3),this._rotations=this.removeItemsFromArray(this._rotations,4*t,4),this._scales=this.removeItemsFromArray(this._scales,3*t,3),this._colors=this.removeItemsFromArray(this._colors,4*t,4),this._vertexCount--,this.changed=!0},this.removeVertexRange=(t,e)=>{if(t<0||t+e>this._vertexCount)throw new Error("Index range out of bounds");this._positions=this.removeItemsFromArray(this._positions,3*t,3*e),this._rotations=this.removeItemsFromArray(this._rotations,4*t,4*e),this._scales=this.removeItemsFromArray(this._scales,3*t,3*e),this._colors=this.removeItemsFromArray(this._colors,4*t,4*e),this._vertexCount-=e,this.changed=!0},this.removeItemsFromArray=(t,e,n)=>{let l=t.subarray(0,e),F=t.subarray(e+n,t.length),U=new t.constructor(l.length+F.length);return U.set(l,0),U.set(F,l.length),U},this.serialize=()=>{const t=new Uint8Array(this.vertexCount*a.RowLength),e=new Float32Array(t.buffer),n=new Uint8Array(t.buffer);for(let t=0;t<this.vertexCount;t++)e[8*t+0]=this.positions[3*t+0],e[8*t+1]=this.positions[3*t+1],e[8*t+2]=this.positions[3*t+2],n[32*t+24+0]=this.colors[4*t+0],n[32*t+24+1]=this.colors[4*t+1],n[32*t+24+2]=this.colors[4*t+2],n[32*t+24+3]=this.colors[4*t+3],e[8*t+3+0]=this.scales[3*t+0],e[8*t+3+1]=this.scales[3*t+1],e[8*t+3+2]=this.scales[3*t+2],n[32*t+28+0]=128*this.rotations[4*t+0]+128&255,n[32*t+28+1]=128*this.rotations[4*t+1]+128&255,n[32*t+28+2]=128*this.rotations[4*t+2]+128&255,n[32*t+28+3]=128*this.rotations[4*t+3]+128&255;return t},this.reattach=(t,e,n,l,F)=>{console.assert(t.byteLength===3*this.vertexCount*4,`Expected ${3*this.vertexCount*4} bytes, got ${t.byteLength} bytes`),this._positions=new Float32Array(t),this._rotations=new Float32Array(e),this._scales=new Float32Array(n),this._colors=new Uint8Array(l),this._selection=new Uint8Array(F),this.detached=!1}}static Deserialize(t){const e=t.length/a.RowLength,n=new Float32Array(3*e),l=new Float32Array(4*e),F=new Float32Array(3*e),U=new Uint8Array(4*e),Q=new Float32Array(t.buffer),i=new Uint8Array(t.buffer);for(let t=0;t<e;t++)n[3*t+0]=Q[8*t+0],n[3*t+1]=Q[8*t+1],n[3*t+2]=Q[8*t+2],l[4*t+0]=(i[32*t+28+0]-128)/128,l[4*t+1]=(i[32*t+28+1]-128)/128,l[4*t+2]=(i[32*t+28+2]-128)/128,l[4*t+3]=(i[32*t+28+3]-128)/128,F[3*t+0]=Q[8*t+3+0],F[3*t+1]=Q[8*t+3+1],F[3*t+2]=Q[8*t+3+2],U[4*t+0]=i[32*t+24+0],U[4*t+1]=i[32*t+24+1],U[4*t+2]=i[32*t+24+2],U[4*t+3]=i[32*t+24+3];return new a(e,n,l,F,U)}get vertexCount(){return this._vertexCount}get positions(){return this._positions}get rotations(){return this._rotations}get scales(){return this._scales}get colors(){return this._colors}get selection(){return this._selection}}a.RowLength=32;class s{constructor(t,e,n,l,F){this._vertexCount=t,this._positions=e,this._data=n,this._width=l,this._height=F,this.serialize=()=>new Uint8Array(this._data.buffer)}static Deserialize(t,e,n){const l=new Uint32Array(t.buffer),F=new Float32Array(t.buffer),U=Math.floor(F.byteLength/this.RowLength),Q=new Float32Array(3*U);for(let t=0;t<U;t++)Q[3*t+0]=F[16*t+0],Q[3*t+1]=F[16*t+1],Q[3*t+2]=F[16*t+2],Q[3*t+0]=F[16*t+3];return new s(U,Q,l,e,n)}get vertexCount(){return this._vertexCount}get positions(){return this._positions}get data(){return this._data}get width(){return this._width}get height(){return this._height}}s.RowLength=64;class A{static SplatToPLY(t,n){let l="ply\nformat binary_little_endian 1.0\n";l+=`element vertex ${n}\n`;const F=["x","y","z","nx","ny","nz","f_dc_0","f_dc_1","f_dc_2"];for(let t=0;t<45;t++)F.push(`f_rest_${t}`);F.push("opacity"),F.push("scale_0"),F.push("scale_1"),F.push("scale_2"),F.push("rot_0"),F.push("rot_1"),F.push("rot_2"),F.push("rot_3");for(const t of F)l+=`property float ${t}\n`;l+="end_header\n";const U=(new TextEncoder).encode(l),Q=248,i=n*Q,d=new DataView(new ArrayBuffer(U.length+i));new Uint8Array(d.buffer).set(U,0);const a=new Float32Array(t),s=new Uint8Array(t),A=U.length,r=220,B=232;for(let t=0;t<n;t++){const n=a[8*t+0],l=a[8*t+1],F=a[8*t+2],U=(s[32*t+24+0]/255-.5)/this.SH_C0,i=(s[32*t+24+1]/255-.5)/this.SH_C0,o=(s[32*t+24+2]/255-.5)/this.SH_C0,V=s[32*t+24+3]/255,c=Math.log(V/(1-V)),R=Math.log(a[8*t+3+0]),Z=Math.log(a[8*t+3+1]),h=Math.log(a[8*t+3+2]);let W=new e((s[32*t+28+1]-128)/128,(s[32*t+28+2]-128)/128,(s[32*t+28+3]-128)/128,(s[32*t+28+0]-128)/128);W=W.normalize();const m=W.w,I=W.x,g=W.y,b=W.z;d.setFloat32(A+Q*t+0,n,!0),d.setFloat32(A+Q*t+4,l,!0),d.setFloat32(A+Q*t+8,F,!0),d.setFloat32(A+Q*t+24+0,U,!0),d.setFloat32(A+Q*t+24+4,i,!0),d.setFloat32(A+Q*t+24+8,o,!0),d.setFloat32(A+Q*t+216,c,!0),d.setFloat32(A+Q*t+r+0,R,!0),d.setFloat32(A+Q*t+r+4,Z,!0),d.setFloat32(A+Q*t+r+8,h,!0),d.setFloat32(A+Q*t+B+0,m,!0),d.setFloat32(A+Q*t+B+4,I,!0),d.setFloat32(A+Q*t+B+8,g,!0),d.setFloat32(A+Q*t+B+12,b,!0)}return d.buffer}}A.SH_C0=.28209479177387814;class r{constructor(t,e){this.min=t,this.max=e}contains(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}intersects(t){return this.max.x>=t.min.x&&this.min.x<=t.max.x&&this.max.y>=t.min.y&&this.min.y<=t.max.y&&this.max.z>=t.min.z&&this.min.z<=t.max.z}intersectsBasedOnCenter(t){const e=this.center(),n=t.center(),l=this.size(),F=t.size();return Math.abs(e.x-n.x)<=l.x/2+F.x/2&&Math.abs(e.y-n.y)<=l.y/2+F.y/2&&Math.abs(e.z-n.z)<=l.z/2+F.z/2}size(){return this.max.subtract(this.min)}center(){return this.min.add(this.max).divide(2)}expand(t){this.min=this.min.min(t),this.max=this.max.max(t)}permute(){const e=this.min,n=this.max;this.min=new t(Math.min(e.x,n.x),Math.min(e.y,n.y),Math.min(e.z,n.z)),this.max=new t(Math.max(e.x,n.x),Math.max(e.y,n.y),Math.max(e.z,n.z))}surfaceArea(){const t=this.max.x-this.min.x,e=this.max.y-this.min.y,n=this.max.z-this.min.z;return 2*(t*e+t*n+e*n)}}class B{constructor(t=1,e=0,n=0,l=0,F=1,U=0,Q=0,i=0,d=1){this.buffer=[t,e,n,l,F,U,Q,i,d]}equals(t){if(this.buffer.length!==t.buffer.length)return!1;if(this.buffer===t.buffer)return!0;for(let e=0;e<this.buffer.length;e++)if(this.buffer[e]!==t.buffer[e])return!1;return!0}multiply(t){const e=this.buffer,n=t.buffer;return new B(n[0]*e[0]+n[3]*e[1]+n[6]*e[2],n[1]*e[0]+n[4]*e[1]+n[7]*e[2],n[2]*e[0]+n[5]*e[1]+n[8]*e[2],n[0]*e[3]+n[3]*e[4]+n[6]*e[5],n[1]*e[3]+n[4]*e[4]+n[7]*e[5],n[2]*e[3]+n[5]*e[4]+n[8]*e[5],n[0]*e[6]+n[3]*e[7]+n[6]*e[8],n[1]*e[6]+n[4]*e[7]+n[7]*e[8],n[2]*e[6]+n[5]*e[7]+n[8]*e[8])}clone(){const t=this.buffer;return new B(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])}static Eye(t=1){return new B(t,0,0,0,t,0,0,0,t)}static Diagonal(t){return new B(t.x,0,0,0,t.y,0,0,0,t.z)}static RotationFromQuaternion(t){return new B(1-2*t.y*t.y-2*t.z*t.z,2*t.x*t.y-2*t.z*t.w,2*t.x*t.z+2*t.y*t.w,2*t.x*t.y+2*t.z*t.w,1-2*t.x*t.x-2*t.z*t.z,2*t.y*t.z-2*t.x*t.w,2*t.x*t.z-2*t.y*t.w,2*t.y*t.z+2*t.x*t.w,1-2*t.x*t.x-2*t.y*t.y)}static RotationFromEuler(t){const e=Math.cos(t.x),n=Math.sin(t.x),l=Math.cos(t.y),F=Math.sin(t.y),U=Math.cos(t.z),Q=Math.sin(t.z);return new B(...[l*U+F*n*Q,-l*Q+F*n*U,F*e,e*Q,e*U,-n,-F*U+l*n*Q,F*Q+l*n*U,l*e])}toString(){return`[${this.buffer.join(", ")}]`}}class o{constructor(n,l,F,U){this.changed=!1,this._colorTransforms=[],this._colorTransformsMap=new Map,this._position=n,this._rotation=l,this._scale=F,this._color=U,this._defaultColor=U,this._selected=new Uint8Array([0]),this._rendered=new Uint8Array([1]),this._bounds=new r(new t(1/0,1/0,1/0),new t(-1/0,-1/0,-1/0)),this.recalculateBounds=()=>{let e=new t(this._position[0]-this._scale[0],this._position[1]-this._scale[1],this._position[2]-this._scale[2]),n=new t(this._position[0]+this._scale[0],this._position[1]+this._scale[1],this._position[2]+this._scale[2]);this._bounds.min=e,this._bounds.max=n},this.translate=t=>{this._position[0]+=t.x,this._position[1]+=t.y,this._position[2]+=t.z,this.changed=!0},this.rotate=t=>{const n=B.RotationFromQuaternion(t).buffer,l=this._position[0],F=this._position[1],U=this._position[2];this._position[0]=n[0]*l+n[1]*F+n[2]*U,this._position[1]=n[3]*l+n[4]*F+n[5]*U,this._position[2]=n[6]*l+n[7]*F+n[8]*U;const Q=new e(this._rotation[1],this._rotation[2],this._rotation[3],this._rotation[0]),i=t.multiply(Q);this._rotation[1]=i.x,this._rotation[2]=i.y,this._rotation[3]=i.z,this._rotation[0]=i.w,this.changed=!0},this.scale=t=>{this._position[0]*=t.x,this._position[1]*=t.y,this._position[2]*=t.z,this._scale[0]*=t.x,this._scale[1]*=t.y,this._scale[2]*=t.z,this.changed=!0},this.recalculateBounds()}reattach(t,e,n,l,F){this._position=t,this._rotation=e,this._scale=n,this._color=l,this._selected=F}Select(t){this._selected[0]=t?1:0}SelectAsync(t){return new Promise(((e,n)=>{try{this._selected[0]=t?1:0}catch(t){n(t)}}))}Render(t){this._rendered[0]=t?1:0}ChangeColor(t){if(void 0===t)return void(this._color=this._defaultColor);let e=new Uint8Array([t.x,t.y,t.z,t.w]);this._color=e}get bounds(){return this._bounds}get PositionVec3(){return new t(this._position[0],this._position[1],this._position[2])}get Position(){return this._position}get Scale(){return this._scale}get ScaleVec3(){return new t(this._scale[0],this._scale[1],this._scale[2])}get Color(){return this._color}get Rotation(){return this._rotation}get Selection(){return this._selected}get Rendered(){return this._rendered}}class V{}V.BYTE_OFFSET_FLOAT=4,V.BYTE_OFFSET_DOUBLE=8,V.BYTE_OFFSET_INT=4;class c extends d{constructor(n=void 0){super(),this.selectedChanged=!1,this.renderNumberChanged=!1,this.colorTransformChanged=!1,this._splats=[],this._selected=!1,this._colorTransforms=[],this._colorTransformsMap=new Map,this.serialize=()=>{const t=new Uint8Array(this._numberOfSplats*a.RowLength),e=new Float32Array(t.buffer),n=new Uint8Array(t.buffer);for(let t=0;t<this._numberOfSplats;t++)e[8*t+0]=this._splats[t].Position[0],e[8*t+1]=this._splats[t].Position[1],e[8*t+2]=this._splats[t].Position[2],n[32*t+24+0]=this._splats[t].Color[0],n[32*t+24+1]=this._splats[t].Color[1],n[32*t+24+2]=this._splats[t].Color[2],n[32*t+24+3]=this._splats[t].Color[3],e[8*t+3+0]=this._splats[t].Scale[0],e[8*t+3+1]=this._splats[t].Scale[1],e[8*t+3+2]=this._splats[t].Scale[2],n[32*t+28+0]=128*this._splats[t].Rotation[0]+128&255,n[32*t+28+1]=128*this._splats[t].Rotation[1]+128&255,n[32*t+28+2]=128*this._splats[t].Rotation[2]+128&255,n[32*t+28+3]=128*this._splats[t].Rotation[3]+128&255;return t},this.reattach=(t,e,n,l,F)=>{console.assert(t.byteLength===3*this._numberOfRenderedSplats*4,`Expected ${3*this._numberOfRenderedSplats*4} bytes, got ${t.byteLength} bytes`);for(let U=0;U<this._numberOfSplats;U++)if(1===this._splats[U].Rendered[0]){let Q=new Float32Array(t,3*U*V.BYTE_OFFSET_FLOAT,3),i=new Float32Array(e,4*U*V.BYTE_OFFSET_FLOAT,4),d=new Float32Array(n,3*U*V.BYTE_OFFSET_FLOAT,3),a=new Uint8Array(l,1*U*V.BYTE_OFFSET_INT,4),s=new Uint8Array(F,U,1);this._splats[U].reattach(Q,i,d,a,s)}this._data.detached=!1},this._splats=new Array,this._data=n||new a,this._bounds=new r(new t(1/0,1/0,1/0),new t(-1/0,-1/0,-1/0)),this._numberOfSplats=0,this._numberOfRenderedSplats=0,this.createSplatsData=()=>{if(null!=n){this._numberOfSplats=n.vertexCount,this._numberOfRenderedSplats=n.vertexCount;for(let t=0;t<n.vertexCount;t++){let e=new Float32Array(n.positions.buffer,3*t*V.BYTE_OFFSET_FLOAT,3),l=new Float32Array(n.rotations.buffer,4*t*V.BYTE_OFFSET_FLOAT,4),F=new Float32Array(n.scales.buffer,3*t*V.BYTE_OFFSET_FLOAT,3),U=new Uint8Array(n.colors.buffer,1*t*V.BYTE_OFFSET_INT,4),Q=new o(e,l,F,U);this._splats.push(Q)}}},this.recalculateBounds=()=>{for(let t=0;t<this._numberOfSplats;t++)this._bounds.expand(this._splats[t].PositionVec3)},this.applyPosition=()=>{this._splats.forEach(((t,e)=>{t.translate(this.position)})),this.position=new t,this.data.changed=!0},this.applyRotation=()=>{this._splats.forEach(((t,e)=>{t.rotate(this.rotation)})),this.rotation=new e,this.data.changed=!0},this.applyScale=()=>{this._splats.forEach(((t,e)=>{t.scale(this.scale)})),this.scale=new t(1,1,1)},this.createSplatsData(),this.data.changed=!0}saveToFile(t=null,e=null){if(!document)return;if(e){if("splat"!==e&&"ply"!==e)throw new Error("Invalid format. Must be 'splat' or 'ply'")}else e="splat";if(!t){const n=new Date;t=`splat-${n.getFullYear()}-${n.getMonth()+1}-${n.getDate()}.${e}`}this.applyRotation(),this.applyScale(),this.applyPosition();const n=this.serialize();let l;if("ply"===e){const t=A.SplatToPLY(n.buffer,this._numberOfSplats);l=new Blob([t],{type:"application/octet-stream"})}else l=new Blob([n.buffer],{type:"application/octet-stream"});const F=document.createElement("a");F.download=t,F.href=URL.createObjectURL(l),F.click()}get data(){return this._data}get splats(){return this._splats}getSplatAtIndex(t){if(!(t<0||t>=this._numberOfSplats))return this._splats[t];console.error("Index out of bounds")}get selected(){return this._selected}set selected(t){this._selected!==t&&(this._selected=t,this.selectedChanged=!0,this.dispatchEvent(this._changeEvent))}selectSplat(t,e){this._splats[t].Select(e),this.selectedChanged=e,this.dispatchEvent(this._changeEvent)}renderSplat(t,e){e&&0===this._splats[t].Rendered[0]?this._numberOfRenderedSplats+=1:e||1!==this._splats[t].Rendered[0]||(this._numberOfRenderedSplats-=1),this._splats[t].Render(e)}updateRenderingOfSplats(){this.dispatchEvent(this._renderedSplatsChanged)}get colorTransforms(){return this._colorTransforms}get colorTransformsMap(){return this._colorTransformsMap}get bounds(){let t=this._bounds.center();t=t.add(this.position);let e=this._bounds.size();return e=e.multiply(this.scale),new r(t.subtract(e.divide(2)),t.add(e.divide(2)))}get splatCount(){return this._numberOfSplats}get numberOfRenderedSplats(){return this._numberOfRenderedSplats}get Positions(){let t=new Float32Array(3*this._numberOfRenderedSplats),e=0;this._splats.forEach(((n,l)=>{1===n.Rendered[0]&&(t.set(n.Position,3*l),e++)}));let n=new Float32Array(3*e);return n.set(t.subarray(0,3*e)),n}get Scales(){let t=new Float32Array(3*this._numberOfRenderedSplats),e=0;this._splats.forEach(((n,l)=>{1===n.Rendered[0]&&(t.set(n.Scale,3*l),e++)}));let n=new Float32Array(3*e);return n.set(t.subarray(0,3*e)),n}get Rotations(){let t=new Float32Array(4*this._numberOfRenderedSplats),e=0;this._splats.forEach(((n,l)=>{1===n.Rendered[0]&&(t.set(n.Rotation,4*l),e++)}));let n=new Float32Array(4*e);return n.set(t.subarray(0,4*e)),n}get Colors(){let t=new Uint8Array(4*this._numberOfRenderedSplats),e=0;this._splats.forEach(((n,l)=>{1===n.Rendered[0]&&(t.set(n.Color,4*l),e++)}));let n=new Float32Array(4*e);return n.set(t.subarray(0,4*e)),n}get Selections(){let t=new Uint8Array(this._numberOfRenderedSplats),e=0;this._splats.forEach(((n,l)=>{1===n.Rendered[0]&&(t.set(n.Selection,l),n.Selection[0],e++)}));let n=new Float32Array(e);return n.set(t.subarray(0,e)),n}}class R extends d{constructor(t){super(),this._data=t}get data(){return this._data}}class Z{constructor(){this._fx=1132,this._fy=1132,this._near=.1,this._far=30,this._width=512,this._height=512,this._projectionMatrix=new l,this._viewMatrix=new l,this._viewProj=new l,this._updateProjectionMatrix=()=>{this._projectionMatrix=new l(2*this.fx/this.width,0,0,0,0,-2*this.fy/this.height,0,0,0,0,this.far/(this.far-this.near),1,0,0,-this.far*this.near/(this.far-this.near),0),this._viewProj=this.projectionMatrix.multiply(this.viewMatrix)},this.update=(t,e)=>{const n=B.RotationFromQuaternion(e).buffer,F=t.flat();this._viewMatrix=new l(n[0],n[1],n[2],0,n[3],n[4],n[5],0,n[6],n[7],n[8],0,-F[0]*n[0]-F[1]*n[3]-F[2]*n[6],-F[0]*n[1]-F[1]*n[4]-F[2]*n[7],-F[0]*n[2]-F[1]*n[5]-F[2]*n[8],1),this._viewProj=this.projectionMatrix.multiply(this.viewMatrix)},this.setSize=(t,e)=>{this._width=t,this._height=e,this._updateProjectionMatrix()}}get fx(){return this._fx}set fx(t){this._fx!==t&&(this._fx=t,this._updateProjectionMatrix())}get fy(){return this._fy}set fy(t){this._fy!==t&&(this._fy=t,this._updateProjectionMatrix())}get near(){return this._near}set near(t){this._near!==t&&(this._near=t,this._updateProjectionMatrix())}get far(){return this._far}set far(t){this._far!==t&&(this._far=t,this._updateProjectionMatrix())}get width(){return this._width}get height(){return this._height}get projectionMatrix(){return this._projectionMatrix}get viewMatrix(){return this._viewMatrix}get viewProj(){return this._viewProj}}class h{constructor(t=0,e=0,n=0,l=0){this.x=t,this.y=e,this.z=n,this.w=l}equals(t){return this.x===t.x&&(this.y===t.y&&(this.z===t.z&&this.w===t.w))}add(t){return"number"==typeof t?new h(this.x+t,this.y+t,this.z+t,this.w+t):new h(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)}subtract(t){return"number"==typeof t?new h(this.x-t,this.y-t,this.z-t,this.w-t):new h(this.x-t.x,this.y-t.y,this.z-t.z,this.w-t.w)}multiply(t){return"number"==typeof t?new h(this.x*t,this.y*t,this.z*t,this.w*t):t instanceof h?new h(this.x*t.x,this.y*t.y,this.z*t.z,this.w*t.w):new h(this.x*t.buffer[0]+this.y*t.buffer[4]+this.z*t.buffer[8]+this.w*t.buffer[12],this.x*t.buffer[1]+this.y*t.buffer[5]+this.z*t.buffer[9]+this.w*t.buffer[13],this.x*t.buffer[2]+this.y*t.buffer[6]+this.z*t.buffer[10]+this.w*t.buffer[14],this.x*t.buffer[3]+this.y*t.buffer[7]+this.z*t.buffer[11]+this.w*t.buffer[15])}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lerp(t,e){return new h(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e,this.z+(t.z-this.z)*e,this.w+(t.w-this.w)*e)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}distanceTo(t){return Math.sqrt((this.x-t.x)**2+(this.y-t.y)**2+(this.z-t.z)**2+(this.w-t.w)**2)}normalize(){const t=this.magnitude();return new h(this.x/t,this.y/t,this.z/t,this.w/t)}flat(){return[this.x,this.y,this.z,this.w]}clone(){return new h(this.x,this.y,this.z,this.w)}toString(){return`[${this.flat().join(", ")}]`}}class W extends d{constructor(e=void 0){super(),this._data=e||new Z,this._position=new t(0,0,-5),this.update=()=>{this.data.update(this.position,this.rotation)},this.screenPointToRay=(e,n)=>{const l=new h(e,n,-1,1),F=this._data.projectionMatrix.invert(),U=l.multiply(F),Q=this._data.viewMatrix.invert(),i=U.multiply(Q);return new t(i.x/i.w,i.y/i.w,i.z/i.w).subtract(this.position).normalize()}}get data(){return this._data}}class m extends n{constructor(){super(),this._objects=[],this.addObject=t=>{this.objects.push(t),this.dispatchEvent(new F(t))},this.removeObject=t=>{const e=this.objects.indexOf(t);if(e<0)throw new Error("Object not found in scene");this.objects.splice(e,1),this.dispatchEvent(new U(t))},this.findObject=t=>{for(const e of this.objects)if(t(e))return e},this.findObjectOfType=t=>{for(const e of this.objects)if(e instanceof t)return e},this.reset=()=>{const t=this.objects.slice();for(const e of t)this.removeObject(e)},this.reset()}saveToFile(t=null,e=null){if(!document)return;if(e){if("splat"!==e&&"ply"!==e)throw new Error("Invalid format. Must be 'splat' or 'ply'")}else e="splat";if(!t){const n=new Date;t=`scene-${n.getFullYear()}-${n.getMonth()+1}-${n.getDate()}.${e}`}const n=[];let l=0;for(const t of this.objects)if(t.applyRotation(),t.applyScale(),t.applyPosition(),t instanceof c){const e=t.serialize();n.push(e),l+=t.splatCount}const F=new Uint8Array(l*a.RowLength);let U,Q=0;for(const t of n)F.set(t,Q),Q+=t.length;if("ply"===e){const t=A.SplatToPLY(F.buffer,l);U=new Blob([t],{type:"application/octet-stream"})}else U=new Blob([F.buffer],{type:"application/octet-stream"});const i=document.createElement("a");i.download=t,i.href=URL.createObjectURL(U),i.click()}get objects(){return this._objects}}async function I(t,e){const n=await fetch(t,{mode:"cors",credentials:"omit",cache:e?"force-cache":"default"});if(200!=n.status)throw new Error(n.status+" Unable to load "+n.url);return n}async function g(t,e){return t.headers.has("content-length")?async function(t,e){const n=t.body.getReader(),l=parseInt(t.headers.get("content-length")),F=new Uint8Array(l);let U=0;for(;;){const{done:t,value:Q}=await n.read();if(t)break;F.set(Q,U),U+=Q.length,null==e||e(U/l)}return F}(t,e):async function(t,e){const n=t.body.getReader(),l=[];let F=0;for(;;){const{done:t,value:e}=await n.read();if(t)break;l.push(e),F+=e.length}const U=new Uint8Array(F);let Q=0;for(const t of l)U.set(t,Q),Q+=t.length,null==e||e(Q/F);return U}(t,e)}class b{static async LoadAsync(t,e,n,l=!1){const F=await I(t,l),U=await g(F,n);return this.LoadFromArrayBuffer(U,e)}static async LoadFromFileAsync(t,e,n){const l=new FileReader;let F=new c;return l.onload=t=>{F=this.LoadFromArrayBuffer(t.target.result,e)},l.onprogress=t=>{null==n||n(t.loaded/t.total)},l.readAsArrayBuffer(t),await new Promise((t=>{l.onloadend=()=>{t()}})),F}static LoadFromArrayBuffer(t,e){const n=new Uint8Array(t),l=a.Deserialize(n),F=new c(l);return e.addObject(F),F}}class J{static async LoadAsync(t,e,n,l="",F=!1){const U=await I(t,F),Q=await g(U,n);if(112!==Q[0]||108!==Q[1]||121!==Q[2]||10!==Q[3])throw new Error("Invalid PLY file");return this.LoadFromArrayBuffer(Q.buffer,e,l)}static async LoadFromFileAsync(t,e,n,l=""){const F=new FileReader;let U=new c;return F.onload=t=>{U=this.LoadFromArrayBuffer(t.target.result,e,l)},F.onprogress=t=>{null==n||n(t.loaded/t.total)},F.readAsArrayBuffer(t),await new Promise((t=>{F.onloadend=()=>{t()}})),U}static LoadFromArrayBuffer(t,e,n=""){const l=new Uint8Array(this._ParsePLYBuffer(t,n)),F=a.Deserialize(l),U=new c(F);return e.addObject(U),U}static _ParsePLYBuffer(n,l){const F=new Uint8Array(n),U=(new TextDecoder).decode(F.slice(0,10240)),Q="end_header\n",i=U.indexOf(Q);if(i<0)throw new Error("Unable to read .ply file header");const d=parseInt(/element vertex (\d+)\n/.exec(U)[1]);let s=0;const r={double:8,int:4,uint:4,float:4,short:2,ushort:2,uchar:1},B=[];for(const t of U.slice(0,i).split("\n").filter((t=>t.startsWith("property ")))){const[e,n,l]=t.split(" ");if(B.push({name:l,type:n,offset:s}),!r[n])throw new Error(`Unsupported property type: ${n}`);s+=r[n]}const o=new DataView(n,i+11),V=new ArrayBuffer(a.RowLength*d),c=e.FromEuler(new t(Math.PI/2,0,0));for(let t=0;t<d;t++){const n=new Float32Array(V,t*a.RowLength,3),F=new Float32Array(V,t*a.RowLength+12,3),U=new Uint8ClampedArray(V,t*a.RowLength+24,4),Q=new Uint8ClampedArray(V,t*a.RowLength+28,4);let i=255,d=0,r=0,R=0;B.forEach((e=>{let l;switch(e.type){case"float":l=o.getFloat32(e.offset+t*s,!0);break;case"int":l=o.getInt32(e.offset+t*s,!0);break;default:throw new Error(`Unsupported property type: ${e.type}`)}switch(e.name){case"x":n[0]=l;break;case"y":n[1]=l;break;case"z":n[2]=l;break;case"scale_0":case"scaling_0":F[0]=Math.exp(l);break;case"scale_1":case"scaling_1":F[1]=Math.exp(l);break;case"scale_2":case"scaling_2":F[2]=Math.exp(l);break;case"red":U[0]=l;break;case"green":U[1]=l;break;case"blue":U[2]=l;break;case"f_dc_0":case"features_0":U[0]=255*(.5+A.SH_C0*l);break;case"f_dc_1":case"features_1":U[1]=255*(.5+A.SH_C0*l);break;case"f_dc_2":case"features_2":U[2]=255*(.5+A.SH_C0*l);break;case"f_dc_3":U[3]=255*(.5+A.SH_C0*l);break;case"opacity":case"opacity_0":U[3]=1/(1+Math.exp(-l))*255;break;case"rot_0":case"rotation_0":i=l;break;case"rot_1":case"rotation_1":d=l;break;case"rot_2":case"rotation_2":r=l;break;case"rot_3":case"rotation_3":R=l}}));let Z=new e(d,r,R,i);switch(l){case"polycam":{const t=n[1];n[1]=-n[2],n[2]=t,Z=c.multiply(Z);break}case"":break;default:throw new Error(`Unsupported format: ${l}`)}Z=Z.normalize(),Q[0]=128*Z.w+128,Q[1]=128*Z.x+128,Q[2]=128*Z.y+128,Q[3]=128*Z.z+128}return V}}class C{static async LoadAsync(t,e,n,l,F=!1){const U=await I(t,F),Q=await g(U,l);return this._ParseSplatvBuffer(Q.buffer,e,n)}static async LoadFromFileAsync(t,e,n,l){const F=new FileReader;let U=null;if(F.onload=t=>{U=this._ParseSplatvBuffer(t.target.result,e,n)},F.onprogress=t=>{null==l||l(t.loaded/t.total)},F.readAsArrayBuffer(t),await new Promise((t=>{F.onloadend=()=>{t()}})),!U)throw new Error("Failed to load splatv file");return U}static _ParseSplatvBuffer(n,l,F){let U=null;const Q=(n,Q,i)=>{if("magic"===n.type){const t=new Int32Array(Q.buffer);if(26443!==t[0])throw new Error("Invalid splatv file");i.push({size:t[1],type:"chunks"})}else if("chunks"===n.type){const n=JSON.parse(new TextDecoder("utf-8").decode(Q));if(0==n.length)throw new Error("Invalid splatv file");n.length>1&&console.warn("Splatv file contains more than one chunk, only the first one will be loaded");const l=n[0],U=l.cameras;if(F&&U&&U.length){const n=U[0],l=new t(n.position[0],n.position[1],n.position[2]),Q=e.FromMatrix3(new B(n.rotation[0][0],n.rotation[0][1],n.rotation[0][2],n.rotation[1][0],n.rotation[1][1],n.rotation[1][2],n.rotation[2][0],n.rotation[2][1],n.rotation[2][2]));F.position=l,F.rotation=Q}i.push(l)}else if("splat"===n.type){const t=s.Deserialize(Q,n.texwidth,n.texheight),e=new R(t);l.addObject(e),U=e}},i=new Uint8Array(n),d=[{size:8,type:"magic",texwidth:0,texheight:0}];let a=d.shift(),A=new Uint8Array(a.size),r=0,o=0;for(;a;){for(;r<a.size;){const t=Math.min(a.size-r,i.length-o);A.set(i.subarray(o,o+t),r),r+=t,o+=t}if(Q(a,A,d),U)return U;a=d.shift(),a&&(A=new Uint8Array(a.size),r=0)}throw new Error("Invalid splatv file")}}function N(t,e,n){var l=void 0===e?null:e,F=function(t,e){var n=atob(t);if(e){for(var l=new Uint8Array(n.length),F=0,U=n.length;F<U;++F)l[F]=n.charCodeAt(F);return String.fromCharCode.apply(null,new Uint16Array(l.buffer))}return n}(t,void 0!==n&&n),U=F.indexOf("\n",10)+1,Q=F.substring(U)+(l?"//# sourceMappingURL="+l:""),i=new Blob([Q],{type:"application/javascript"});return URL.createObjectURL(i)}function p(t,e,n){var l;return function(F){return l=l||N(t,e,n),new Worker(l,F)}}var E=p("",null,!1);class u{constructor(t,e){this._scene=null,this._camera=null,this._started=!1,this._initialized=!1,this._renderer=t;const n=t.gl;this._program=n.createProgram(),this._passes=e||[];const l=n.createShader(n.VERTEX_SHADER);n.shaderSource(l,this._getVertexSource()),n.compileShader(l),n.getShaderParameter(l,n.COMPILE_STATUS)||console.error(n.getShaderInfoLog(l));const F=n.createShader(n.FRAGMENT_SHADER);n.shaderSource(F,this._getFragmentSource()),n.compileShader(F),n.getShaderParameter(F,n.COMPILE_STATUS)||console.error(n.getShaderInfoLog(F)),n.attachShader(this.program,l),n.attachShader(this.program,F),n.linkProgram(this.program),n.getProgramParameter(this.program,n.LINK_STATUS)||console.error(n.getProgramInfoLog(this.program)),this.resize=()=>{n.useProgram(this._program),this._resize()},this.initialize=()=>{console.assert(!this._initialized,"ShaderProgram already initialized"),n.useProgram(this._program),this._initialize();for(const t of this.passes)t.initialize(this);this._initialized=!0,this._started=!0},this.render=(t,e)=>{n.useProgram(this._program),this._scene===t&&this._camera===e||(this.dispose(),this._scene=t,this._camera=e,this.initialize());for(const t of this.passes)t.render();this._render()},this.dispose=()=>{if(this._initialized){n.useProgram(this._program);for(const t of this.passes)t.dispose();this._dispose(),this._scene=null,this._camera=null,this._initialized=!1}}}get renderer(){return this._renderer}get scene(){return this._scene}get camera(){return this._camera}get program(){return this._program}get passes(){return this._passes}get started(){return this._started}}var G=p("",null,!1),y=function(t={}){var e,n,l,F=t,U=new Promise(((t,l)=>{e=t,n=l})),Q=Object.assign({},F),i="";i=(i=self.location.href).startsWith("blob:")?"":i.substr(0,i.replace(/[?#].*/,"").lastIndexOf("/")+1),l=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)},F.print||console.log.bind(console);var d,a,s=F.printErr||console.error.bind(console);function A(t){if(E(t))return function(t){for(var e=atob(t),n=new Uint8Array(e.length),l=0;l<e.length;++l)n[l]=e.charCodeAt(l);return n}(t.slice(p.length))}Object.assign(F,Q),Q=null,F.arguments&&F.arguments,F.thisProgram&&F.thisProgram,F.quit&&F.quit,F.wasmBinary&&(d=F.wasmBinary);var r,B,o,V,c,R,Z,h,W=!1;function m(){var t=a.buffer;F.HEAP8=r=new Int8Array(t),F.HEAP16=o=new Int16Array(t),F.HEAPU8=B=new Uint8Array(t),F.HEAPU16=V=new Uint16Array(t),F.HEAP32=c=new Int32Array(t),F.HEAPU32=R=new Uint32Array(t),F.HEAPF32=Z=new Float32Array(t),F.HEAPF64=h=new Float64Array(t)}var I,g=[],b=[],J=[],C=0,N=null,p="data:application/octet-stream;base64,",E=t=>t.startsWith(p);function u(t){return Promise.resolve().then((()=>function(t){if(t==I&&d)return new Uint8Array(d);var e=A(t);if(e)return e;if(l)return l(t);throw"both async and sync fetching of the wasm failed"}(t)))}function G(t,e,l){return u(t).then((t=>WebAssembly.instantiate(t,e))).then(l,(t=>{s(`failed to asynchronously prepare wasm: ${t}`),function(t){F.onAbort?.(t),s(t="Aborted("+t+")"),W=!0,t+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(t);throw n(e),e}(t)}))}I="data:application/octet-stream;base64,";var y=t=>{for(;t.length>0;)t.shift()(F)};F.noExitRuntime;var X,S,Y=t=>{for(var e="",n=t;B[n];)e+=X[B[n++]];return e},T={},k={},f=t=>{throw new S(t)};function H(t,e,n={}){if(!("argPackAdvance"in e))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(t,e,n={}){var l=e.name;if(t||f(`type "${l}" must have a positive integer typeid pointer`),k.hasOwnProperty(t)){if(n.ignoreDuplicateRegistrations)return;f(`Cannot register type '${l}' twice`)}if(k[t]=e,T.hasOwnProperty(t)){var F=T[t];delete T[t],F.forEach((t=>t()))}}(t,e,n)}var x=[],w=[],D=()=>w.length/2-5-x.length,v=t=>(t||f("Cannot use deleted val. handle = "+t),w[t]),z=t=>{switch(t){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:{const e=x.pop()||w.length;return w[e]=t,w[e+1]=1,e}}};function M(t){return this.fromWireType(R[t>>2])}var K={name:"emscripten::val",fromWireType:t=>{var e=v(t);return(t=>{t>9&&0==--w[t+1]&&(w[t]=void 0,x.push(t))})(t),e},toWireType:(t,e)=>z(e),argPackAdvance:8,readValueFromPointer:M,destructorFunction:null},j=(t,e)=>{switch(e){case 4:return function(t){return this.fromWireType(Z[t>>2])};case 8:return function(t){return this.fromWireType(h[t>>3])};default:throw new TypeError(`invalid float width (${e}): ${t}`)}},_=(t,e,n)=>{switch(e){case 1:return n?t=>r[t]:t=>B[t];case 2:return n?t=>o[t>>1]:t=>V[t>>1];case 4:return n?t=>c[t>>2]:t=>R[t>>2];default:throw new TypeError(`invalid integer width (${e}): ${t}`)}},O="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,L=(t,e)=>t?((t,e,n)=>{for(var l=e+n,F=e;t[F]&&!(F>=l);)++F;if(F-e>16&&t.buffer&&O)return O.decode(t.subarray(e,F));for(var U="";e<F;){var Q=t[e++];if(128&Q){var i=63&t[e++];if(192!=(224&Q)){var d=63&t[e++];if((Q=224==(240&Q)?(15&Q)<<12|i<<6|d:(7&Q)<<18|i<<12|d<<6|63&t[e++])<65536)U+=String.fromCharCode(Q);else{var a=Q-65536;U+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else U+=String.fromCharCode((31&Q)<<6|i)}else U+=String.fromCharCode(Q)}return U})(B,t,e):"",P="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,q=(t,e)=>{for(var n=t,l=n>>1,F=l+e/2;!(l>=F)&&V[l];)++l;if((n=l<<1)-t>32&&P)return P.decode(B.subarray(t,n));for(var U="",Q=0;!(Q>=e/2);++Q){var i=o[t+2*Q>>1];if(0==i)break;U+=String.fromCharCode(i)}return U},$=(t,e,n)=>{if(n??=2147483647,n<2)return 0;for(var l=e,F=(n-=2)<2*t.length?n/2:t.length,U=0;U<F;++U){var Q=t.charCodeAt(U);o[e>>1]=Q,e+=2}return o[e>>1]=0,e-l},tt=t=>2*t.length,et=(t,e)=>{for(var n=0,l="";!(n>=e/4);){var F=c[t+4*n>>2];if(0==F)break;if(++n,F>=65536){var U=F-65536;l+=String.fromCharCode(55296|U>>10,56320|1023&U)}else l+=String.fromCharCode(F)}return l},nt=(t,e,n)=>{if(n??=2147483647,n<4)return 0;for(var l=e,F=l+n-4,U=0;U<t.length;++U){var Q=t.charCodeAt(U);if(Q>=55296&&Q<=57343&&(Q=65536+((1023&Q)<<10)|1023&t.charCodeAt(++U)),c[e>>2]=Q,(e+=4)+4>F)break}return c[e>>2]=0,e-l},lt=t=>{for(var e=0,n=0;n<t.length;++n){var l=t.charCodeAt(n);l>=55296&&l<=57343&&++n,e+=4}return e},Ft=t=>{var e=(t-a.buffer.byteLength+65535)/65536;try{return a.grow(e),m(),1}catch(t){}};(()=>{for(var t=new Array(256),e=0;e<256;++e)t[e]=String.fromCharCode(e);X=t})(),S=F.BindingError=class extends Error{constructor(t){super(t),this.name="BindingError"}},F.InternalError=class extends Error{constructor(t){super(t),this.name="InternalError"}},w.push(0,1,void 0,1,null,1,!0,1,!1,1),F.count_emval_handles=D;var Ut={f:(t,e,n,l,F)=>{},h:(t,e,n,l)=>{H(t,{name:e=Y(e),fromWireType:function(t){return!!t},toWireType:function(t,e){return e?n:l},argPackAdvance:8,readValueFromPointer:function(t){return this.fromWireType(B[t])},destructorFunction:null})},g:t=>H(t,K),e:(t,e,n)=>{H(t,{name:e=Y(e),fromWireType:t=>t,toWireType:(t,e)=>e,argPackAdvance:8,readValueFromPointer:j(e,n),destructorFunction:null})},b:(t,e,n,l,F)=>{e=Y(e);var U=t=>t;if(0===l){var Q=32-8*n;U=t=>t<<Q>>>Q}var i=e.includes("unsigned");H(t,{name:e,fromWireType:U,toWireType:i?function(t,e){return this.name,e>>>0}:function(t,e){return this.name,e},argPackAdvance:8,readValueFromPointer:_(e,n,0!==l),destructorFunction:null})},a:(t,e,n)=>{var l=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][e];function F(t){var e=R[t>>2],n=R[t+4>>2];return new l(r.buffer,n,e)}H(t,{name:n=Y(n),fromWireType:F,argPackAdvance:8,readValueFromPointer:F},{ignoreDuplicateRegistrations:!0})},d:(t,e)=>{var n="std::string"===(e=Y(e));H(t,{name:e,fromWireType(t){var e,l=R[t>>2],F=t+4;if(n)for(var U=F,Q=0;Q<=l;++Q){var i=F+Q;if(Q==l||0==B[i]){var d=L(U,i-U);void 0===e?e=d:(e+=String.fromCharCode(0),e+=d),U=i+1}}else{var a=new Array(l);for(Q=0;Q<l;++Q)a[Q]=String.fromCharCode(B[F+Q]);e=a.join("")}return at(t),e},toWireType(t,e){var l;e instanceof ArrayBuffer&&(e=new Uint8Array(e));var F="string"==typeof e;F||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||f("Cannot pass non-string to std::string"),l=n&&F?(t=>{for(var e=0,n=0;n<t.length;++n){var l=t.charCodeAt(n);l<=127?e++:l<=2047?e+=2:l>=55296&&l<=57343?(e+=4,++n):e+=3}return e})(e):e.length;var U=dt(4+l+1),Q=U+4;if(R[U>>2]=l,n&&F)((t,e,n,l)=>{if(!(l>0))return 0;for(var F=n+l-1,U=0;U<t.length;++U){var Q=t.charCodeAt(U);if(Q>=55296&&Q<=57343&&(Q=65536+((1023&Q)<<10)|1023&t.charCodeAt(++U)),Q<=127){if(n>=F)break;e[n++]=Q}else if(Q<=2047){if(n+1>=F)break;e[n++]=192|Q>>6,e[n++]=128|63&Q}else if(Q<=65535){if(n+2>=F)break;e[n++]=224|Q>>12,e[n++]=128|Q>>6&63,e[n++]=128|63&Q}else{if(n+3>=F)break;e[n++]=240|Q>>18,e[n++]=128|Q>>12&63,e[n++]=128|Q>>6&63,e[n++]=128|63&Q}}e[n]=0})(e,B,Q,l+1);else if(F)for(var i=0;i<l;++i){var d=e.charCodeAt(i);d>255&&(at(Q),f("String has UTF-16 code units that do not fit in 8 bits")),B[Q+i]=d}else for(i=0;i<l;++i)B[Q+i]=e[i];return null!==t&&t.push(at,U),U},argPackAdvance:8,readValueFromPointer:M,destructorFunction(t){at(t)}})},c:(t,e,n)=>{var l,F,U,Q;n=Y(n),2===e?(l=q,F=$,Q=tt,U=t=>V[t>>1]):4===e&&(l=et,F=nt,Q=lt,U=t=>R[t>>2]),H(t,{name:n,fromWireType:t=>{for(var n,F=R[t>>2],Q=t+4,i=0;i<=F;++i){var d=t+4+i*e;if(i==F||0==U(d)){var a=l(Q,d-Q);void 0===n?n=a:(n+=String.fromCharCode(0),n+=a),Q=d+e}}return at(t),n},toWireType:(t,l)=>{"string"!=typeof l&&f(`Cannot pass non-string to C++ string type ${n}`);var U=Q(l),i=dt(4+U+e);return R[i>>2]=U/e,F(l,i+4,U+e),null!==t&&t.push(at,i),i},argPackAdvance:8,readValueFromPointer:M,destructorFunction(t){at(t)}})},i:(t,e)=>{H(t,{isVoid:!0,name:e=Y(e),argPackAdvance:0,fromWireType:()=>{},toWireType:(t,e)=>{}})},j:t=>{var e=B.length,n=2147483648;if((t>>>=0)>n)return!1;for(var l,F,U=1;U<=4;U*=2){var Q=e*(1+.2/U);Q=Math.min(Q,t+100663296);var i=Math.min(n,(l=Math.max(t,Q))+((F=65536)-l%F)%F);if(Ft(i))return!0}return!1}},Qt=function(){var t,e,l,U={a:Ut};function Q(t,e){var n;return Qt=t.exports,a=Qt.k,m(),n=Qt.l,b.unshift(n),function(t){if(C--,F.monitorRunDependencies?.(C),0==C&&N){var e=N;N=null,e()}}(),Qt}if(C++,F.monitorRunDependencies?.(C),F.instantiateWasm)try{return F.instantiateWasm(U,Q)}catch(t){s(`Module.instantiateWasm callback failed with error: ${t}`),n(t)}return(t=I,e=U,l=function(t){Q(t.instance)},G(t,e,l)).catch(n),{}}();F._pack=(t,e,n,l,U,Q,i,d,a,s,A)=>(F._pack=Qt.m)(t,e,n,l,U,Q,i,d,a,s,A);var it,dt=F._malloc=t=>(dt=F._malloc=Qt.o)(t),at=F._free=t=>(at=F._free=Qt.p)(t);function st(){function t(){it||(it=!0,F.calledRun=!0,W||(y(b),e(F),F.onRuntimeInitialized&&F.onRuntimeInitialized(),function(){if(F.postRun)for("function"==typeof F.postRun&&(F.postRun=[F.postRun]);F.postRun.length;)t=F.postRun.shift(),J.unshift(t);var t;y(J)}()))}C>0||(function(){if(F.preRun)for("function"==typeof F.preRun&&(F.preRun=[F.preRun]);F.preRun.length;)t=F.preRun.shift(),g.unshift(t);var t;y(g)}(),C>0||(F.setStatus?(F.setStatus("Running..."),setTimeout((function(){setTimeout((function(){F.setStatus("")}),1),t()}),1)):t()))}if(N=function t(){it||st(),it||(N=t)},F.preInit)for("function"==typeof F.preInit&&(F.preInit=[F.preInit]);F.preInit.length>0;)F.preInit.pop()();return st(),U};class X{constructor(t){this.dataChanged=!1,this.transformsChanged=!1,this.colorTransformsChanged=!1,this._updating=new Set,this._dirty=new Set;let e=0,n=0;this._splatIndices=new Map,this._singleSplatIndices=new Map,this._offsets=new Map,this._singleOffsets=new Map;const F=new Map,U=new Map;for(const l of t.objects)if(l instanceof c){this._splatIndices.set(l,n),this._offsets.set(l,e),F.set(e,l),e+=l.splatCount,n++;for(let t of l.splats)this._singleSplatIndices.set(t,n),this._singleOffsets.set(t,n),U.set(e,t),n++}this._vertexCount=e,this._width=2048,this._height=Math.ceil(2*this.vertexCount/this.width),this._data=new Uint32Array(this.width*this.height*4),this._transformsWidth=5,this._transformsHeight=F.size,this._transforms=new Float32Array(this._transformsWidth*this._transformsHeight*4),this._transformIndicesWidth=1024,this._transformIndicesHeight=Math.ceil(this.vertexCount/this._transformIndicesWidth),this._transformIndices=new Uint32Array(this._transformIndicesWidth*this._transformIndicesHeight),this._colorTransformsWidth=4,this._colorTransformsHeight=64,this._colorTransforms=new Float32Array(this._colorTransformsWidth*this._colorTransformsHeight*4),this._colorTransforms.fill(0),this._colorTransforms[0]=1,this._colorTransforms[5]=1,this._colorTransforms[10]=1,this._colorTransforms[15]=1,this._colorTransformIndicesWidth=1024,this._colorTransformIndicesHeight=Math.ceil(this.vertexCount/this._colorTransformIndicesWidth),this._colorTransformIndices=new Uint32Array(this._colorTransformIndicesWidth*this._colorTransformIndicesHeight),this.colorTransformIndices.fill(0),this._positions=new Float32Array(3*this.vertexCount),this._rotations=new Float32Array(4*this.vertexCount),this._scales=new Float32Array(3*this.vertexCount),this._worker=new G;const Q=t=>{const e=this._splatIndices.get(t);this._transforms.set(t.transform.buffer,20*e),this._transforms[20*e+16]=t.selected?1:0,t.positionChanged=!1,t.rotationChanged=!1,t.scaleChanged=!1,t.selectedChanged=!1,t.renderNumberChanged=!1,this.transformsChanged=!0},i=()=>{let t=!1;for(const e of this._splatIndices.keys())if(e.colorTransformChanged){t=!0;break}if(!t)return;const e=[new l];this._colorTransformIndices.fill(0);let n=1;for(const t of this._splatIndices.keys()){const l=this._offsets.get(t);for(const l of t.colorTransforms)e.includes(l)||(e.push(l),n++);for(const e of t.colorTransformsMap.keys()){const F=t.colorTransformsMap.get(e);this._colorTransformIndices[e+l]=F+n-1}t.colorTransformChanged=!1}for(let t=0;t<e.length;t++){const n=e[t];this._colorTransforms.set(n.buffer,16*t)}this.colorTransformsChanged=!0};let d;this._worker.onmessage=t=>{if(t.data.response){const e=t.data.response,n=F.get(e.offset);Q(n),i();const l=this._splatIndices.get(n);for(let t=0;t<n.splatCount;t++)this._transformIndices[e.offset+t]=l;this._data.set(e.data,8*e.offset),n.data.reattach(e.positions,e.rotations,e.scales,e.colors,e.selection),this._positions.set(e.worldPositions,3*e.offset),this._rotations.set(e.worldRotations,4*e.offset),this._scales.set(e.worldScales,3*e.offset),this._updating.delete(n),n.selectedChanged=!1,this.dataChanged=!0}},async function(){d=await y()}();const a=t=>{if(!d)return void async function(){for(;!d;)await new Promise((t=>setTimeout(t,0)))}().then((()=>{a(t)}));Q(t);const e=d._malloc(3*t.splatCount*4),n=d._malloc(4*t.splatCount*4),l=d._malloc(3*t.splatCount*4),F=d._malloc(4*t.splatCount),U=d._malloc(t.splatCount),i=d._malloc(8*t.splatCount*4),s=d._malloc(3*t.splatCount*4),A=d._malloc(4*t.splatCount*4),r=d._malloc(3*t.splatCount*4);d.HEAPF32.set(t.Positions,e/4),d.HEAPF32.set(t.Rotations,n/4),d.HEAPF32.set(t.Scales,l/4),d.HEAPU8.set(t.Colors,F),d.HEAPU8.set(t.Selections,U),d._pack(t.selected,t.splatCount,e,n,l,F,U,i,s,A,r);const B=new Uint32Array(d.HEAPU32.buffer,i,8*t.splatCount),o=new Float32Array(d.HEAPF32.buffer,s,3*t.splatCount),V=new Float32Array(d.HEAPF32.buffer,A,4*t.splatCount),c=new Float32Array(d.HEAPF32.buffer,r,3*t.splatCount),R=this._splatIndices.get(t),Z=this._offsets.get(t);for(let e=0;e<t.splatCount;e++)this._transformIndices[Z+e]=R;this._data.set(B,8*Z),this._positions.set(o,3*Z),this._rotations.set(V,4*Z),this._scales.set(c,3*Z),d._free(e),d._free(n),d._free(l),d._free(F),d._free(U),d._free(i),d._free(s),d._free(A),d._free(r),this.dataChanged=!0,this.colorTransformsChanged=!0},s=t=>{if((t.positionChanged||t.rotationChanged||t.scaleChanged||t.selectedChanged)&&Q(t),t.colorTransformChanged&&i(),!t.data.changed||t.data.detached||!t.renderNumberChanged)return;const e={position:new Float32Array(t.position.flat()),rotation:new Float32Array(t.rotation.flat()),scale:new Float32Array(t.scale.flat()),selected:t.selected,vertexCount:t.splatCount,positions:t.Positions,rotations:t.Rotations,scales:t.Scales,colors:t.Colors,selection:t.Selections,offset:this._offsets.get(t)};this._worker.postMessage({splat:e},[e.position.buffer,e.rotation.buffer,e.scale.buffer,e.positions.buffer,e.rotations.buffer,e.scales.buffer,e.colors.buffer,e.selection.buffer]),this._updating.add(t),t.data.detached=!0};this.getSplat=t=>{let e=null;for(const[n,l]of this._offsets){if(!(t>=l))break;e=n}return e},this.getLocalIndex=(t,e)=>e-this._offsets.get(t),this.markDirty=t=>{this._dirty.add(t)},this.rebuild=()=>{for(const t of this._dirty)s(t);this._dirty.clear()},this.dispose=()=>{this._worker.terminate()};for(const t of this._splatIndices.keys())a(t);i()}get offsets(){return this._offsets}get singleOffsets(){return this._singleOffsets}get data(){return this._data}get width(){return this._width}get height(){return this._height}get transforms(){return this._transforms}get transformsWidth(){return this._transformsWidth}get transformsHeight(){return this._transformsHeight}get transformIndices(){return this._transformIndices}get transformIndicesWidth(){return this._transformIndicesWidth}get transformIndicesHeight(){return this._transformIndicesHeight}get colorTransforms(){return this._colorTransforms}get colorTransformsWidth(){return this._colorTransformsWidth}get colorTransformsHeight(){return this._colorTransformsHeight}get colorTransformIndices(){return this._colorTransformIndices}get colorTransformIndicesWidth(){return this._colorTransformIndicesWidth}get colorTransformIndicesHeight(){return this._colorTransformIndicesHeight}get positions(){return this._positions}get rotations(){return this._rotations}get scales(){return this._scales}get vertexCount(){return this._vertexCount}get needsRebuild(){return this._dirty.size>0}get updating(){return this._updating.size>0}}class S{constructor(t=0,e=0,n=0,l=255){this.r=t,this.g=e,this.b=n,this.a=l}flat(){return[this.r,this.g,this.b,this.a]}flatNorm(){return[this.r/255,this.g/255,this.b/255,this.a/255]}toHexString(){return"#"+this.flat().map((t=>t.toString(16).padStart(2,"0"))).join("")}toString(){return`[${this.flat().join(", ")}]`}}class Y extends u{constructor(t,e){super(t,e),this._outlineThickness=10,this._outlineColor=new S(255,165,0,255),this._renderData=null,this._depthIndex=new Uint32Array,this._splatTexture=null,this._worker=null;const n=t.canvas,l=t.gl;let F,U,Q,i,d,a,s,A,r,B,o,V,R,Z,h,W,m,I,g;this._resize=()=>{this._camera&&(this._camera.data.setSize(n.width,n.height),this._camera.update(),F=l.getUniformLocation(this.program,"projection"),l.uniformMatrix4fv(F,!1,this._camera.data.projectionMatrix.buffer),U=l.getUniformLocation(this.program,"viewport"),l.uniform2fv(U,new Float32Array([n.width,n.height])))};const b=()=>{this._worker=new E,this._worker.onmessage=t=>{if(t.data.depthIndex){const{depthIndex:e}=t.data;this._depthIndex=e,l.bindBuffer(l.ARRAY_BUFFER,g),l.bufferData(l.ARRAY_BUFFER,e,l.STATIC_DRAW)}}};this._initialize=()=>{if(this._scene&&this._camera){this._resize(),this._scene.addEventListener("objectAdded",J),this._scene.addEventListener("objectRemoved",C);for(const t of this._scene.objects)t instanceof c&&(t.addEventListener("objectChanged",p),t.addEventListener("renderedSplatsChanged",N));this._renderData=new X(this._scene),Q=l.getUniformLocation(this.program,"focal"),l.uniform2fv(Q,new Float32Array([this._camera.data.fx,this._camera.data.fy])),i=l.getUniformLocation(this.program,"view"),l.uniformMatrix4fv(i,!1,this._camera.data.viewMatrix.buffer),B=l.getUniformLocation(this.program,"outlineThickness"),l.uniform1f(B,this.outlineThickness),o=l.getUniformLocation(this.program,"outlineColor"),l.uniform4fv(o,new Float32Array(this.outlineColor.flatNorm())),this._splatTexture=l.createTexture(),d=l.getUniformLocation(this.program,"u_texture"),l.uniform1i(d,0),Z=l.createTexture(),a=l.getUniformLocation(this.program,"u_transforms"),l.uniform1i(a,1),h=l.createTexture(),s=l.getUniformLocation(this.program,"u_transformIndices"),l.uniform1i(s,2),W=l.createTexture(),A=l.getUniformLocation(this.program,"u_colorTransforms"),l.uniform1i(A,3),m=l.createTexture(),r=l.getUniformLocation(this.program,"u_colorTransformIndices"),l.uniform1i(r,4),I=l.createBuffer(),l.bindBuffer(l.ARRAY_BUFFER,I),l.bufferData(l.ARRAY_BUFFER,new Float32Array([-2,-2,2,-2,2,2,-2,2]),l.STATIC_DRAW),V=l.getAttribLocation(this.program,"position"),l.enableVertexAttribArray(V),l.vertexAttribPointer(V,2,l.FLOAT,!1,0,0),g=l.createBuffer(),R=l.getAttribLocation(this.program,"index"),l.enableVertexAttribArray(R),l.bindBuffer(l.ARRAY_BUFFER,g),b()}else console.error("Cannot render without scene and camera")};const J=t=>{const e=t;e.object instanceof c&&e.object.addEventListener("objectChanged",p),u()},C=t=>{const e=t;e.object instanceof c&&e.object.removeEventListener("objectChanged",p),u()},N=t=>{u()},p=t=>{const e=t;e.object instanceof c&&this._renderData&&this._renderData.markDirty(e.object)},u=()=>{var t,e;null===(t=this._renderData)||void 0===t||t.dispose(),this._renderData=new X(this._scene),null===(e=this._worker)||void 0===e||e.terminate(),b()};this._render=()=>{var t,e;if(this._scene&&this._camera&&this.renderData){if(this.renderData.needsRebuild&&this.renderData.rebuild(),this.renderData.dataChanged||this.renderData.transformsChanged||this.renderData.colorTransformsChanged){this.renderData.dataChanged&&(l.activeTexture(l.TEXTURE0),l.bindTexture(l.TEXTURE_2D,this.splatTexture),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.RGBA32UI,this.renderData.width,this.renderData.height,0,l.RGBA_INTEGER,l.UNSIGNED_INT,this.renderData.data)),this.renderData.transformsChanged&&(l.activeTexture(l.TEXTURE1),l.bindTexture(l.TEXTURE_2D,Z),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.RGBA32F,this.renderData.transformsWidth,this.renderData.transformsHeight,0,l.RGBA,l.FLOAT,this.renderData.transforms),l.activeTexture(l.TEXTURE2),l.bindTexture(l.TEXTURE_2D,h),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.R32UI,this.renderData.transformIndicesWidth,this.renderData.transformIndicesHeight,0,l.RED_INTEGER,l.UNSIGNED_INT,this.renderData.transformIndices)),this.renderData.colorTransformsChanged&&(l.activeTexture(l.TEXTURE3),l.bindTexture(l.TEXTURE_2D,W),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.RGBA32F,this.renderData.colorTransformsWidth,this.renderData.colorTransformsHeight,0,l.RGBA,l.FLOAT,this.renderData.colorTransforms),l.activeTexture(l.TEXTURE4),l.bindTexture(l.TEXTURE_2D,m),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.R32UI,this.renderData.colorTransformIndicesWidth,this.renderData.colorTransformIndicesHeight,0,l.RED_INTEGER,l.UNSIGNED_INT,this.renderData.colorTransformIndices));const e=new Float32Array(this.renderData.positions.slice().buffer),n=new Float32Array(this.renderData.transforms.slice().buffer),F=new Uint32Array(this.renderData.transformIndices.slice().buffer);null===(t=this._worker)||void 0===t||t.postMessage({sortData:{positions:e,transforms:n,transformIndices:F,vertexCount:this.renderData.vertexCount}},[e.buffer,n.buffer,F.buffer]),this.renderData.dataChanged=!1,this.renderData.transformsChanged=!1,this.renderData.colorTransformsChanged=!1}this._camera.update(),null===(e=this._worker)||void 0===e||e.postMessage({viewProj:this._camera.data.viewProj.buffer}),l.viewport(0,0,n.width,n.height),l.clearColor(0,0,0,0),l.clear(l.COLOR_BUFFER_BIT),l.disable(l.DEPTH_TEST),l.enable(l.BLEND),l.blendFuncSeparate(l.ONE_MINUS_DST_ALPHA,l.ONE,l.ONE_MINUS_DST_ALPHA,l.ONE),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.uniformMatrix4fv(F,!1,this._camera.data.projectionMatrix.buffer),l.uniformMatrix4fv(i,!1,this._camera.data.viewMatrix.buffer),l.bindBuffer(l.ARRAY_BUFFER,I),l.vertexAttribPointer(V,2,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,g),l.bufferData(l.ARRAY_BUFFER,this.depthIndex,l.STATIC_DRAW),l.vertexAttribIPointer(R,1,l.INT,0,0),l.vertexAttribDivisor(R,1),l.drawArraysInstanced(l.TRIANGLE_FAN,0,4,this.depthIndex.length)}else console.error("Cannot render without scene and camera")},this._dispose=()=>{var t;if(this._scene&&this._camera&&this.renderData){this._scene.removeEventListener("objectAdded",J),this._scene.removeEventListener("objectRemoved",C);for(const t of this._scene.objects)t instanceof c&&(t.removeEventListener("objectChanged",p),t.removeEventListener("renderedSplatsChanged",p));null===(t=this._worker)||void 0===t||t.terminate(),this.renderData.dispose(),l.deleteTexture(this.splatTexture),l.deleteTexture(Z),l.deleteTexture(h),l.deleteBuffer(g),l.deleteBuffer(I)}else console.error("Cannot dispose without scene and camera")},this._setOutlineThickness=t=>{this._outlineThickness=t,this._initialized&&l.uniform1f(B,t)},this._setOutlineColor=t=>{this._outlineColor=t,this._initialized&&l.uniform4fv(o,new Float32Array(t.flatNorm()))}}get renderData(){return this._renderData}get depthIndex(){return this._depthIndex}get splatTexture(){return this._splatTexture}get outlineThickness(){return this._outlineThickness}set outlineThickness(t){this._setOutlineThickness(t)}get outlineColor(){return this._outlineColor}set outlineColor(t){this._setOutlineColor(t)}get worker(){return this._worker}_getVertexSource(){return"#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n"}_getFragmentSource(){return"#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n"}}class T{constructor(t=1){let e,n,l,F,U=0,Q=!1;this.initialize=t=>{if(!(t instanceof Y))throw new Error("FadeInPass requires a RenderProgram");U=t.started?1:0,Q=!0,e=t,n=t.renderer.gl,l=n.getUniformLocation(e.program,"useDepthFade"),n.uniform1i(l,1),F=n.getUniformLocation(e.program,"depthFade"),n.uniform1f(F,U)},this.render=()=>{var i;Q&&!(null===(i=e.renderData)||void 0===i?void 0:i.updating)&&(n.useProgram(e.program),U=Math.min(U+.01*t,1),U>=1&&(Q=!1,n.uniform1i(l,0)),n.uniform1f(F,U))}}dispose(){}}class k{constructor(t=null,e=null){this._backgroundColor=new S;const n=t||document.createElement("canvas");t||(n.style.display="block",n.style.boxSizing="border-box",n.style.width="100%",n.style.height="100%",n.style.margin="0",n.style.padding="0",document.body.appendChild(n)),n.style.background=this._backgroundColor.toHexString(),this._canvas=n,this._gl=n.getContext("webgl2",{antialias:!1});const l=e||[];e||l.push(new T),this._renderProgram=new Y(this,l),this._customPrograms=[];const F=[this._renderProgram];this.resize=()=>{const t=n.clientWidth,e=n.clientHeight;n.width===t&&n.height===e||this.setSize(t,e)},this.setSize=(t,e)=>{n.width=t,n.height=e,this._gl.viewport(0,0,n.width,n.height);for(const t of F)t.resize()},this.render=(t,e)=>{for(const n of F)n.render(t,e)},this.dispose=()=>{for(const t of F)t.dispose()},this.addProgram=t=>{var e;F.push(t),null===(e=this._customPrograms)||void 0===e||e.push(t)},this.removeProgram=t=>{const e=F.indexOf(t);if(e<0)throw new Error("Program not found");F.splice(e,1)},this.removeAllPrograms=()=>{for(let e=0;e<this._customPrograms.length;e++){var t=this._customPrograms.pop();null!=t&&this.removeProgram(t)}},this.resize()}get canvas(){return this._canvas}get gl(){return this._gl}get renderProgram(){return this._renderProgram}get backgroundColor(){return this._backgroundColor}set backgroundColor(t){this._backgroundColor=t,this._canvas.style.background=t.toHexString()}}class f{constructor(n,l,F=.5,U=.5,Q=5,i=!0,d=new t){this.enabled=!0,this.minAngle=-90,this.maxAngle=90,this.minZoom=.1,this.maxZoom=30,this.orbitSpeed=1,this.panSpeed=1,this.zoomSpeed=1,this.dampening=.12,this.setCameraTarget=()=>{};let a=d.clone(),s=a.clone(),A=F,r=U,o=Q,V=!1,c=!1,R=0,Z=0,h=0;const W={};let m=!1;n.addEventListener("objectChanged",(()=>{if(m)return;const e=n.rotation.toEuler();A=-e.y,r=-e.x;const l=n.position.x-o*Math.sin(A)*Math.cos(r),F=n.position.y+o*Math.sin(r),U=n.position.z+o*Math.cos(A)*Math.cos(r);s=new t(l,F,U)})),this.setCameraTarget=e=>{const l=e.x-n.position.x,F=e.y-n.position.y,U=e.z-n.position.z;o=Math.sqrt(l*l+F*F+U*U),r=Math.atan2(F,Math.sqrt(l*l+U*U)),A=-Math.atan2(l,U),s=new t(e.x,e.y,e.z)};const I=()=>.1+.9*(o-this.minZoom)/(this.maxZoom-this.minZoom),g=t=>{W[t.code]=!0,"ArrowUp"===t.code&&(W.KeyW=!0),"ArrowDown"===t.code&&(W.KeyS=!0),"ArrowLeft"===t.code&&(W.KeyA=!0),"ArrowRight"===t.code&&(W.KeyD=!0)},b=t=>{W[t.code]=!1,"ArrowUp"===t.code&&(W.KeyW=!1),"ArrowDown"===t.code&&(W.KeyS=!1),"ArrowLeft"===t.code&&(W.KeyA=!1),"ArrowRight"===t.code&&(W.KeyD=!1)},J=t=>{X(t),this.enabled&&(V=!0,c=2===t.button,Z=t.clientX,h=t.clientY,window.addEventListener("mouseup",C))},C=t=>{X(t),V=!1,c=!1,window.removeEventListener("mouseup",C)},N=e=>{if(X(e),!this.enabled||!V||!n)return;const l=e.clientX-Z,F=e.clientY-h;if(c){const e=I(),U=-l*this.panSpeed*.01*e,Q=-F*this.panSpeed*.01*e,i=B.RotationFromQuaternion(n.rotation).buffer,d=new t(i[0],i[3],i[6]),a=new t(i[1],i[4],i[7]);s=s.add(d.multiply(U)),s=s.add(a.multiply(Q))}else A-=l*this.orbitSpeed*.003,r+=F*this.orbitSpeed*.003,r=Math.min(Math.max(r,this.minAngle*Math.PI/180),this.maxAngle*Math.PI/180);Z=e.clientX,h=e.clientY},p=t=>{X(t);const e=I();o+=t.deltaY*this.zoomSpeed*.025*e,o=Math.min(Math.max(o,this.minZoom),this.maxZoom)},E=t=>{if(X(t),1===t.touches.length)V=!0,c=!1,Z=t.touches[0].clientX,h=t.touches[0].clientY,R=0;else if(2===t.touches.length){V=!0,c=!0,Z=(t.touches[0].clientX+t.touches[1].clientX)/2,h=(t.touches[0].clientY+t.touches[1].clientY)/2;const e=t.touches[0].clientX-t.touches[1].clientX,n=t.touches[0].clientY-t.touches[1].clientY;R=Math.sqrt(e*e+n*n)}},u=t=>{X(t),V=!1,c=!1},G=e=>{if(X(e),V&&n)if(c){const l=I(),F=e.touches[0].clientX-e.touches[1].clientX,U=e.touches[0].clientY-e.touches[1].clientY,Q=Math.sqrt(F*F+U*U);o+=(R-Q)*this.zoomSpeed*.1*l,o=Math.min(Math.max(o,this.minZoom),this.maxZoom),R=Q;const i=(e.touches[0].clientX+e.touches[1].clientX)/2,d=(e.touches[0].clientY+e.touches[1].clientY)/2,a=i-Z,A=d-h,r=B.RotationFromQuaternion(n.rotation).buffer,V=new t(r[0],r[3],r[6]),c=new t(r[1],r[4],r[7]);s=s.add(V.multiply(-a*this.panSpeed*.025*l)),s=s.add(c.multiply(-A*this.panSpeed*.025*l)),Z=i,h=d}else{const t=e.touches[0].clientX-Z,n=e.touches[0].clientY-h;A-=t*this.orbitSpeed*.003,r+=n*this.orbitSpeed*.003,r=Math.min(Math.max(r,this.minAngle*Math.PI/180),this.maxAngle*Math.PI/180),Z=e.touches[0].clientX,h=e.touches[0].clientY}},y=(t,e,n)=>(1-n)*t+n*e;this.update=()=>{m=!0,F=y(F,A,this.dampening),U=y(U,r,this.dampening),Q=y(Q,o,this.dampening),a=a.lerp(s,this.dampening);const l=a.x+Q*Math.sin(F)*Math.cos(U),i=a.y-Q*Math.sin(U),d=a.z-Q*Math.cos(F)*Math.cos(U);n.position=new t(l,i,d);const V=a.subtract(n.position).normalize(),c=Math.asin(-V.y),R=Math.atan2(V.x,V.z);n.rotation=e.FromEuler(new t(c,R,0));const Z=.025,h=.01,I=B.RotationFromQuaternion(n.rotation).buffer,g=new t(-I[2],-I[5],-I[8]),b=new t(I[0],I[3],I[6]);W.KeyS&&(s=s.add(g.multiply(Z))),W.KeyW&&(s=s.subtract(g.multiply(Z))),W.KeyA&&(s=s.subtract(b.multiply(Z))),W.KeyD&&(s=s.add(b.multiply(Z))),W.KeyE&&(A+=h),W.KeyQ&&(A-=h),W.KeyR&&(r+=h),W.KeyF&&(r-=h),m=!1};const X=t=>{t.preventDefault(),t.stopPropagation()};this.dispose=()=>{l.removeEventListener("dragenter",X),l.removeEventListener("dragover",X),l.removeEventListener("dragleave",X),l.removeEventListener("contextmenu",X),l.removeEventListener("mousedown",J),l.removeEventListener("mousemove",N),l.removeEventListener("wheel",p),l.removeEventListener("touchstart",E),l.removeEventListener("touchend",u),l.removeEventListener("touchmove",G),i&&(window.removeEventListener("keydown",g),window.removeEventListener("keyup",b))},i&&(window.addEventListener("keydown",g),window.addEventListener("keyup",b)),l.addEventListener("dragenter",X),l.addEventListener("dragover",X),l.addEventListener("dragleave",X),l.addEventListener("contextmenu",X),l.addEventListener("mousedown",J),l.addEventListener("mousemove",N),l.addEventListener("wheel",p),l.addEventListener("touchstart",E),l.addEventListener("touchend",u),l.addEventListener("touchmove",G),this.update()}}class H{constructor(n,l){this.moveSpeed=1.5,this.lookSpeed=.7,this.dampening=.5;const F={};let U=n.rotation.toEuler().x,Q=n.rotation.toEuler().y,i=n.position,d=!1;const a=()=>{l.requestPointerLock()},s=()=>{d=document.pointerLockElement===l,d?l.addEventListener("mousemove",A):l.removeEventListener("mousemove",A)},A=t=>{const e=t.movementX,n=t.movementY;Q+=e*this.lookSpeed*.001,U-=n*this.lookSpeed*.001,U=Math.max(-Math.PI/2,Math.min(Math.PI/2,U))},r=t=>{F[t.code]=!0,"ArrowUp"===t.code&&(F.KeyW=!0),"ArrowDown"===t.code&&(F.KeyS=!0),"ArrowLeft"===t.code&&(F.KeyA=!0),"ArrowRight"===t.code&&(F.KeyD=!0)},o=t=>{F[t.code]=!1,"ArrowUp"===t.code&&(F.KeyW=!1),"ArrowDown"===t.code&&(F.KeyS=!1),"ArrowLeft"===t.code&&(F.KeyA=!1),"ArrowRight"===t.code&&(F.KeyD=!1),"Escape"===t.code&&document.exitPointerLock()};this.update=()=>{const l=B.RotationFromQuaternion(n.rotation).buffer,d=new t(-l[2],-l[5],-l[8]),a=new t(l[0],l[3],l[6]);let s=new t(0,0,0);F.KeyS&&(s=s.add(d)),F.KeyW&&(s=s.subtract(d)),F.KeyA&&(s=s.subtract(a)),F.KeyD&&(s=s.add(a)),s=new t(s.x,0,s.z),s.magnitude()>0&&(s=s.normalize()),i=i.add(s.multiply(.01*this.moveSpeed)),n.position=n.position.add(i.subtract(n.position).multiply(this.dampening)),n.rotation=e.FromEuler(new t(U,Q,0))};const V=t=>{t.preventDefault(),t.stopPropagation()};this.dispose=()=>{l.removeEventListener("dragenter",V),l.removeEventListener("dragover",V),l.removeEventListener("dragleave",V),l.removeEventListener("contextmenu",V),l.removeEventListener("mousedown",a),document.removeEventListener("pointerlockchange",s),window.removeEventListener("keydown",r),window.removeEventListener("keyup",o)},window.addEventListener("keydown",r),window.addEventListener("keyup",o),l.addEventListener("dragenter",V),l.addEventListener("dragover",V),l.addEventListener("dragleave",V),l.addEventListener("contextmenu",V),l.addEventListener("mousedown",a),document.addEventListener("pointerlockchange",s),this.update()}}class x{constructor(t,e){this.normal=t,this.point=e}intersect(t,e){const n=this.normal.dot(e);if(Math.abs(n)<1e-4)return null;const l=this.normal.dot(this.point.subtract(t))/n;return l<0?null:t.add(e.multiply(l))}}class w{initialize(t){}render(){}dispose(){}}class D extends u{constructor(t,e=[]){super(t,e),this._renderData=null,this._depthIndex=new Uint32Array,this._splatTexture=null;const n=t.canvas,F=t.gl;let U,Q,i,d,a,s,A,r,B,o,V;this._resize=()=>{this._camera&&(this._camera.data.setSize(n.width,n.height),this._camera.update(),Q=F.getUniformLocation(this.program,"projection"),F.uniformMatrix4fv(Q,!1,this._camera.data.projectionMatrix.buffer),i=F.getUniformLocation(this.program,"viewport"),F.uniform2fv(i,new Float32Array([n.width,n.height])))};const c=()=>{null!==t.renderProgram.worker?(U=t.renderProgram.worker,U.onmessage=t=>{if(t.data.depthIndex){const{depthIndex:e}=t.data;this._depthIndex=e,F.bindBuffer(F.ARRAY_BUFFER,V),F.bufferData(F.ARRAY_BUFFER,e,F.STATIC_DRAW)}}):console.error("Render program is not initialized. Cannot render without worker")};this._initialize=()=>{if(!this._scene||!this._camera)return void console.error("Cannot render without scene and camera");this._resize(),this._scene.addEventListener("objectAdded",Z),this._scene.addEventListener("objectRemoved",h);for(const t of this._scene.objects)t instanceof R&&(null===this._renderData?(this._renderData=t.data,t.addEventListener("objectChanged",W)):console.warn("Multiple Splatv objects are not currently supported"));if(null===this._renderData)return void console.error("Cannot render without Splatv object");d=F.getUniformLocation(this.program,"focal"),F.uniform2fv(d,new Float32Array([this._camera.data.fx,this._camera.data.fy])),a=F.getUniformLocation(this.program,"view"),F.uniformMatrix4fv(a,!1,this._camera.data.viewMatrix.buffer),this._splatTexture=F.createTexture(),s=F.getUniformLocation(this.program,"u_texture"),F.uniform1i(s,0),A=F.getUniformLocation(this.program,"time"),F.uniform1f(A,Math.sin(Date.now()/1e3)/2+.5),o=F.createBuffer(),F.bindBuffer(F.ARRAY_BUFFER,o),F.bufferData(F.ARRAY_BUFFER,new Float32Array([-2,-2,2,-2,2,2,-2,2]),F.STATIC_DRAW),r=F.getAttribLocation(this.program,"position"),F.enableVertexAttribArray(r),F.vertexAttribPointer(r,2,F.FLOAT,!1,0,0),V=F.createBuffer(),B=F.getAttribLocation(this.program,"index"),F.enableVertexAttribArray(B),F.bindBuffer(F.ARRAY_BUFFER,V),c(),F.activeTexture(F.TEXTURE0),F.bindTexture(F.TEXTURE_2D,this._splatTexture),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_S,F.CLAMP_TO_EDGE),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_T,F.CLAMP_TO_EDGE),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MIN_FILTER,F.NEAREST),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MAG_FILTER,F.NEAREST),F.texImage2D(F.TEXTURE_2D,0,F.RGBA32UI,this._renderData.width,this._renderData.height,0,F.RGBA_INTEGER,F.UNSIGNED_INT,this._renderData.data);const t=this._renderData.positions,e=new Float32Array((new l).buffer),n=new Uint32Array(this._renderData.vertexCount);n.fill(0),U.postMessage({sortData:{positions:t,transforms:e,transformIndices:n,vertexCount:this._renderData.vertexCount}},[t.buffer,e.buffer,n.buffer])};const Z=t=>{const e=t;e.object instanceof R&&(null===this._renderData?(this._renderData=e.object.data,e.object.addEventListener("objectChanged",W)):console.warn("Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.")),this.dispose()},h=t=>{const e=t;e.object instanceof R&&this._renderData===e.object.data&&(this._renderData=null,e.object.removeEventListener("objectChanged",W)),this.dispose()},W=t=>{const e=t;e.object instanceof R&&this._renderData===e.object.data&&this.dispose()};this._render=()=>{this._scene&&this._camera?this._renderData?(this._camera.update(),U.postMessage({viewProj:this._camera.data.viewProj.buffer}),F.viewport(0,0,n.width,n.height),F.clearColor(0,0,0,0),F.clear(F.COLOR_BUFFER_BIT),F.disable(F.DEPTH_TEST),F.enable(F.BLEND),F.blendFuncSeparate(F.ONE_MINUS_DST_ALPHA,F.ONE,F.ONE_MINUS_DST_ALPHA,F.ONE),F.blendEquationSeparate(F.FUNC_ADD,F.FUNC_ADD),F.uniformMatrix4fv(Q,!1,this._camera.data.projectionMatrix.buffer),F.uniformMatrix4fv(a,!1,this._camera.data.viewMatrix.buffer),F.uniform1f(A,Math.sin(Date.now()/1e3)/2+.5),F.bindBuffer(F.ARRAY_BUFFER,o),F.vertexAttribPointer(r,2,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,V),F.bufferData(F.ARRAY_BUFFER,this._depthIndex,F.STATIC_DRAW),F.vertexAttribIPointer(B,1,F.INT,0,0),F.vertexAttribDivisor(B,1),F.drawArraysInstanced(F.TRIANGLE_FAN,0,4,this._renderData.vertexCount)):console.warn("Cannot render without Splatv object"):console.error("Cannot render without scene and camera")},this._dispose=()=>{if(this._scene&&this._camera){this._scene.removeEventListener("objectAdded",Z),this._scene.removeEventListener("objectRemoved",h);for(const t of this._scene.objects)t instanceof R&&this._renderData===t.data&&(this._renderData=null,t.removeEventListener("objectChanged",W));null==U||U.terminate(),F.deleteTexture(this._splatTexture),F.deleteBuffer(V),F.deleteBuffer(o)}else console.error("Cannot dispose without scene and camera")}}get renderData(){return this._renderData}_getVertexSource(){return"#version 300 es\nprecision highp float;\nprecision highp int;\n  \nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\nuniform float time;\n  \nin vec2 position;\nin int index;\n  \nout vec4 vColor;\nout vec2 vPosition;\n  \nvoid main () {\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\n    vec2 trbf = unpackHalf2x16(motion1.w);\n    float dt = time - trbf.x;\n\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\n    if(topacity < 0.02) return;\n\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\n\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \n      \n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\n      \n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\n    vec4 pos = projection * cam;\n  \n    float clip = 1.2 * pos.w;\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\n\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\n    rot /= sqrt(dot(rot, rot));\n  \n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\n    mat3 R = mat3(\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\n    mat3 M = S * R;\n    mat3 Vrk = 4.0 * transpose(M) * M;\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n  \n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n  \n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n  \n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      \n    uint rgba = static1.w;\n    vColor = \n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \n        vec4(1.0, 1.0, 1.0, topacity) *\n        vec4(\n            (rgba) & 0xffu, \n            (rgba >> 8) & 0xffu, \n            (rgba >> 16) & 0xffu, \n            (rgba >> 24) & 0xffu) / 255.0;\n\n    vec2 vCenter = vec2(pos) / pos.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n    vPosition = position;\n}\n"}_getFragmentSource(){return"#version 300 es\nprecision highp float;\n  \nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n"}}let v=class t{constructor(t,e,n){this.bounds=t,this.boxes=e,this.left=null,this.right=null,this.pointIndices=[],n.length>1?this.split(t,e,n):n.length>0&&(this.pointIndices=n)}split(e,n,l){const F=e.size().maxComponent();l.sort(((t,e)=>n[t].center().getComponent(F)-n[e].center().getComponent(F)));const U=Math.floor(l.length/2),Q=l.slice(0,U),i=l.slice(U);this.left=new t(e,n,Q),this.right=new t(e,n,i)}queryRange(t){return this.bounds.intersects(t)?null!==this.left&&null!==this.right?this.left.queryRange(t).concat(this.right.queryRange(t)):this.pointIndices.filter((e=>t.intersects(this.boxes[e]))):[]}};class z{constructor(t,e){const n=e.map(((t,e)=>e));this.root=new v(t,e,n)}queryRange(t){return this.root.queryRange(t)}}class M{constructor(e,n=100,l=1){let F=0,U=null,Q=[],i=[];this.testLayer=(t,n,l)=>{const F=e.renderData;i=[];for(const e of F.singleOffsets.keys()){const F=e.bounds;"x"===l?n?F.center().x>=t&&i.push(e):F.center().x<t&&i.push(e):"y"===l?n?F.center().y>=t&&i.push(e):F.center().y<t&&i.push(e):"z"===l&&(n?F.center().z>=t&&i.push(e):F.center().z<t&&i.push(e))}return i},this.testPoint=(d,a)=>{if(null===e.renderData||null===e.camera)return console.error("IntersectionTester cannot be called before renderProgram has been initialized"),null;if((()=>{if(null===e.renderData)return void console.error("IntersectionTester cannot be called before renderProgram has been initialized");const n=performance.now();Q=[];const l=e.renderData,d=new Array(l.offsets.size);let a=0;const s=new r(new t(1/0,1/0,1/0),new t(-1/0,-1/0,-1/0));for(const t of l.offsets.keys()){const e=t.bounds;d[a++]=e,s.expand(e.min),s.expand(e.max),Q.push(t)}s.permute(),U=new z(s,d);const A=performance.now()-n;console.log(`creating BVH with SPLAT:  ${A/1e3} s (${A} ms).`);const B=performance.now();i=[];const o=new Array(l.singleOffsets.size);let V=0;const c=new r(new t(1/0,1/0,1/0),new t(-1/0,-1/0,-1/0));for(const t of l.singleOffsets.keys()){const e=t.bounds;o[V++]=e,c.expand(e.min),c.expand(e.max),i.push(t)}c.permute(),new z(c,o);const R=performance.now()-B;console.log(`creating BVH with SPLAT:  ${R/1e3} s (${R} ms).`),console.log("Got "+d.length+" boxes for Splat!"),console.log("Got "+o.length+" boxes for Single Splats!"),F=l.vertexCount})(),null===U)return console.error("Failed to build octree for IntersectionTester"),null;const s=e.renderData,A=e.camera;F!==s.vertexCount&&console.warn("IntersectionTester has not been rebuilt since the last render");const B=A.screenPointToRay(d,a);for(let e=0;e<n;e+=l){const n=A.position.add(B.multiply(e)),F=new t(n.x-l/2,n.y-l/2,n.z-l/2),i=new t(n.x+l/2,n.y+l/2,n.z+l/2),d=new r(F,i),a=U.queryRange(d);if(a.length>0)return Q[a[0]]}return null},this.testPointSingleSplats=(F,U)=>{if(null===e.renderData||null===e.camera)return console.error("IntersectionTester cannot be called before renderProgram has been initialized"),null;const Q=e.renderData,d=e.camera;i=[];const a=d.screenPointToRay(F,U);for(let e=0;e<n;e+=l){const n=d.position.add(a.multiply(e)),F=new t(n.x-l/2,n.y-l/2,n.z-l/2),U=new t(n.x+l/2,n.y+l/2,n.z+l/2),s=new r(F,U);for(const t of Q.singleOffsets.keys())t.bounds.intersects(s)&&i.push(t)}return i}}}class K{constructor(e=void 0){this.left=null,this.right=null,this.objects=[],this.bounds=new r(new t(1/0,1/0,1/0),new t(-1/0,-1/0,-1/0)),void 0!==e&&(e.forEach((t=>{this.bounds.expand(t.bounds.min),this.bounds.expand(t.bounds.max)})),e.length<=2?this.objects=e:this.split(e))}split(t){const e=Math.floor(t.length/2);t.sort(((t,e)=>t.bounds.center().x-e.bounds.center().x)),this.left=new K(t.slice(0,e)),this.right=new K(t.slice(e))}intersects(t,e){return t.intersectsBox(this.bounds,e)?this.objects.length>0?this.objects.filter((n=>t.intersectsBox(n.bounds,e))):[...this.left?this.left.intersects(t,e):[],...this.right?this.right.intersects(t,e):[]]:[]}}class j{constructor(t,e){this.origin=t,this.direction=e.normalize()}getPoint(t){return this.origin.add(this.direction.multiply(t))}intersectsBox(t,e=1/0){let n=(t.min.x-this.origin.x)/this.direction.x,l=(t.max.x-this.origin.x)/this.direction.x;n>l&&([n,l]=[l,n]);let F=(t.min.y-this.origin.y)/this.direction.y,U=(t.max.y-this.origin.y)/this.direction.y;if(F>U&&([F,U]=[U,F]),n>U||F>l)return!1;F>n&&(n=F),U<l&&(l=U);let Q=(t.min.z-this.origin.z)/this.direction.z,i=(t.max.z-this.origin.z)/this.direction.z;return Q>i&&([Q,i]=[i,Q]),!(n>i||Q>l)&&(Q>n&&(n=Q),i<l&&(l=i),n<e&&l>0)}}class _{constructor(t){this._camera=t,this._cameraData=this._camera.data,this._frustumCorners=[]}calculateFrustum(){const e=this._cameraData.near,n=this._cameraData.far,l=this._cameraData.fx,F=this._cameraData.fy,U=Math.tan(F/2)*e,Q=Math.tan(l/2)*e,i=Math.tan(F/2)*n,d=Math.tan(l/2)*n,a=new t(-Q,U,-e),s=new t(Q,U,-e),A=new t(-Q,-U,-e),r=new t(Q,-U,-e),B=new t(-d,i,n),o=new t(d,i,n),V=new t(-d,-i,n),c=new t(d,-i,n);return this._frustumCorners.push(this.cameraToWorldCoords(a),this.cameraToWorldCoords(s),this.cameraToWorldCoords(A),this.cameraToWorldCoords(r),this.cameraToWorldCoords(B),this.cameraToWorldCoords(o),this.cameraToWorldCoords(V),this.cameraToWorldCoords(c)),this._frustumCorners}cameraToWorldCoords(e){const n=new h(e.x,e.y,e.z,1),l=this._cameraData.viewMatrix.invert(),F=n.multiply(l);return new t(F.x/F.w,F.y/F.w,F.z/F.w)}pointInFrustum(t){const e=[this.createPlane(this._frustumCorners[0],this._frustumCorners[1],this._frustumCorners[2]),this.createPlane(this._frustumCorners[4],this._frustumCorners[5],this._frustumCorners[6]),this.createPlane(this._frustumCorners[0],this._frustumCorners[2],this._frustumCorners[4]),this.createPlane(this._frustumCorners[1],this._frustumCorners[3],this._frustumCorners[5]),this.createPlane(this._frustumCorners[0],this._frustumCorners[1],this._frustumCorners[4]),this.createPlane(this._frustumCorners[2],this._frustumCorners[3],this._frustumCorners[6])];return e[0].distanceToPoint(t)<=0&&e[1].distanceToPoint(t)>=0&&e[2].distanceToPoint(t)<=0&&e[3].distanceToPoint(t)>=0&&e[4].distanceToPoint(t)>=0&&e[5].distanceToPoint(t)<=0}createPlane(t,e,n){const l=e.subtract(t),F=n.subtract(t),U=l.cross(F).normalize(),Q=-U.dot(t);return new O(U,Q)}}class O{constructor(t,e){this.normal=t,this.d=e}distanceToPoint(t){return this.normal.dot(t)+this.d}}class L extends u{constructor(t,e,n,l=new Float32Array([1,0,0,.2])){2!==n.length&&console.log("Please provide 2 oder 8 corners"),super(t,e);const F=t.gl;let U,Q,i,d,a,s,A;if(2===n.length){const[t,e,l]=n[0],[F,U,Q]=n[1];s=new Float32Array([t,e,l,F,e,l,t,e,l,t,U,l,t,e,l,t,e,Q,F,e,l,F,U,l,F,e,l,F,e,Q,t,U,l,F,U,l,t,U,l,t,U,Q,t,e,Q,F,e,Q,t,e,Q,t,U,Q,F,U,l,F,U,Q,F,e,Q,F,U,Q,t,U,Q,F,U,Q]),A=new Float32Array([t,e,l,F,e,l,t,U,l,F,e,l,F,U,l,t,U,l,t,e,Q,F,e,Q,t,U,Q,F,e,Q,F,U,Q,t,U,Q,t,e,l,t,e,Q,t,U,l,t,U,Q,t,e,Q,t,U,l,F,e,l,F,e,Q,F,U,l,F,U,Q,F,e,Q,F,U,l,t,e,l,F,e,l,t,e,Q,F,e,Q,F,e,l,t,e,Q,t,U,l,F,U,l,t,U,Q,F,U,Q,F,U,l,t,U,Q])}else{const[t,e,l]=n[0],[F,U,Q]=n[1],[i,d,a]=n[2],[r,B,o]=n[3],[V,c,R]=n[4],[Z,h,W]=n[5],[m,I,g]=n[6],[b,J,C]=n[7];s=new Float32Array([t,e,l,F,U,Q,t,e,l,i,d,a,t,e,l,V,c,R,F,U,Q,r,B,o,F,U,Q,Z,h,W,i,d,a,r,B,o,i,d,a,m,I,g,V,c,R,Z,h,W,V,c,R,m,I,g,r,B,o,b,J,C,Z,h,W,b,J,C,m,I,g,b,J,C]),A=new Float32Array([t,e,l,F,U,Q,i,d,a,F,U,Q,r,B,o,i,d,a,V,c,R,Z,h,W,m,I,g,Z,h,W,b,J,C,m,I,g,t,e,l,V,c,R,i,d,a,m,I,g,V,c,R,i,d,a,F,U,Q,Z,h,W,r,B,o,b,J,C,Z,h,W,r,B,o,t,e,l,F,U,Q,V,c,R,Z,h,W,F,U,Q,V,c,R,i,d,a,r,B,o,m,I,g,b,J,C,r,B,o,m,I,g])}const r=new Float32Array([0,0,0,1]);this._initialize=()=>{U=F.createBuffer(),Q=F.getAttribLocation(this.program,"position"),F.enableVertexAttribArray(Q),i=F.getUniformLocation(this.program,"projection"),d=F.getUniformLocation(this.program,"view"),a=F.getUniformLocation(this.program,"cubeColor")};this._render=()=>{if(!this._camera)throw new Error("Camera not set");F.enable(F.BLEND),F.blendFunc(F.SRC_ALPHA,F.ONE_MINUS_SRC_ALPHA),F.uniformMatrix4fv(i,!1,this._camera.data.projectionMatrix.buffer),F.uniformMatrix4fv(d,!1,this._camera.data.viewMatrix.buffer),((t,e)=>{F.lineWidth(5),F.uniform4fv(a,e),F.bindBuffer(F.ARRAY_BUFFER,U),F.bufferData(F.ARRAY_BUFFER,t,F.STATIC_DRAW),F.vertexAttribPointer(Q,3,F.FLOAT,!1,0,0),F.drawArrays(F.LINES,0,24)})(s,r),((t,e)=>{F.lineWidth(5),F.uniform4fv(a,e),F.bindBuffer(F.ARRAY_BUFFER,U),F.bufferData(F.ARRAY_BUFFER,t,F.STATIC_DRAW),F.vertexAttribPointer(Q,3,F.FLOAT,!1,0,0),F.drawArrays(F.TRIANGLES,0,36)})(A,l)},this._resize=()=>{},this._dispose=()=>{}}_getFragmentSource(){return"#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n"}_getVertexSource(){return"#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n"}}class P{static draw(t,e,n){let l=new Float32Array([e.x+n/2,e.y+n/2,e.z+n/2]),F=new Float32Array([e.x-n/2,e.y-n/2,e.z-n/2]);var U=new L(t,[],[l,F]);t.addProgram(U)}static drawCone(t,e){let n=[];for(let t=0;t<e.length;t++)n.push(new Float32Array([e[t].x,e[t].y,e[t].z]));var l=new L(t,[],n);t.addProgram(l)}}class q{constructor(e,n){let l=[];if(this.renderer=e,this.renderProgram=e.renderProgram,n){const t=this.renderProgram.renderData;for(const e of t.singleOffsets.keys())e.bounds,l.push(e);this.bvh=new K(l)}this.testBox=(e,n)=>{const F=this.renderProgram.renderData;if(void 0===F)return null;l=[];const[U,Q,i]=e,[d,a,s]=n,A=new t(U,Q,i),B=new t(d,a,s),o=new r(B,A);o.permute();for(const t of F.singleOffsets.keys())o.contains(t.bounds.center())&&l.push(t);return l},this.testCameraViewFrustum=t=>{this.renderer.removeAllPrograms();const e=this.renderProgram.renderData;var n=new _(t),F=n.calculateFrustum();l=[],P.drawCone(this.renderer,F);for(const t of e.singleOffsets.keys())n.pointInFrustum(t.bounds.center())&&l.push(t);return l}}testPointSingleSplats(t,e,n,l){if(void 0===this.bvh)return null;if(!n)return console.error("Camera is not initialized"),null;const F=new j(n.position,n.screenPointToRay(t,e));return this.bvh.intersects(F,l)}}class $ extends u{constructor(t,e){super(t,e);const n=t.gl;let l,F,U,Q,i;const d=new Float32Array([-50,0,0,50,0,0]),a=new Float32Array([0,-50,0,0,50,0]),s=new Float32Array([0,0,-50,0,0,50]),A=new Float32Array([1,0,0,.5]),r=new Float32Array([0,1,0,.5]),B=new Float32Array([0,.5,1,.5]);this._initialize=()=>{l=n.createBuffer(),F=n.getAttribLocation(this.program,"position"),n.enableVertexAttribArray(F),U=n.getUniformLocation(this.program,"projection"),Q=n.getUniformLocation(this.program,"view"),i=n.getUniformLocation(this.program,"axisColor")};const o=(t,e)=>{n.uniform4fv(i,e),n.bindBuffer(n.ARRAY_BUFFER,l),n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW),n.vertexAttribPointer(F,3,n.FLOAT,!1,0,0),n.drawArrays(n.LINES,0,2)};this._resize=()=>{},this._render=()=>{if(!this._camera)throw new Error("Camera not set");n.enable(n.BLEND),n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),n.uniformMatrix4fv(U,!1,this._camera.data.projectionMatrix.buffer),n.uniformMatrix4fv(Q,!1,this._camera.data.viewMatrix.buffer),o(d,A),o(a,r),o(s,B)},this._dispose=()=>{}}_getVertexSource(){return"#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n"}_getFragmentSource(){return"#version 300 es\nprecision mediump float;\nuniform vec4 axisColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = axisColor;\n}\n"}}class tt extends u{constructor(t,e,n,l,F=new Float32Array([1,0,0,.2])){super(t,e);const U=t.gl;let Q,i,d,a,s,A=[],r=[],B=n.length;for(var o=0;o<B;o++){const[t,e,F]=n[o],[U,Q,i]=l[o],d=new Float32Array([t,e,F,U,e,F,t,e,F,t,Q,F,t,e,F,t,e,i,U,e,F,U,Q,F,U,e,F,U,e,i,t,Q,F,U,Q,F,t,Q,F,t,Q,i,t,e,i,U,e,i,t,e,i,t,Q,i,U,Q,F,U,Q,i,U,e,i,U,Q,i,t,Q,i,U,Q,i]);A.push(...d);const a=new Float32Array([t,e,F,U,e,F,t,Q,F,U,e,F,U,Q,F,t,Q,F,t,e,i,U,e,i,t,Q,i,U,e,i,U,Q,i,t,Q,i,t,e,F,t,e,i,t,Q,F,t,Q,i,t,e,i,t,Q,F,U,e,F,U,e,i,U,Q,F,U,Q,i,U,e,i,U,Q,F,t,e,F,U,e,F,t,e,i,U,e,i,U,e,F,t,e,i,t,Q,F,U,Q,F,t,Q,i,U,Q,i,U,Q,F,t,Q,i]);r.push(...a)}let V=new Float32Array(A),c=new Float32Array(r);const R=new Float32Array([0,0,0,1]);this._initialize=()=>{Q=U.createBuffer(),i=U.getAttribLocation(this.program,"position"),U.enableVertexAttribArray(i),d=U.getUniformLocation(this.program,"projection"),a=U.getUniformLocation(this.program,"view"),s=U.getUniformLocation(this.program,"cubeColor")};this._render=()=>{if(!this._camera)throw new Error("Camera not set");U.enable(U.BLEND),U.blendFunc(U.SRC_ALPHA,U.ONE_MINUS_SRC_ALPHA),U.uniformMatrix4fv(d,!1,this._camera.data.projectionMatrix.buffer),U.uniformMatrix4fv(a,!1,this._camera.data.viewMatrix.buffer),((t,e)=>{U.lineWidth(5),U.uniform4fv(s,e),U.bindBuffer(U.ARRAY_BUFFER,Q),U.bufferData(U.ARRAY_BUFFER,t,U.STATIC_DRAW),U.vertexAttribPointer(i,3,U.FLOAT,!1,0,0),U.drawArrays(U.LINES,0,24*B)})(V,R),((t,e)=>{U.lineWidth(5),U.uniform4fv(s,e),U.bindBuffer(U.ARRAY_BUFFER,Q),U.bufferData(U.ARRAY_BUFFER,t,U.STATIC_DRAW),U.vertexAttribPointer(i,3,U.FLOAT,!1,0,0),U.drawArrays(U.TRIANGLES,0,36*B)})(c,F)},this._resize=()=>{},this._dispose=()=>{}}_getFragmentSource(){return"#version 300 es\nprecision mediump float;\nuniform vec4 cubeColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = cubeColor;\n}\n"}_getVertexSource(){return"#version 300 es\nuniform mat4 projection, view;\n\nin vec3 position;\n\nvoid main() {\n    gl_Position = projection * view * vec4(position, 1.0);\n}\n"}}export{$ as AxisProgram,W as Camera,Z as CameraData,S as Color32,V as Constants,L as CubeVisualisationProgram,H as FPSControls,T as FadeInPass,M as IntersectionTester,b as Loader,B as Matrix3,l as Matrix4,tt as MultibleCubesProgram,d as Object3D,f as OrbitControls,J as PLYLoader,x as Plane,e as Quaternion,q as Raycaster,X as RenderData,Y as RenderProgram,m as Scene,w as ShaderPass,u as ShaderProgram,o as SingleSplat,c as Splat,a as SplatData,R as Splatv,s as SplatvData,C as SplatvLoader,t as Vector3,h as Vector4,D as VideoRenderProgram,k as WebGLRenderer};
//# sourceMappingURL=index.js.map
