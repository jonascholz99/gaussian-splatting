import { Box3 } from "../math/Box3";
import { Vector3 } from "../math/Vector3";
import { Quaternion } from "../math/Quaternion";
import { SplatData } from "./SplatData";
declare class SingleSplat {
    private _index;
    private _data;
    private _bounds;
    private _defaultColor;
    recalculateBounds: () => void;
    translate: (translation: Vector3) => void;
    rotate: (rotation: Quaternion) => void;
    scale: (scale: Vector3) => void;
    constructor(index: number, data: SplatData);
    reattach(position: Float32Array, rotation: Float32Array, scale: Float32Array, color: Uint8Array, selection: Uint8Array): void;
    get Selected(): number;
    set Selected(value: number);
    get Rendered(): number;
    set Rendered(value: number);
    get Position(): Float32Array;
    get Rotation(): Float32Array;
    get Scale(): Float32Array;
    set Color(colorVector: Uint8Array);
    get Color(): Uint8Array;
    ResetColor(): void;
    get bounds(): Box3;
    get PositionVec3(): Vector3;
    get index(): number;
    get ScaleVec3(): Vector3;
    setTransparency(alpha: number): void;
    setBlending(alpha: number): void;
}
export { SingleSplat };
